

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Aug  8 20:55:22 2023

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    67                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    68                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    69  0000                     
    70                           ; Version 1.45
    71                           ; Generated 16/11/2017 GMT
    72                           ; 
    73                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    74                           ; All rights reserved.
    75                           ; 
    76                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    77                           ; 
    78                           ; Redistribution and use in source and binary forms, with or without modification, are
    79                           ; permitted provided that the following conditions are met:
    80                           ; 
    81                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    82                           ;        conditions and the following disclaimer.
    83                           ; 
    84                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    85                           ;        of conditions and the following disclaimer in the documentation and/or other
    86                           ;        materials provided with the distribution.
    87                           ; 
    88                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    89                           ;        software without specific prior written permission.
    90                           ; 
    91                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    92                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    93                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    94                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    95                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    96                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    97                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    98                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    99                           ; 
   100                           ; 
   101                           ; Code-generator required, PIC18F4620 Definitions
   102                           ; 
   103                           ; SFR Addresses
   104  0000                     
   105                           	psect	idataCOMRAM
   106  00377A                     __pidataCOMRAM:
   107                           	opt stack 0
   108                           
   109                           ;initializer for _LCD_INIT_STRING
   110  00377A  28                 	db	40
   111  00377B  0C                 	db	12
   112  00377C  01                 	db	1
   113  00377D  06                 	db	6
   114                           
   115                           	psect	mediumconst
   116  00FEF6                     __pmediumconst:
   117                           	opt stack 0
   118  00FEF6  00                 	db	0
   119  00FEF7                     __powers_:
   120                           	opt stack 0
   121  00FEF7  0000               	dw	0
   122  00FEF9  3F80               	dw	16256
   123  00FEFB  0000               	dw	0
   124  00FEFD  4120               	dw	16672
   125  00FEFF  0000               	dw	0
   126  00FF01  42C8               	dw	17096
   127  00FF03  0000               	dw	0
   128  00FF05  447A               	dw	17530
   129  00FF07  4000               	dw	16384
   130  00FF09  461C               	dw	17948
   131  00FF0B  5000               	dw	20480
   132  00FF0D  47C3               	dw	18371
   133  00FF0F  2400               	dw	9216
   134  00FF11  4974               	dw	18804
   135  00FF13  9680               	dw	38528
   136  00FF15  4B18               	dw	19224
   137  00FF17  BC20               	dw	48160
   138  00FF19  4CBE               	dw	19646
   139  00FF1B  6B28               	dw	27432
   140  00FF1D  4E6E               	dw	20078
   141  00FF1F  02F9               	dw	761
   142  00FF21  5015               	dw	20501
   143  00FF23  78EC               	dw	30956
   144  00FF25  60AD               	dw	24749
   145  00FF27  F2CA               	dw	62154
   146  00FF29  7149               	dw	29001
   147  00FF2B                     __end_of__powers_:
   148                           	opt stack 0
   149  00FF2B                     __npowers_:
   150                           	opt stack 0
   151  00FF2B  0000               	dw	0
   152  00FF2D  3F80               	dw	16256
   153  00FF2F  CCCD               	dw	52429
   154  00FF31  3DCC               	dw	15820
   155  00FF33  D70A               	dw	55050
   156  00FF35  3C23               	dw	15395
   157  00FF37  126F               	dw	4719
   158  00FF39  3A83               	dw	14979
   159  00FF3B  B717               	dw	46871
   160  00FF3D  38D1               	dw	14545
   161  00FF3F  C5AC               	dw	50604
   162  00FF41  3727               	dw	14119
   163  00FF43  37BD               	dw	14269
   164  00FF45  3586               	dw	13702
   165  00FF47  BF95               	dw	49045
   166  00FF49  33D6               	dw	13270
   167  00FF4B  CC77               	dw	52343
   168  00FF4D  322B               	dw	12843
   169  00FF4F  705F               	dw	28767
   170  00FF51  3089               	dw	12425
   171  00FF53  E6FF               	dw	59135
   172  00FF55  2EDB               	dw	11995
   173  00FF57  E508               	dw	58632
   174  00FF59  1E3C               	dw	7740
   175  00FF5B  4260               	dw	16992
   176  00FF5D  0DA2               	dw	3490
   177  00FF5F                     __end_of__npowers_:
   178                           	opt stack 0
   179  00FF5F                     _dpowers:
   180                           	opt stack 0
   181  00FF5F  0001               	dw	1
   182  00FF61  0000               	dw	0
   183  00FF63  000A               	dw	10
   184  00FF65  0000               	dw	0
   185  00FF67  0064               	dw	100
   186  00FF69  0000               	dw	0
   187  00FF6B  03E8               	dw	1000
   188  00FF6D  0000               	dw	0
   189  00FF6F  2710               	dw	10000
   190  00FF71  0000               	dw	0
   191  00FF73  86A0               	dw	34464
   192  00FF75  0001               	dw	1
   193  00FF77  4240               	dw	16960
   194  00FF79  000F               	dw	15
   195  00FF7B  9680               	dw	38528
   196  00FF7D  0098               	dw	152
   197  00FF7F  E100               	dw	57600
   198  00FF81  05F5               	dw	1525
   199  00FF83  CA00               	dw	51712
   200  00FF85  3B9A               	dw	15258
   201  00FF87                     __end_of_dpowers:
   202                           	opt stack 0
   203  0000                     _TMR3	set	4018
   204  0000                     _TXREG	set	4013
   205  0000                     _PIR1bits	set	3998
   206  0000                     _RCREG	set	4014
   207  0000                     _RCSTAbits	set	4011
   208  0000                     _RCSTA	set	4011
   209  0000                     _TXSTAbits	set	4012
   210  0000                     _SPBRGH	set	4016
   211  0000                     _SPBRG	set	4015
   212  0000                     _TXSTA	set	4012
   213  0000                     _BAUDCONbits	set	4024
   214  0000                     _CCP1CONbits	set	4029
   215  0000                     _CCPR1L	set	4030
   216  0000                     _T2CONbits	set	4042
   217  0000                     _CCP1CON	set	4029
   218  0000                     _T2CON	set	4042
   219  0000                     _PR2	set	4043
   220  0000                     _ADRESL	set	4035
   221  0000                     _ADRESH	set	4036
   222  0000                     _ADCON2	set	4032
   223  0000                     _ADCON0bits	set	4034
   224  0000                     _PORTEbits	set	3972
   225  0000                     _TMR3L	set	4018
   226  0000                     _TMR3H	set	4019
   227  0000                     _T3CONbits	set	4017
   228  0000                     _OSCCONbits	set	4051
   229  0000                     _T1CONbits	set	4045
   230  0000                     _T0CONbits	set	4053
   231  0000                     _T0CON	set	4053
   232  0000                     _TRISE	set	3990
   233  0000                     _TRISD	set	3989
   234  0000                     _TRISA	set	3986
   235  0000                     _TRISC	set	3988
   236  0000                     _TRISB	set	3987
   237  0000                     _ADCON1	set	4033
   238  0000                     _ADCON0	set	4034
   239  0000                     _TRISCbits	set	3988
   240  0000                     _PORTCbits	set	3970
   241  0000                     _INTCON3bits	set	4080
   242  0000                     _PIR2bits	set	4001
   243  0000                     _INTCONbits	set	4082
   244  0000                     _TMR0L	set	4054
   245  0000                     _TMR0H	set	4055
   246  0000                     _TMR1L	set	4046
   247  0000                     _TMR1H	set	4047
   248  00FF87                     STR_7:
   249  00FF87  53                 	db	83	;'S'
   250  00FF88  50                 	db	80	;'P'
   251  00FF89  3A                 	db	58	;':'
   252  00FF8A  20                 	db	32
   253  00FF8B  25                 	db	37
   254  00FF8C  33                 	db	51	;'3'
   255  00FF8D  2E                 	db	46
   256  00FF8E  31                 	db	49	;'1'
   257  00FF8F  66                 	db	102	;'f'
   258  00FF90  43                 	db	67	;'C'
   259  00FF91  20                 	db	32
   260  00FF92  20                 	db	32
   261  00FF93  25                 	db	37
   262  00FF94  63                 	db	99	;'c'
   263  00FF95  20                 	db	32
   264  00FF96  20                 	db	32
   265  00FF97  25                 	db	37
   266  00FF98  63                 	db	99	;'c'
   267  00FF99  20                 	db	32
   268  00FF9A  00                 	db	0
   269  00FF9B                     STR_6:
   270  00FF9B  52                 	db	82	;'R'
   271  00FF9C  54                 	db	84	;'T'
   272  00FF9D  3A                 	db	58	;':'
   273  00FF9E  20                 	db	32
   274  00FF9F  25                 	db	37
   275  00FFA0  33                 	db	51	;'3'
   276  00FFA1  2E                 	db	46
   277  00FFA2  31                 	db	49	;'1'
   278  00FFA3  66                 	db	102	;'f'
   279  00FFA4  43                 	db	67	;'C'
   280  00FFA5  20                 	db	32
   281  00FFA6  20                 	db	32
   282  00FFA7  48                 	db	72	;'H'
   283  00FFA8  20                 	db	32
   284  00FFA9  20                 	db	32
   285  00FFAA  43                 	db	67	;'C'
   286  00FFAB  20                 	db	32
   287  00FFAC  00                 	db	0
   288  00FFAD                     STR_4:
   289  00FFAD  41                 	db	65	;'A'
   290  00FFAE  55                 	db	85	;'U'
   291  00FFAF  54                 	db	84	;'T'
   292  00FFB0  4F                 	db	79	;'O'
   293  00FFB1  43                 	db	67	;'C'
   294  00FFB2  4F                 	db	79	;'O'
   295  00FFB3  4F                 	db	79	;'O'
   296  00FFB4  4C                 	db	76	;'L'
   297  00FFB5  20                 	db	32
   298  00FFB6  20                 	db	32
   299  00FFB7  20                 	db	32
   300  00FFB8  20                 	db	32
   301  00FFB9  20                 	db	32
   302  00FFBA  20                 	db	32
   303  00FFBB  20                 	db	32
   304  00FFBC  00                 	db	0
   305  00FFBD                     STR_2:
   306  00FFBD  43                 	db	67	;'C'
   307  00FFBE  4F                 	db	79	;'O'
   308  00FFBF  4F                 	db	79	;'O'
   309  00FFC0  4C                 	db	76	;'L'
   310  00FFC1  20                 	db	32
   311  00FFC2  20                 	db	32
   312  00FFC3  20                 	db	32
   313  00FFC4  20                 	db	32
   314  00FFC5  20                 	db	32
   315  00FFC6  20                 	db	32
   316  00FFC7  20                 	db	32
   317  00FFC8  20                 	db	32
   318  00FFC9  20                 	db	32
   319  00FFCA  00                 	db	0
   320  00FFCB                     STR_1:
   321  00FFCB  4F                 	db	79	;'O'
   322  00FFCC  46                 	db	70	;'F'
   323  00FFCD  46                 	db	70	;'F'
   324  00FFCE  20                 	db	32
   325  00FFCF  20                 	db	32
   326  00FFD0  20                 	db	32
   327  00FFD1  20                 	db	32
   328  00FFD2  20                 	db	32
   329  00FFD3  20                 	db	32
   330  00FFD4  20                 	db	32
   331  00FFD5  20                 	db	32
   332  00FFD6  20                 	db	32
   333  00FFD7  00                 	db	0
   334  00FFD8                     STR_3:
   335  00FFD8  48                 	db	72	;'H'
   336  00FFD9  45                 	db	69	;'E'
   337  00FFDA  41                 	db	65	;'A'
   338  00FFDB  54                 	db	84	;'T'
   339  00FFDC  20                 	db	32
   340  00FFDD  20                 	db	32
   341  00FFDE  20                 	db	32
   342  00FFDF  20                 	db	32
   343  00FFE0  20                 	db	32
   344  00FFE1  20                 	db	32
   345  00FFE2  00                 	db	0
   346  00FFE3                     STR_8:
   347  00FFE3  48                 	db	72	;'H'
   348  00FFE4  53                 	db	83	;'S'
   349  00FFE5  20                 	db	32
   350  00FFE6  3A                 	db	58	;':'
   351  00FFE7  20                 	db	32
   352  00FFE8  25                 	db	37
   353  00FFE9  64                 	db	100	;'d'
   354  00FFEA  20                 	db	32
   355  00FFEB  00                 	db	0
   356  00FFEC                     STR_9:
   357  00FFEC  4D                 	db	77	;'M'
   358  00FFED  44                 	db	68	;'D'
   359  00FFEE  3A                 	db	58	;':'
   360  00FFEF  20                 	db	32
   361  00FFF0  25                 	db	37
   362  00FFF1  73                 	db	115	;'s'
   363  00FFF2  20                 	db	32
   364  00FFF3  00                 	db	0
   365  00FFF4                     STR_10:
   366  00FFF4  28                 	db	40
   367  00FFF5  6E                 	db	110	;'n'
   368  00FFF6  75                 	db	117	;'u'
   369  00FFF7  6C                 	db	108	;'l'
   370  00FFF8  6C                 	db	108	;'l'
   371  00FFF9  29                 	db	41
   372  00FFFA  00                 	db	0
   373  00FFFB                     STR_5:
   374  00FFFB  4F                 	db	79	;'O'
   375  00FFFC  46                 	db	70	;'F'
   376  00FFFD  46                 	db	70	;'F'
   377  00FFFE  00                 	db	0
   378                           
   379                           ; #config settings
   380  00FFFF  00                 	db	0	; dummy byte at the end
   381  0000                     
   382                           	psect	cinit
   383  003414                     __pcinit:
   384                           	opt stack 0
   385  003414                     start_initialization:
   386                           	opt stack 0
   387  003414                     __initialization:
   388                           	opt stack 0
   389                           
   390                           ; Initialize objects allocated to COMRAM (4 bytes)
   391                           ; load TBLPTR registers with __pidataCOMRAM
   392  003414  0E7A               	movlw	low __pidataCOMRAM
   393  003416  6EF6               	movwf	tblptrl,c
   394  003418  0E37               	movlw	high __pidataCOMRAM
   395  00341A  6EF7               	movwf	tblptrh,c
   396  00341C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   397  00341E  6EF8               	movwf	tblptru,c
   398  003420  EE00  F04E         	lfsr	0,__pdataCOMRAM
   399  003424  EE10 F004          	lfsr	1,4
   400  003428                     copy_data0:
   401  003428  0009               	tblrd		*+
   402  00342A  CFF5 FFEE          	movff	tablat,postinc0
   403  00342E  50E5               	movf	postdec1,w,c
   404  003430  50E1               	movf	fsr1l,w,c
   405  003432  E1FA               	bnz	copy_data0
   406                           
   407                           ; Clear objects allocated to BANK1 (6 bytes)
   408  003434  0101               	movlb	1
   409  003436  6B4A               	clrf	(__pbssBANK1+5)& (0+255),b
   410  003438  6B49               	clrf	(__pbssBANK1+4)& (0+255),b
   411  00343A  6B48               	clrf	(__pbssBANK1+3)& (0+255),b
   412  00343C  6B47               	clrf	(__pbssBANK1+2)& (0+255),b
   413  00343E  6B46               	clrf	(__pbssBANK1+1)& (0+255),b
   414  003440  6B45               	clrf	__pbssBANK1& (0+255),b
   415                           
   416                           ; Clear objects allocated to BANK0 (8 bytes)
   417  003442  EE00  F0F7         	lfsr	0,__pbssBANK0
   418  003446  0E08               	movlw	8
   419  003448                     clear_0:
   420  003448  6AEE               	clrf	postinc0,c
   421  00344A  06E8               	decf	wreg,f,c
   422  00344C  E1FD               	bnz	clear_0
   423                           
   424                           ; Clear objects allocated to COMRAM (5 bytes)
   425  00344E  6A4D               	clrf	(__pbssCOMRAM+4)& (0+255),c
   426  003450  6A4C               	clrf	(__pbssCOMRAM+3)& (0+255),c
   427  003452  6A4B               	clrf	(__pbssCOMRAM+2)& (0+255),c
   428  003454  6A4A               	clrf	(__pbssCOMRAM+1)& (0+255),c
   429  003456  6A49               	clrf	__pbssCOMRAM& (0+255),c
   430  003458                     end_of_initialization:
   431                           	opt stack 0
   432  003458                     __end_of__initialization:
   433                           	opt stack 0
   434  003458  9052               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   435  00345A  9252               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   436  00345C  0100               	movlb	0
   437  00345E  EF6B  F00D         	goto	_main	;jump to C main() function
   438                           tblptru	equ	0xFF8
   439                           tblptrh	equ	0xFF7
   440                           tblptrl	equ	0xFF6
   441                           tablat	equ	0xFF5
   442                           postinc0	equ	0xFEE
   443                           wreg	equ	0xFE8
   444                           postdec1	equ	0xFE5
   445                           fsr1l	equ	0xFE1
   446                           
   447                           	psect	bssCOMRAM
   448  000049                     __pbssCOMRAM:
   449                           	opt stack 0
   450  000049                     _selectedMode:
   451                           	opt stack 0
   452  000049                     	ds	2
   453  00004B                     _HS:
   454                           	opt stack 0
   455  00004B                     	ds	2
   456  00004D                     _heaterDutyCycle:
   457                           	opt stack 0
   458  00004D                     	ds	1
   459                           tblptru	equ	0xFF8
   460                           tblptrh	equ	0xFF7
   461                           tblptrl	equ	0xFF6
   462                           tablat	equ	0xFF5
   463                           postinc0	equ	0xFEE
   464                           wreg	equ	0xFE8
   465                           postdec1	equ	0xFE5
   466                           fsr1l	equ	0xFE1
   467                           
   468                           	psect	dataCOMRAM
   469  00004E                     __pdataCOMRAM:
   470                           	opt stack 0
   471  00004E                     _LCD_INIT_STRING:
   472                           	opt stack 0
   473  00004E                     	ds	4
   474                           tblptru	equ	0xFF8
   475                           tblptrh	equ	0xFF7
   476                           tblptrl	equ	0xFF6
   477                           tablat	equ	0xFF5
   478                           postinc0	equ	0xFEE
   479                           wreg	equ	0xFE8
   480                           postdec1	equ	0xFE5
   481                           fsr1l	equ	0xFE1
   482                           
   483                           	psect	bssBANK0
   484  0000F7                     __pbssBANK0:
   485                           	opt stack 0
   486  0000F7                     _RT:
   487                           	opt stack 0
   488  0000F7                     	ds	4
   489  0000FB                     _SP:
   490                           	opt stack 0
   491  0000FB                     	ds	4
   492                           tblptru	equ	0xFF8
   493                           tblptrh	equ	0xFF7
   494                           tblptrl	equ	0xFF6
   495                           tablat	equ	0xFF5
   496                           postinc0	equ	0xFEE
   497                           wreg	equ	0xFE8
   498                           postdec1	equ	0xFE5
   499                           fsr1l	equ	0xFE1
   500                           
   501                           	psect	bssBANK1
   502  000145                     __pbssBANK1:
   503                           	opt stack 0
   504  000145                     _coolError:
   505                           	opt stack 0
   506  000145                     	ds	4
   507  000149                     _RPS_count:
   508                           	opt stack 0
   509  000149                     	ds	2
   510                           tblptru	equ	0xFF8
   511                           tblptrh	equ	0xFF7
   512                           tblptrl	equ	0xFF6
   513                           tablat	equ	0xFF5
   514                           postinc0	equ	0xFEE
   515                           wreg	equ	0xFE8
   516                           postdec1	equ	0xFE5
   517                           fsr1l	equ	0xFE1
   518                           
   519                           	psect	cstackBANK1
   520  000100                     __pcstackBANK1:
   521                           	opt stack 0
   522  000100                     _sprintf$1901:
   523                           	opt stack 0
   524                           
   525                           ; 4 bytes @ 0x0
   526  000100                     	ds	4
   527  000104                     sprintf@cp:
   528                           	opt stack 0
   529                           
   530                           ; 2 bytes @ 0x4
   531  000104                     	ds	2
   532  000106                     sprintf@ap:
   533                           	opt stack 0
   534                           
   535                           ; 2 bytes @ 0x6
   536  000106                     	ds	2
   537  000108                     sprintf@len:
   538                           	opt stack 0
   539                           
   540                           ; 2 bytes @ 0x8
   541  000108                     	ds	2
   542  00010A                     sprintf@flag:
   543                           	opt stack 0
   544                           
   545                           ; 2 bytes @ 0xA
   546  00010A                     	ds	2
   547  00010C                     sprintf@tmpval:
   548                           	opt stack 0
   549                           
   550                           ; 4 bytes @ 0xC
   551  00010C                     	ds	4
   552  000110                     sprintf@val:
   553                           	opt stack 0
   554                           
   555                           ; 4 bytes @ 0x10
   556  000110                     	ds	4
   557  000114                     sprintf@exp:
   558                           	opt stack 0
   559                           
   560                           ; 2 bytes @ 0x14
   561  000114                     	ds	2
   562  000116                     sprintf@width:
   563                           	opt stack 0
   564                           
   565                           ; 2 bytes @ 0x16
   566  000116                     	ds	2
   567  000118                     sprintf@fval:
   568                           	opt stack 0
   569                           
   570                           ; 4 bytes @ 0x18
   571  000118                     	ds	4
   572  00011C                     sprintf@prec:
   573                           	opt stack 0
   574                           
   575                           ; 2 bytes @ 0x1C
   576  00011C                     	ds	2
   577  00011E                     sprintf@c:
   578                           	opt stack 0
   579                           
   580                           ; 1 bytes @ 0x1E
   581  00011E                     	ds	1
   582  00011F                     updateLCD@Buffer:
   583                           	opt stack 0
   584                           
   585                           ; 32 bytes @ 0x1F
   586  00011F                     	ds	32
   587  00013F                     updateLCD@s:
   588                           	opt stack 0
   589                           
   590                           ; 2 bytes @ 0x3F
   591  00013F                     	ds	2
   592  000141                     _updateLCD$621:
   593                           	opt stack 0
   594                           
   595                           ; 2 bytes @ 0x41
   596  000141                     	ds	2
   597  000143                     _updateLCD$622:
   598                           	opt stack 0
   599                           
   600                           ; 2 bytes @ 0x43
   601  000143                     	ds	2
   602                           tblptru	equ	0xFF8
   603                           tblptrh	equ	0xFF7
   604                           tblptrl	equ	0xFF6
   605                           tablat	equ	0xFF5
   606                           postinc0	equ	0xFEE
   607                           wreg	equ	0xFE8
   608                           postdec1	equ	0xFE5
   609                           fsr1l	equ	0xFE1
   610                           
   611                           	psect	cstackBANK0
   612  000080                     __pcstackBANK0:
   613                           	opt stack 0
   614  000080                     ??_isdigit:
   615  000080                     ??_delay_cycles:
   616  000080                     ?_getMode:
   617                           	opt stack 0
   618  000080                     ?_read_adc_raw_no_lib:
   619                           	opt stack 0
   620  000080                     ?___wmul:
   621                           	opt stack 0
   622  000080                     ?___awmod:
   623                           	opt stack 0
   624  000080                     ?__tdiv_to_l_:
   625                           	opt stack 0
   626  000080                     ?__div_to_l_:
   627                           	opt stack 0
   628  000080                     ?___lldiv:
   629                           	opt stack 0
   630  000080                     delay_ms@n:
   631                           	opt stack 0
   632  000080                     ___wmul@multiplier:
   633                           	opt stack 0
   634  000080                     ___awmod@dividend:
   635                           	opt stack 0
   636  000080                     __div_to_l_@f1:
   637                           	opt stack 0
   638  000080                     __tdiv_to_l_@f1:
   639                           	opt stack 0
   640  000080                     ___lldiv@dividend:
   641                           	opt stack 0
   642                           
   643                           ; 4 bytes @ 0x0
   644  000080                     	ds	1
   645  000081                     _isdigit$1531:
   646                           	opt stack 0
   647                           
   648                           ; 1 bytes @ 0x1
   649  000081                     	ds	1
   650  000082                     ??_getMode:
   651  000082                     ??_read_adc_raw_no_lib:
   652  000082                     isdigit@c:
   653                           	opt stack 0
   654  000082                     delay_ms@x:
   655                           	opt stack 0
   656  000082                     ___wmul@multiplicand:
   657                           	opt stack 0
   658  000082                     ___awmod@divisor:
   659                           	opt stack 0
   660                           
   661                           ; 2 bytes @ 0x2
   662  000082                     	ds	1
   663  000083                     delay_cycles@n:
   664                           	opt stack 0
   665                           
   666                           ; 1 bytes @ 0x3
   667  000083                     	ds	1
   668  000084                     ___awmod@counter:
   669                           	opt stack 0
   670  000084                     delay_cycles@x:
   671                           	opt stack 0
   672  000084                     read_adc_raw_no_lib@raw_value:
   673                           	opt stack 0
   674  000084                     ___wmul@product:
   675                           	opt stack 0
   676  000084                     __div_to_l_@f2:
   677                           	opt stack 0
   678  000084                     __tdiv_to_l_@f2:
   679                           	opt stack 0
   680  000084                     ___lldiv@divisor:
   681                           	opt stack 0
   682                           
   683                           ; 4 bytes @ 0x4
   684  000084                     	ds	1
   685  000085                     ___awmod@sign:
   686                           	opt stack 0
   687                           
   688                           ; 1 bytes @ 0x5
   689  000085                     	ds	1
   690  000086                     ??_lcd_send_nibble:
   691  000086                     ?___awdiv:
   692                           	opt stack 0
   693  000086                     ?___xxtofl:
   694                           	opt stack 0
   695  000086                     read_adc_raw_no_lib@channel:
   696                           	opt stack 0
   697  000086                     ___awdiv@dividend:
   698                           	opt stack 0
   699  000086                     ___xxtofl@val:
   700                           	opt stack 0
   701                           
   702                           ; 4 bytes @ 0x6
   703  000086                     	ds	1
   704  000087                     lcd_send_nibble@n:
   705                           	opt stack 0
   706                           
   707                           ; 1 bytes @ 0x7
   708  000087                     	ds	1
   709  000088                     ??__tdiv_to_l_:
   710  000088                     lcd_send_byte@n:
   711                           	opt stack 0
   712  000088                     ___awdiv@divisor:
   713                           	opt stack 0
   714  000088                     __div_to_l_@quot:
   715                           	opt stack 0
   716  000088                     ___lldiv@quotient:
   717                           	opt stack 0
   718                           
   719                           ; 4 bytes @ 0x8
   720  000088                     	ds	1
   721  000089                     lcd_send_byte@cm_data:
   722                           	opt stack 0
   723                           
   724                           ; 1 bytes @ 0x9
   725  000089                     	ds	1
   726  00008A                     ??___xxtofl:
   727  00008A                     lcd_init@i:
   728                           	opt stack 0
   729  00008A                     lcd_gotoxy@y:
   730                           	opt stack 0
   731  00008A                     ___awdiv@counter:
   732                           	opt stack 0
   733                           
   734                           ; 1 bytes @ 0xA
   735  00008A                     	ds	1
   736  00008B                     lcd_gotoxy@x:
   737                           	opt stack 0
   738  00008B                     ___awdiv@sign:
   739                           	opt stack 0
   740  00008B                     __tdiv_to_l_@quot:
   741                           	opt stack 0
   742                           
   743                           ; 4 bytes @ 0xB
   744  00008B                     	ds	1
   745  00008C                     lcd_gotoxy@address:
   746                           	opt stack 0
   747  00008C                     __div_to_l_@cntr:
   748                           	opt stack 0
   749  00008C                     ___lldiv@counter:
   750                           	opt stack 0
   751  00008C                     ___awdiv@quotient:
   752                           	opt stack 0
   753                           
   754                           ; 2 bytes @ 0xC
   755  00008C                     	ds	1
   756  00008D                     ?___llmod:
   757                           	opt stack 0
   758  00008D                     lcd_putc@c:
   759                           	opt stack 0
   760  00008D                     __div_to_l_@exp1:
   761                           	opt stack 0
   762  00008D                     ___llmod@dividend:
   763                           	opt stack 0
   764                           
   765                           ; 4 bytes @ 0xD
   766  00008D                     	ds	1
   767  00008E                     ___xxtofl@sign:
   768                           	opt stack 0
   769  00008E                     lcd_puts@s:
   770                           	opt stack 0
   771                           
   772                           ; 2 bytes @ 0xE
   773  00008E                     	ds	1
   774  00008F                     __tdiv_to_l_@cntr:
   775                           	opt stack 0
   776  00008F                     ___xxtofl@exp:
   777                           	opt stack 0
   778                           
   779                           ; 1 bytes @ 0xF
   780  00008F                     	ds	1
   781  000090                     __tdiv_to_l_@exp1:
   782                           	opt stack 0
   783  000090                     ___xxtofl@arg:
   784                           	opt stack 0
   785                           
   786                           ; 4 bytes @ 0x10
   787  000090                     	ds	1
   788  000091                     ___llmod@divisor:
   789                           	opt stack 0
   790                           
   791                           ; 4 bytes @ 0x11
   792  000091                     	ds	3
   793  000094                     ?___flmul:
   794                           	opt stack 0
   795  000094                     ?___flneg:
   796                           	opt stack 0
   797  000094                     ___flneg@f1:
   798                           	opt stack 0
   799  000094                     ___flmul@b:
   800                           	opt stack 0
   801                           
   802                           ; 4 bytes @ 0x14
   803  000094                     	ds	1
   804  000095                     ___llmod@counter:
   805                           	opt stack 0
   806                           
   807                           ; 1 bytes @ 0x15
   808  000095                     	ds	3
   809  000098                     ___flmul@a:
   810                           	opt stack 0
   811                           
   812                           ; 4 bytes @ 0x18
   813  000098                     	ds	4
   814  00009C                     ??___flmul:
   815                           
   816                           ; 1 bytes @ 0x1C
   817  00009C                     	ds	4
   818  0000A0                     ___flmul@sign:
   819                           	opt stack 0
   820                           
   821                           ; 1 bytes @ 0x20
   822  0000A0                     	ds	1
   823  0000A1                     ___flmul@grs:
   824                           	opt stack 0
   825                           
   826                           ; 4 bytes @ 0x21
   827  0000A1                     	ds	4
   828  0000A5                     ___flmul@aexp:
   829                           	opt stack 0
   830                           
   831                           ; 1 bytes @ 0x25
   832  0000A5                     	ds	1
   833  0000A6                     ___flmul@bexp:
   834                           	opt stack 0
   835                           
   836                           ; 1 bytes @ 0x26
   837  0000A6                     	ds	1
   838  0000A7                     ___flmul@prod:
   839                           	opt stack 0
   840                           
   841                           ; 4 bytes @ 0x27
   842  0000A7                     	ds	4
   843  0000AB                     ___flmul@temp:
   844                           	opt stack 0
   845                           
   846                           ; 2 bytes @ 0x2B
   847  0000AB                     	ds	2
   848  0000AD                     ?___fldiv:
   849                           	opt stack 0
   850  0000AD                     ?_fround:
   851                           	opt stack 0
   852  0000AD                     ?_scale:
   853                           	opt stack 0
   854  0000AD                     ___fldiv@b:
   855                           	opt stack 0
   856                           
   857                           ; 4 bytes @ 0x2D
   858  0000AD                     	ds	4
   859  0000B1                     ___fldiv@a:
   860                           	opt stack 0
   861  0000B1                     _fround$1899:
   862                           	opt stack 0
   863  0000B1                     _scale$1900:
   864                           	opt stack 0
   865                           
   866                           ; 4 bytes @ 0x31
   867  0000B1                     	ds	4
   868  0000B5                     ??___fldiv:
   869  0000B5                     scale@scl:
   870                           	opt stack 0
   871  0000B5                     _fround$1898:
   872                           	opt stack 0
   873                           
   874                           ; 4 bytes @ 0x35
   875  0000B5                     	ds	4
   876  0000B9                     fround@prec:
   877                           	opt stack 0
   878  0000B9                     ___fldiv@sign:
   879                           	opt stack 0
   880                           
   881                           ; 1 bytes @ 0x39
   882  0000B9                     	ds	1
   883  0000BA                     ?___fladd:
   884                           	opt stack 0
   885  0000BA                     ___fladd@b:
   886                           	opt stack 0
   887  0000BA                     ___fldiv@rem:
   888                           	opt stack 0
   889                           
   890                           ; 4 bytes @ 0x3A
   891  0000BA                     	ds	4
   892  0000BE                     ___fldiv@new_exp:
   893                           	opt stack 0
   894  0000BE                     ___fladd@a:
   895                           	opt stack 0
   896                           
   897                           ; 4 bytes @ 0x3E
   898  0000BE                     	ds	2
   899  0000C0                     ___fldiv@grs:
   900                           	opt stack 0
   901                           
   902                           ; 4 bytes @ 0x40
   903  0000C0                     	ds	2
   904  0000C2                     ??___fladd:
   905                           
   906                           ; 1 bytes @ 0x42
   907  0000C2                     	ds	2
   908  0000C4                     ___fldiv@bexp:
   909                           	opt stack 0
   910                           
   911                           ; 1 bytes @ 0x44
   912  0000C4                     	ds	1
   913  0000C5                     ___fldiv@aexp:
   914                           	opt stack 0
   915                           
   916                           ; 1 bytes @ 0x45
   917  0000C5                     	ds	1
   918  0000C6                     ?_read_adc_voltage:
   919                           	opt stack 0
   920                           
   921                           ; 4 bytes @ 0x46
   922  0000C6                     	ds	4
   923  0000CA                     ___fladd@signs:
   924                           	opt stack 0
   925  0000CA                     read_adc_voltage@raw_value:
   926                           	opt stack 0
   927                           
   928                           ; 2 bytes @ 0x4A
   929  0000CA                     	ds	1
   930  0000CB                     ___fladd@aexp:
   931                           	opt stack 0
   932                           
   933                           ; 1 bytes @ 0x4B
   934  0000CB                     	ds	1
   935  0000CC                     read_adc_voltage@channel:
   936                           	opt stack 0
   937  0000CC                     ___fladd@bexp:
   938                           	opt stack 0
   939                           
   940                           ; 1 bytes @ 0x4C
   941  0000CC                     	ds	1
   942  0000CD                     ___fladd@grs:
   943                           	opt stack 0
   944  0000CD                     read_adc_voltage@voltage:
   945                           	opt stack 0
   946                           
   947                           ; 4 bytes @ 0x4D
   948  0000CD                     	ds	1
   949  0000CE                     ?___flsub:
   950                           	opt stack 0
   951  0000CE                     ___flge@ff1:
   952                           	opt stack 0
   953  0000CE                     ___flsub@b:
   954                           	opt stack 0
   955                           
   956                           ; 4 bytes @ 0x4E
   957  0000CE                     	ds	3
   958  0000D1                     ?___fltol:
   959                           	opt stack 0
   960  0000D1                     ___fltol@f1:
   961                           	opt stack 0
   962                           
   963                           ; 4 bytes @ 0x51
   964  0000D1                     	ds	1
   965  0000D2                     ___flge@ff2:
   966                           	opt stack 0
   967  0000D2                     ___flsub@a:
   968                           	opt stack 0
   969                           
   970                           ; 4 bytes @ 0x52
   971  0000D2                     	ds	3
   972  0000D5                     ??___fltol:
   973                           
   974                           ; 1 bytes @ 0x55
   975  0000D5                     	ds	1
   976  0000D6                     ??___flge:
   977                           
   978                           ; 1 bytes @ 0x56
   979  0000D6                     	ds	3
   980  0000D9                     ___fltol@sign1:
   981                           	opt stack 0
   982                           
   983                           ; 1 bytes @ 0x59
   984  0000D9                     	ds	1
   985  0000DA                     ___fltol@exp1:
   986                           	opt stack 0
   987                           
   988                           ; 1 bytes @ 0x5A
   989  0000DA                     	ds	1
   990  0000DB                     ?_sprintf:
   991                           	opt stack 0
   992  0000DB                     set_pwm1_raw@raw_value:
   993                           	opt stack 0
   994  0000DB                     sprintf@sp:
   995                           	opt stack 0
   996                           
   997                           ; 2 bytes @ 0x5B
   998  0000DB                     	ds	2
   999  0000DD                     ??_set_pwm1_raw:
  1000  0000DD                     sprintf@f:
  1001                           	opt stack 0
  1002                           
  1003                           ; 2 bytes @ 0x5D
  1004  0000DD                     	ds	2
  1005  0000DF                     set_pwm1_percent@value:
  1006                           	opt stack 0
  1007                           
  1008                           ; 4 bytes @ 0x5F
  1009  0000DF                     	ds	4
  1010  0000E3                     set_pwm1_percent@tmp:
  1011                           	opt stack 0
  1012                           
  1013                           ; 4 bytes @ 0x63
  1014  0000E3                     	ds	4
  1015  0000E7                     ??_sprintf:
  1016  0000E7                     set_pwm1_percent@raw_val:
  1017                           	opt stack 0
  1018                           
  1019                           ; 2 bytes @ 0x67
  1020  0000E7                     	ds	4
  1021  0000EB                     main@RPS:
  1022                           	opt stack 0
  1023                           
  1024                           ; 2 bytes @ 0x6B
  1025  0000EB                     	ds	2
  1026  0000ED                     main@raw_val:
  1027                           	opt stack 0
  1028                           
  1029                           ; 2 bytes @ 0x6D
  1030  0000ED                     	ds	2
  1031  0000EF                     main@coolAmount:
  1032                           	opt stack 0
  1033                           
  1034                           ; 4 bytes @ 0x6F
  1035  0000EF                     	ds	4
  1036  0000F3                     main@tst:
  1037                           	opt stack 0
  1038                           
  1039                           ; 4 bytes @ 0x73
  1040  0000F3                     	ds	4
  1041                           tblptru	equ	0xFF8
  1042                           tblptrh	equ	0xFF7
  1043                           tblptrl	equ	0xFF6
  1044                           tablat	equ	0xFF5
  1045                           postinc0	equ	0xFEE
  1046                           wreg	equ	0xFE8
  1047                           postdec1	equ	0xFE5
  1048                           fsr1l	equ	0xFE1
  1049                           
  1050                           	psect	cstackCOMRAM
  1051  000001                     __pcstackCOMRAM:
  1052                           	opt stack 0
  1053  000001                     ?i2___xxtofl:
  1054                           	opt stack 0
  1055  000001                     i2___xxtofl@val:
  1056                           	opt stack 0
  1057                           
  1058                           ; 4 bytes @ 0x0
  1059  000001                     	ds	4
  1060  000005                     ??i2___xxtofl:
  1061                           
  1062                           ; 1 bytes @ 0x4
  1063  000005                     	ds	4
  1064  000009                     i2___xxtofl@sign:
  1065                           	opt stack 0
  1066                           
  1067                           ; 1 bytes @ 0x8
  1068  000009                     	ds	1
  1069  00000A                     i2___xxtofl@exp:
  1070                           	opt stack 0
  1071                           
  1072                           ; 1 bytes @ 0x9
  1073  00000A                     	ds	1
  1074  00000B                     i2___xxtofl@arg:
  1075                           	opt stack 0
  1076                           
  1077                           ; 4 bytes @ 0xA
  1078  00000B                     	ds	4
  1079  00000F                     ?i2___flneg:
  1080                           	opt stack 0
  1081  00000F                     i2___flneg@f1:
  1082                           	opt stack 0
  1083                           
  1084                           ; 4 bytes @ 0xE
  1085  00000F                     	ds	4
  1086  000013                     ?i2___fladd:
  1087                           	opt stack 0
  1088  000013                     i2___fladd@b:
  1089                           	opt stack 0
  1090                           
  1091                           ; 4 bytes @ 0x12
  1092  000013                     	ds	4
  1093  000017                     i2___fladd@a:
  1094                           	opt stack 0
  1095                           
  1096                           ; 4 bytes @ 0x16
  1097  000017                     	ds	4
  1098  00001B                     ??i2___fladd:
  1099                           
  1100                           ; 1 bytes @ 0x1A
  1101  00001B                     	ds	8
  1102  000023                     i2___fladd@signs:
  1103                           	opt stack 0
  1104                           
  1105                           ; 1 bytes @ 0x22
  1106  000023                     	ds	1
  1107  000024                     i2___fladd@aexp:
  1108                           	opt stack 0
  1109                           
  1110                           ; 1 bytes @ 0x23
  1111  000024                     	ds	1
  1112  000025                     i2___fladd@bexp:
  1113                           	opt stack 0
  1114                           
  1115                           ; 1 bytes @ 0x24
  1116  000025                     	ds	1
  1117  000026                     i2___fladd@grs:
  1118                           	opt stack 0
  1119                           
  1120                           ; 1 bytes @ 0x25
  1121  000026                     	ds	1
  1122  000027                     i2___flge@ff1:
  1123                           	opt stack 0
  1124                           
  1125                           ; 4 bytes @ 0x26
  1126  000027                     	ds	4
  1127  00002B                     i2___flge@ff2:
  1128                           	opt stack 0
  1129                           
  1130                           ; 4 bytes @ 0x2A
  1131  00002B                     	ds	4
  1132  00002F                     ??i2___flge:
  1133                           
  1134                           ; 1 bytes @ 0x2E
  1135  00002F                     	ds	4
  1136  000033                     ??_Timer3_isr:
  1137                           
  1138                           ; 1 bytes @ 0x32
  1139  000033                     	ds	2
  1140  000035                     ??_highIsr:
  1141                           
  1142                           ; 1 bytes @ 0x34
  1143  000035                     	ds	20
  1144                           tblptru	equ	0xFF8
  1145                           tblptrh	equ	0xFF7
  1146                           tblptrl	equ	0xFF6
  1147                           tablat	equ	0xFF5
  1148                           postinc0	equ	0xFEE
  1149                           wreg	equ	0xFE8
  1150                           postdec1	equ	0xFE5
  1151                           fsr1l	equ	0xFE1
  1152                           
  1153 ;;
  1154 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1155 ;;
  1156 ;; *************** function _main *****************
  1157 ;; Defined at:
  1158 ;;		line 143 in file "pwm_asl.c"
  1159 ;; Parameters:    Size  Location     Type
  1160 ;;		None
  1161 ;; Auto vars:     Size  Location     Type
  1162 ;;  tst             4  115[BANK0 ] float 
  1163 ;;  coolAmount      4  111[BANK0 ] float 
  1164 ;;  raw_val         2  109[BANK0 ] int 
  1165 ;;  RPS             2  107[BANK0 ] int 
  1166 ;; Return value:  Size  Location     Type
  1167 ;;                  1    wreg      void 
  1168 ;; Registers used:
  1169 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1170 ;; Tracked objects:
  1171 ;;		On entry : 0/0
  1172 ;;		On exit  : 0/0
  1173 ;;		Unchanged: 0/0
  1174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1176 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1178 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1179 ;;Total ram usage:       12 bytes
  1180 ;; Hardware stack levels required when called:   10
  1181 ;; This function calls:
  1182 ;;		___fladd
  1183 ;;		___fldiv
  1184 ;;		___flge
  1185 ;;		___flmul
  1186 ;;		___flneg
  1187 ;;		___fltol
  1188 ;;		___xxtofl
  1189 ;;		_delay_ms
  1190 ;;		_enableInterrupts
  1191 ;;		_initTimers01
  1192 ;;		_init_adc_no_lib
  1193 ;;		_init_pwm1
  1194 ;;		_lcd_init
  1195 ;;		_lcd_putc
  1196 ;;		_read_adc_voltage
  1197 ;;		_set_pwm1_percent
  1198 ;;		_set_pwm1_raw
  1199 ;;		_setupPorts
  1200 ;;		_setupPorts3
  1201 ;;		_turnOFFCooler
  1202 ;;		_turnOFFHeater
  1203 ;;		_turnONCooler
  1204 ;;		_turnONHeater
  1205 ;;		_updateLCD
  1206 ;; This function is called by:
  1207 ;;		Startup code after reset
  1208 ;; This function uses a non-reentrant model
  1209 ;;
  1210                           
  1211                           	psect	text0
  1212  001AD6                     __ptext0:
  1213                           	opt stack 0
  1214  001AD6                     _main:
  1215                           	opt stack 21
  1216                           
  1217                           ;pwm_asl.c: 145: float coolAmount;
  1218                           ;pwm_asl.c: 146: int raw_val;
  1219                           ;pwm_asl.c: 149: setupPorts();
  1220                           
  1221                           ;incstack = 0
  1222  001AD6  EC2E  F01B         	call	_setupPorts	;wreg free
  1223                           
  1224                           ;pwm_asl.c: 150: setupPorts3();
  1225  001ADA  EC99  F01A         	call	_setupPorts3	;wreg free
  1226                           
  1227                           ;pwm_asl.c: 151: lcd_init();
  1228  001ADE  EC13  F019         	call	_lcd_init	;wreg free
  1229                           
  1230                           ;pwm_asl.c: 152: init_adc_no_lib();
  1231  001AE2  ECB4  F01B         	call	_init_adc_no_lib	;wreg free
  1232                           
  1233                           ;pwm_asl.c: 153: init_pwm1();
  1234  001AE6  ECAC  F01B         	call	_init_pwm1	;wreg free
  1235                           
  1236                           ;pwm_asl.c: 155: PORTCbits.RC5 = 1;
  1237  001AEA  8A82               	bsf	3970,5,c	;volatile
  1238                           
  1239                           ;pwm_asl.c: 157: lcd_putc('\f');
  1240  001AEC  0E0C               	movlw	12
  1241  001AEE  EC7E  F019         	call	_lcd_putc
  1242                           
  1243                           ;pwm_asl.c: 159: int RPS;
  1244                           ;pwm_asl.c: 160: initTimers01();
  1245  001AF2  EC18  F01B         	call	_initTimers01	;wreg free
  1246                           
  1247                           ;pwm_asl.c: 162: TRISCbits.RC0 = 1;
  1248  001AF6  8094               	bsf	3988,0,c	;volatile
  1249                           
  1250                           ;pwm_asl.c: 165: enableInterrupts();
  1251  001AF8  ECBA  F01B         	call	_enableInterrupts	;wreg free
  1252  001AFC                     l121:
  1253  001AFC  0004               	clrwdt		;# 
  1254                           
  1255                           ;pwm_asl.c: 169: updateLCD();
  1256  001AFE  ECBA  F013         	call	_updateLCD	;wreg free
  1257                           
  1258                           ;pwm_asl.c: 170: delay_ms(200);
  1259  001B02  0E00               	movlw	0
  1260  001B04  0100               	movlb	0	; () banked
  1261  001B06  6F81               	movwf	(delay_ms@n+1)& (0+255),b
  1262  001B08  0EC8               	movlw	200
  1263  001B0A  6F80               	movwf	delay_ms@n& (0+255),b
  1264  001B0C  EC43  F01B         	call	_delay_ms	;wreg free
  1265                           
  1266                           ;pwm_asl.c: 172: SP = read_adc_voltage((unsigned char) 0);
  1267  001B10  0E00               	movlw	0
  1268  001B12  ECB8  F011         	call	_read_adc_voltage
  1269  001B16  C0C6  F0FB         	movff	?_read_adc_voltage,_SP
  1270  001B1A  C0C7  F0FC         	movff	?_read_adc_voltage+1,_SP+1
  1271  001B1E  C0C8  F0FD         	movff	?_read_adc_voltage+2,_SP+2
  1272  001B22  C0C9  F0FE         	movff	?_read_adc_voltage+3,_SP+3
  1273                           
  1274                           ;pwm_asl.c: 173: RT = read_adc_voltage((unsigned char) 2);
  1275  001B26  0E02               	movlw	2
  1276  001B28  ECB8  F011         	call	_read_adc_voltage
  1277  001B2C  C0C6  F0F7         	movff	?_read_adc_voltage,_RT
  1278  001B30  C0C7  F0F8         	movff	?_read_adc_voltage+1,_RT+1
  1279  001B34  C0C8  F0F9         	movff	?_read_adc_voltage+2,_RT+2
  1280  001B38  C0C9  F0FA         	movff	?_read_adc_voltage+3,_RT+3
  1281                           
  1282                           ;pwm_asl.c: 176: if (selectedMode==0){
  1283  001B3C  5049               	movf	_selectedMode,w,c
  1284  001B3E  104A               	iorwf	_selectedMode+1,w,c
  1285  001B40  A4D8               	btfss	status,2,c
  1286  001B42  D01E               	goto	l122
  1287                           
  1288                           ;pwm_asl.c: 177: turnOFFHeater();
  1289  001B44  ECC3  F01B         	call	_turnOFFHeater	;wreg free
  1290                           
  1291                           ;pwm_asl.c: 178: turnOFFCooler();
  1292  001B48  ECA3  F01B         	call	_turnOFFCooler	;wreg free
  1293                           
  1294                           ;pwm_asl.c: 179: coolAmount = 0;
  1295  001B4C  0E00               	movlw	0
  1296  001B4E  0100               	movlb	0	; () banked
  1297  001B50  6FEF               	movwf	main@coolAmount& (0+255),b
  1298  001B52  0E00               	movlw	0
  1299  001B54  6FF0               	movwf	(main@coolAmount+1)& (0+255),b
  1300  001B56  0E00               	movlw	0
  1301  001B58  6FF1               	movwf	(main@coolAmount+2)& (0+255),b
  1302  001B5A  0E00               	movlw	0
  1303  001B5C  6FF2               	movwf	(main@coolAmount+3)& (0+255),b
  1304                           
  1305                           ; BSR set to: 0
  1306                           ;pwm_asl.c: 180: set_pwm1_raw(coolAmount);
  1307  001B5E  C0EF  F0D1         	movff	main@coolAmount,___fltol@f1
  1308  001B62  C0F0  F0D2         	movff	main@coolAmount+1,___fltol@f1+1
  1309  001B66  C0F1  F0D3         	movff	main@coolAmount+2,___fltol@f1+2
  1310  001B6A  C0F2  F0D4         	movff	main@coolAmount+3,___fltol@f1+3
  1311  001B6E  EC21  F017         	call	___fltol	;wreg free
  1312  001B72  C0D1  F0DB         	movff	?___fltol,set_pwm1_raw@raw_value
  1313  001B76  C0D2  F0DC         	movff	?___fltol+1,set_pwm1_raw@raw_value+1
  1314  001B7A  ECE9  F01A         	call	_set_pwm1_raw	;wreg free
  1315                           
  1316                           ;pwm_asl.c: 182: }
  1317  001B7E  D135               	goto	l131
  1318  001B80                     l122:
  1319                           
  1320                           ;pwm_asl.c: 184: else if (selectedMode==1){
  1321  001B80  0449               	decf	_selectedMode,w,c
  1322  001B82  104A               	iorwf	_selectedMode+1,w,c
  1323  001B84  A4D8               	btfss	status,2,c
  1324  001B86  D02D               	goto	l124
  1325                           
  1326                           ;pwm_asl.c: 185: turnONCooler();
  1327  001B88  ECC1  F01B         	call	_turnONCooler	;wreg free
  1328                           
  1329                           ;pwm_asl.c: 186: turnOFFHeater();
  1330  001B8C  ECC3  F01B         	call	_turnOFFHeater	;wreg free
  1331                           
  1332                           ;pwm_asl.c: 189: raw_val = read_adc_voltage(1);
  1333  001B90  0E01               	movlw	1
  1334  001B92  ECB8  F011         	call	_read_adc_voltage
  1335  001B96  C0C6  F0D1         	movff	?_read_adc_voltage,___fltol@f1
  1336  001B9A  C0C7  F0D2         	movff	?_read_adc_voltage+1,___fltol@f1+1
  1337  001B9E  C0C8  F0D3         	movff	?_read_adc_voltage+2,___fltol@f1+2
  1338  001BA2  C0C9  F0D4         	movff	?_read_adc_voltage+3,___fltol@f1+3
  1339  001BA6  EC21  F017         	call	___fltol	;wreg free
  1340  001BAA  C0D1  F0ED         	movff	?___fltol,main@raw_val
  1341  001BAE  C0D2  F0EE         	movff	?___fltol+1,main@raw_val+1
  1342                           
  1343                           ;pwm_asl.c: 190: set_pwm1_percent(raw_val);
  1344  001BB2  C0ED  F086         	movff	main@raw_val,___xxtofl@val
  1345  001BB6  C0EE  F087         	movff	main@raw_val+1,___xxtofl@val+1
  1346  001BBA  0100               	movlb	0	; () banked
  1347  001BBC  0E00               	movlw	0
  1348  001BBE  BF87               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1349  001BC0  0EFF               	movlw	-1
  1350  001BC2  6F88               	movwf	(___xxtofl@val+2)& (0+255),b
  1351  001BC4  6F89               	movwf	(___xxtofl@val+3)& (0+255),b
  1352  001BC6  0E01               	movlw	1
  1353  001BC8  EC68  F012         	call	___xxtofl
  1354  001BCC  C086  F0DF         	movff	?___xxtofl,set_pwm1_percent@value
  1355  001BD0  C087  F0E0         	movff	?___xxtofl+1,set_pwm1_percent@value+1
  1356  001BD4  C088  F0E1         	movff	?___xxtofl+2,set_pwm1_percent@value+2
  1357  001BD8  C089  F0E2         	movff	?___xxtofl+3,set_pwm1_percent@value+3
  1358  001BDC  ECF5  F017         	call	_set_pwm1_percent	;wreg free
  1359                           
  1360                           ;pwm_asl.c: 192: }
  1361  001BE0  D104               	goto	l131
  1362  001BE2                     l124:
  1363                           
  1364                           ;pwm_asl.c: 195: else if (selectedMode==2){
  1365  001BE2  0E02               	movlw	2
  1366  001BE4  1849               	xorwf	_selectedMode,w,c
  1367  001BE6  104A               	iorwf	_selectedMode+1,w,c
  1368  001BE8  A4D8               	btfss	status,2,c
  1369  001BEA  D01E               	goto	l126
  1370                           
  1371                           ;pwm_asl.c: 196: turnOFFCooler();
  1372  001BEC  ECA3  F01B         	call	_turnOFFCooler	;wreg free
  1373                           
  1374                           ;pwm_asl.c: 197: turnONHeater();
  1375  001BF0  ECBF  F01B         	call	_turnONHeater	;wreg free
  1376                           
  1377                           ;pwm_asl.c: 198: coolAmount = 0;
  1378  001BF4  0E00               	movlw	0
  1379  001BF6  0100               	movlb	0	; () banked
  1380  001BF8  6FEF               	movwf	main@coolAmount& (0+255),b
  1381  001BFA  0E00               	movlw	0
  1382  001BFC  6FF0               	movwf	(main@coolAmount+1)& (0+255),b
  1383  001BFE  0E00               	movlw	0
  1384  001C00  6FF1               	movwf	(main@coolAmount+2)& (0+255),b
  1385  001C02  0E00               	movlw	0
  1386  001C04  6FF2               	movwf	(main@coolAmount+3)& (0+255),b
  1387                           
  1388                           ; BSR set to: 0
  1389                           ;pwm_asl.c: 199: set_pwm1_raw(coolAmount);
  1390  001C06  C0EF  F0D1         	movff	main@coolAmount,___fltol@f1
  1391  001C0A  C0F0  F0D2         	movff	main@coolAmount+1,___fltol@f1+1
  1392  001C0E  C0F1  F0D3         	movff	main@coolAmount+2,___fltol@f1+2
  1393  001C12  C0F2  F0D4         	movff	main@coolAmount+3,___fltol@f1+3
  1394  001C16  EC21  F017         	call	___fltol	;wreg free
  1395  001C1A  C0D1  F0DB         	movff	?___fltol,set_pwm1_raw@raw_value
  1396  001C1E  C0D2  F0DC         	movff	?___fltol+1,set_pwm1_raw@raw_value+1
  1397  001C22  ECE9  F01A         	call	_set_pwm1_raw	;wreg free
  1398                           
  1399                           ;pwm_asl.c: 200: }
  1400  001C26  D0E1               	goto	l131
  1401  001C28                     l126:
  1402                           
  1403                           ;pwm_asl.c: 203: else if(selectedMode==3){
  1404  001C28  0E03               	movlw	3
  1405  001C2A  1849               	xorwf	_selectedMode,w,c
  1406  001C2C  104A               	iorwf	_selectedMode+1,w,c
  1407  001C2E  A4D8               	btfss	status,2,c
  1408  001C30  D0DC               	goto	l131
  1409                           
  1410                           ;pwm_asl.c: 204: turnOFFHeater();
  1411  001C32  ECC3  F01B         	call	_turnOFFHeater	;wreg free
  1412                           
  1413                           ;pwm_asl.c: 205: turnONCooler();
  1414  001C36  ECC1  F01B         	call	_turnONCooler	;wreg free
  1415                           
  1416                           ;pwm_asl.c: 207: coolError= RT - SP;
  1417  001C3A  C0FB  F094         	movff	_SP,___flneg@f1
  1418  001C3E  C0FC  F095         	movff	_SP+1,___flneg@f1+1
  1419  001C42  C0FD  F096         	movff	_SP+2,___flneg@f1+2
  1420  001C46  C0FE  F097         	movff	_SP+3,___flneg@f1+3
  1421  001C4A  ECD1  F01A         	call	___flneg	;wreg free
  1422  001C4E  C094  F0BA         	movff	?___flneg,___fladd@b
  1423  001C52  C095  F0BB         	movff	?___flneg+1,___fladd@b+1
  1424  001C56  C096  F0BC         	movff	?___flneg+2,___fladd@b+2
  1425  001C5A  C097  F0BD         	movff	?___flneg+3,___fladd@b+3
  1426  001C5E  C0F7  F0BE         	movff	_RT,___fladd@a
  1427  001C62  C0F8  F0BF         	movff	_RT+1,___fladd@a+1
  1428  001C66  C0F9  F0C0         	movff	_RT+2,___fladd@a+2
  1429  001C6A  C0FA  F0C1         	movff	_RT+3,___fladd@a+3
  1430  001C6E  EC2E  F00A         	call	___fladd	;wreg free
  1431  001C72  C0BA  F145         	movff	?___fladd,_coolError
  1432  001C76  C0BB  F146         	movff	?___fladd+1,_coolError+1
  1433  001C7A  C0BC  F147         	movff	?___fladd+2,_coolError+2
  1434  001C7E  C0BD  F148         	movff	?___fladd+3,_coolError+3
  1435                           
  1436                           ;pwm_asl.c: 208: if(coolError > 0){
  1437  001C82  0E00               	movlw	0
  1438  001C84  0100               	movlb	0	; () banked
  1439  001C86  6FCE               	movwf	___flge@ff1& (0+255),b
  1440  001C88  0E00               	movlw	0
  1441  001C8A  6FCF               	movwf	(___flge@ff1+1)& (0+255),b
  1442  001C8C  0E00               	movlw	0
  1443  001C8E  6FD0               	movwf	(___flge@ff1+2)& (0+255),b
  1444  001C90  0E00               	movlw	0
  1445  001C92  6FD1               	movwf	(___flge@ff1+3)& (0+255),b
  1446  001C94  C145  F0D2         	movff	_coolError,___flge@ff2
  1447  001C98  C146  F0D3         	movff	_coolError+1,___flge@ff2+1
  1448  001C9C  C147  F0D4         	movff	_coolError+2,___flge@ff2+2
  1449  001CA0  C148  F0D5         	movff	_coolError+3,___flge@ff2+3
  1450  001CA4  EC86  F015         	call	___flge	;wreg free
  1451  001CA8  0100               	movlb	0	; () banked
  1452  001CAA  B0D8               	btfsc	status,0,c
  1453  001CAC  D057               	goto	l129
  1454                           
  1455                           ; BSR set to: 0
  1456                           ;pwm_asl.c: 209: float tst= coolError*100.0/10.0;
  1457  001CAE  0E00               	movlw	0
  1458  001CB0  6F98               	movwf	___flmul@a& (0+255),b
  1459  001CB2  0E00               	movlw	0
  1460  001CB4  6F99               	movwf	(___flmul@a+1)& (0+255),b
  1461  001CB6  0EC8               	movlw	200
  1462  001CB8  6F9A               	movwf	(___flmul@a+2)& (0+255),b
  1463  001CBA  0E42               	movlw	66
  1464  001CBC  6F9B               	movwf	(___flmul@a+3)& (0+255),b
  1465  001CBE  C145  F094         	movff	_coolError,___flmul@b
  1466  001CC2  C146  F095         	movff	_coolError+1,___flmul@b+1
  1467  001CC6  C147  F096         	movff	_coolError+2,___flmul@b+2
  1468  001CCA  C148  F097         	movff	_coolError+3,___flmul@b+3
  1469  001CCE  EC85  F008         	call	___flmul	;wreg free
  1470  001CD2  C094  F0AD         	movff	?___flmul,___fldiv@b
  1471  001CD6  C095  F0AE         	movff	?___flmul+1,___fldiv@b+1
  1472  001CDA  C096  F0AF         	movff	?___flmul+2,___fldiv@b+2
  1473  001CDE  C097  F0B0         	movff	?___flmul+3,___fldiv@b+3
  1474  001CE2  0E00               	movlw	0
  1475  001CE4  0100               	movlb	0	; () banked
  1476  001CE6  6FB1               	movwf	___fldiv@a& (0+255),b
  1477  001CE8  0E00               	movlw	0
  1478  001CEA  6FB2               	movwf	(___fldiv@a+1)& (0+255),b
  1479  001CEC  0E20               	movlw	32
  1480  001CEE  6FB3               	movwf	(___fldiv@a+2)& (0+255),b
  1481  001CF0  0E41               	movlw	65
  1482  001CF2  6FB4               	movwf	(___fldiv@a+3)& (0+255),b
  1483  001CF4  EC5D  F010         	call	___fldiv	;wreg free
  1484  001CF8  C0AD  F0F3         	movff	?___fldiv,main@tst
  1485  001CFC  C0AE  F0F4         	movff	?___fldiv+1,main@tst+1
  1486  001D00  C0AF  F0F5         	movff	?___fldiv+2,main@tst+2
  1487  001D04  C0B0  F0F6         	movff	?___fldiv+3,main@tst+3
  1488                           
  1489                           ;pwm_asl.c: 210: if(tst < 25){
  1490  001D08  C0F3  F0CE         	movff	main@tst,___flge@ff1
  1491  001D0C  C0F4  F0CF         	movff	main@tst+1,___flge@ff1+1
  1492  001D10  C0F5  F0D0         	movff	main@tst+2,___flge@ff1+2
  1493  001D14  C0F6  F0D1         	movff	main@tst+3,___flge@ff1+3
  1494  001D18  0E00               	movlw	0
  1495  001D1A  0100               	movlb	0	; () banked
  1496  001D1C  6FD2               	movwf	___flge@ff2& (0+255),b
  1497  001D1E  0E00               	movlw	0
  1498  001D20  6FD3               	movwf	(___flge@ff2+1)& (0+255),b
  1499  001D22  0EC8               	movlw	200
  1500  001D24  6FD4               	movwf	(___flge@ff2+2)& (0+255),b
  1501  001D26  0E41               	movlw	65
  1502  001D28  6FD5               	movwf	(___flge@ff2+3)& (0+255),b
  1503  001D2A  EC86  F015         	call	___flge	;wreg free
  1504  001D2E  0100               	movlb	0	; () banked
  1505  001D30  B0D8               	btfsc	status,0,c
  1506  001D32  D008               	goto	l130
  1507                           
  1508                           ; BSR set to: 0
  1509                           ;pwm_asl.c: 211: tst=25;
  1510  001D34  0E00               	movlw	0
  1511  001D36  6FF3               	movwf	main@tst& (0+255),b
  1512  001D38  0E00               	movlw	0
  1513  001D3A  6FF4               	movwf	(main@tst+1)& (0+255),b
  1514  001D3C  0EC8               	movlw	200
  1515  001D3E  6FF5               	movwf	(main@tst+2)& (0+255),b
  1516  001D40  0E41               	movlw	65
  1517  001D42  6FF6               	movwf	(main@tst+3)& (0+255),b
  1518  001D44                     l130:
  1519                           
  1520                           ; BSR set to: 0
  1521                           ;pwm_asl.c: 212: }
  1522                           ;pwm_asl.c: 213: turnONCooler();
  1523                           
  1524                           ; BSR set to: 0
  1525  001D44  ECC1  F01B         	call	_turnONCooler	;wreg free
  1526                           
  1527                           ;pwm_asl.c: 214: set_pwm1_percent(tst);
  1528  001D48  C0F3  F0DF         	movff	main@tst,set_pwm1_percent@value
  1529  001D4C  C0F4  F0E0         	movff	main@tst+1,set_pwm1_percent@value+1
  1530  001D50  C0F5  F0E1         	movff	main@tst+2,set_pwm1_percent@value+2
  1531  001D54  C0F6  F0E2         	movff	main@tst+3,set_pwm1_percent@value+3
  1532  001D58  ECF5  F017         	call	_set_pwm1_percent	;wreg free
  1533  001D5C                     l129:
  1534                           
  1535                           ;pwm_asl.c: 215: }
  1536                           ;pwm_asl.c: 217: if( RT < (SP-HS)){
  1537  001D5C  C0F7  F0CE         	movff	_RT,___flge@ff1
  1538  001D60  C0F8  F0CF         	movff	_RT+1,___flge@ff1+1
  1539  001D64  C0F9  F0D0         	movff	_RT+2,___flge@ff1+2
  1540  001D68  C0FA  F0D1         	movff	_RT+3,___flge@ff1+3
  1541  001D6C  C0FB  F0BE         	movff	_SP,___fladd@a
  1542  001D70  C0FC  F0BF         	movff	_SP+1,___fladd@a+1
  1543  001D74  C0FD  F0C0         	movff	_SP+2,___fladd@a+2
  1544  001D78  C0FE  F0C1         	movff	_SP+3,___fladd@a+3
  1545  001D7C  C04B  F086         	movff	_HS,___xxtofl@val
  1546  001D80  C04C  F087         	movff	_HS+1,___xxtofl@val+1
  1547  001D84  0100               	movlb	0	; () banked
  1548  001D86  6B88               	clrf	(___xxtofl@val+2)& (0+255),b
  1549  001D88  6B89               	clrf	(___xxtofl@val+3)& (0+255),b
  1550  001D8A  0E00               	movlw	0
  1551  001D8C  EC68  F012         	call	___xxtofl
  1552  001D90  C086  F094         	movff	?___xxtofl,___flneg@f1
  1553  001D94  C087  F095         	movff	?___xxtofl+1,___flneg@f1+1
  1554  001D98  C088  F096         	movff	?___xxtofl+2,___flneg@f1+2
  1555  001D9C  C089  F097         	movff	?___xxtofl+3,___flneg@f1+3
  1556  001DA0  ECD1  F01A         	call	___flneg	;wreg free
  1557  001DA4  C094  F0BA         	movff	?___flneg,___fladd@b
  1558  001DA8  C095  F0BB         	movff	?___flneg+1,___fladd@b+1
  1559  001DAC  C096  F0BC         	movff	?___flneg+2,___fladd@b+2
  1560  001DB0  C097  F0BD         	movff	?___flneg+3,___fladd@b+3
  1561  001DB4  EC2E  F00A         	call	___fladd	;wreg free
  1562  001DB8  C0BA  F0D2         	movff	?___fladd,___flge@ff2
  1563  001DBC  C0BB  F0D3         	movff	?___fladd+1,___flge@ff2+1
  1564  001DC0  C0BC  F0D4         	movff	?___fladd+2,___flge@ff2+2
  1565  001DC4  C0BD  F0D5         	movff	?___fladd+3,___flge@ff2+3
  1566  001DC8  EC86  F015         	call	___flge	;wreg free
  1567  001DCC  0100               	movlb	0	; () banked
  1568  001DCE  B0D8               	btfsc	status,0,c
  1569  001DD0  D00C               	goto	l131
  1570                           
  1571                           ; BSR set to: 0
  1572                           ;pwm_asl.c: 218: set_pwm1_percent(0);
  1573  001DD2  0E00               	movlw	0
  1574  001DD4  6FDF               	movwf	set_pwm1_percent@value& (0+255),b
  1575  001DD6  0E00               	movlw	0
  1576  001DD8  6FE0               	movwf	(set_pwm1_percent@value+1)& (0+255),b
  1577  001DDA  0E00               	movlw	0
  1578  001DDC  6FE1               	movwf	(set_pwm1_percent@value+2)& (0+255),b
  1579  001DDE  0E00               	movlw	0
  1580  001DE0  6FE2               	movwf	(set_pwm1_percent@value+3)& (0+255),b
  1581  001DE2  ECF5  F017         	call	_set_pwm1_percent	;wreg free
  1582                           
  1583                           ;pwm_asl.c: 219: turnOFFCooler();
  1584  001DE6  ECA3  F01B         	call	_turnOFFCooler	;wreg free
  1585  001DEA                     l131:
  1586                           
  1587                           ;pwm_asl.c: 221: }
  1588                           ;pwm_asl.c: 223: }
  1589                           ;pwm_asl.c: 225: RPS = RPS_count;
  1590  001DEA  C149  F0EB         	movff	_RPS_count,main@RPS
  1591  001DEE  C14A  F0EC         	movff	_RPS_count+1,main@RPS+1
  1592  001DF2  D684               	goto	l121
  1593  001DF4                     __end_of_main:
  1594                           	opt stack 0
  1595                           tblptru	equ	0xFF8
  1596                           tblptrh	equ	0xFF7
  1597                           tblptrl	equ	0xFF6
  1598                           tablat	equ	0xFF5
  1599                           postinc0	equ	0xFEE
  1600                           wreg	equ	0xFE8
  1601                           postdec1	equ	0xFE5
  1602                           fsr1l	equ	0xFE1
  1603                           status	equ	0xFD8
  1604                           
  1605 ;; *************** function _updateLCD *****************
  1606 ;; Defined at:
  1607 ;;		line 239 in file "pwm_asl.c"
  1608 ;; Parameters:    Size  Location     Type
  1609 ;;		None
  1610 ;; Auto vars:     Size  Location     Type
  1611 ;;  Buffer         32   31[BANK1 ] unsigned char [32]
  1612 ;;  s               2   63[BANK1 ] PTR unsigned char 
  1613 ;;		 -> STR_5(4), STR_4(16), STR_3(11), STR_2(14), 
  1614 ;;		 -> STR_1(13), 
  1615 ;; Return value:  Size  Location     Type
  1616 ;;                  1    wreg      void 
  1617 ;; Registers used:
  1618 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1619 ;; Tracked objects:
  1620 ;;		On entry : 0/0
  1621 ;;		On exit  : 0/0
  1622 ;;		Unchanged: 0/0
  1623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1625 ;;      Locals:         0       0      38       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1627 ;;      Totals:         0       0      38       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1628 ;;Total ram usage:       38 bytes
  1629 ;; Hardware stack levels used:    1
  1630 ;; Hardware stack levels required when called:    9
  1631 ;; This function calls:
  1632 ;;		_getMode
  1633 ;;		_lcd_gotoxy
  1634 ;;		_lcd_puts
  1635 ;;		_sprintf
  1636 ;; This function is called by:
  1637 ;;		_main
  1638 ;; This function uses a non-reentrant model
  1639 ;;
  1640                           
  1641                           	psect	text1
  1642  002774                     __ptext1:
  1643                           	opt stack 0
  1644  002774                     _updateLCD:
  1645                           	opt stack 21
  1646                           
  1647                           ;pwm_asl.c: 240: char Buffer[32];
  1648                           ;pwm_asl.c: 241: lcd_gotoxy(1, 1);
  1649                           
  1650                           ;incstack = 0
  1651  002774  0E01               	movlw	1
  1652  002776  0100               	movlb	0	; () banked
  1653  002778  6F8A               	movwf	lcd_gotoxy@y& (0+255),b
  1654  00277A  0E01               	movlw	1
  1655  00277C  EC55  F01A         	call	_lcd_gotoxy
  1656                           
  1657                           ;pwm_asl.c: 242: sprintf(Buffer, "RT: %3.1fC  H  C ",RT);
  1658  002780  0E1F               	movlw	low updateLCD@Buffer
  1659  002782  0100               	movlb	0	; () banked
  1660  002784  6FDB               	movwf	sprintf@sp& (0+255),b
  1661  002786  0E01               	movlw	high updateLCD@Buffer
  1662  002788  6FDC               	movwf	(sprintf@sp+1)& (0+255),b
  1663  00278A  0E9B               	movlw	low STR_6
  1664  00278C  6FDD               	movwf	sprintf@f& (0+255),b
  1665  00278E  0EFF               	movlw	high STR_6
  1666  002790  6FDE               	movwf	(sprintf@f+1)& (0+255),b
  1667  002792  C0F7  F0DF         	movff	_RT,?_sprintf+4
  1668  002796  C0F8  F0E0         	movff	_RT+1,?_sprintf+5
  1669  00279A  C0F9  F0E1         	movff	_RT+2,?_sprintf+6
  1670  00279E  C0FA  F0E2         	movff	_RT+3,?_sprintf+7
  1671  0027A2  EC09  F000         	call	_sprintf	;wreg free
  1672                           
  1673                           ;pwm_asl.c: 243: lcd_puts(Buffer);
  1674  0027A6  0E1F               	movlw	low updateLCD@Buffer
  1675  0027A8  0100               	movlb	0	; () banked
  1676  0027AA  6F8E               	movwf	lcd_puts@s& (0+255),b
  1677  0027AC  0E01               	movlw	high updateLCD@Buffer
  1678  0027AE  6F8F               	movwf	(lcd_puts@s+1)& (0+255),b
  1679  0027B0  EC6C  F01B         	call	_lcd_puts	;wreg free
  1680                           
  1681                           ;pwm_asl.c: 245: lcd_gotoxy(1, 2);
  1682  0027B4  0E02               	movlw	2
  1683  0027B6  0100               	movlb	0	; () banked
  1684  0027B8  6F8A               	movwf	lcd_gotoxy@y& (0+255),b
  1685  0027BA  0E01               	movlw	1
  1686  0027BC  EC55  F01A         	call	_lcd_gotoxy
  1687                           
  1688                           ;pwm_asl.c: 246: sprintf(Buffer, "SP: %3.1fC  %c  %c ",SP,PORTCbits.RC5==0?'N':'Y',PORTC
      +                          bits.RC2==0?'N':'Y');
  1689  0027C0  A482               	btfss	3970,2,c	;volatile
  1690  0027C2  D005               	goto	l147
  1691  0027C4  0E00               	movlw	0
  1692  0027C6  0101               	movlb	1	; () banked
  1693  0027C8  6F42               	movwf	(_updateLCD$621+1)& (0+255),b
  1694  0027CA  0E59               	movlw	89
  1695  0027CC  D004               	goto	L1
  1696  0027CE                     l147:
  1697                           
  1698                           ; BSR set to: 1
  1699  0027CE  0E00               	movlw	0
  1700  0027D0  0101               	movlb	1	; () banked
  1701  0027D2  6F42               	movwf	(_updateLCD$621+1)& (0+255),b
  1702  0027D4  0E4E               	movlw	78
  1703  0027D6                     L1:
  1704  0027D6  6F41               	movwf	_updateLCD$621& (0+255),b
  1705                           
  1706                           ; BSR set to: 1
  1707                           
  1708                           ; BSR set to: 1
  1709  0027D8  AA82               	btfss	3970,5,c	;volatile
  1710  0027DA  D004               	goto	l151
  1711                           
  1712                           ; BSR set to: 1
  1713  0027DC  0E00               	movlw	0
  1714  0027DE  6F44               	movwf	(_updateLCD$622+1)& (0+255),b
  1715  0027E0  0E59               	movlw	89
  1716  0027E2  D003               	goto	L2
  1717  0027E4                     l151:
  1718                           
  1719                           ; BSR set to: 1
  1720                           
  1721                           ; BSR set to: 1
  1722  0027E4  0E00               	movlw	0
  1723  0027E6  6F44               	movwf	(_updateLCD$622+1)& (0+255),b
  1724  0027E8  0E4E               	movlw	78
  1725  0027EA                     L2:
  1726  0027EA  6F43               	movwf	_updateLCD$622& (0+255),b
  1727                           
  1728                           ; BSR set to: 1
  1729                           
  1730                           ; BSR set to: 1
  1731  0027EC  0E1F               	movlw	low updateLCD@Buffer
  1732  0027EE  0100               	movlb	0	; () banked
  1733  0027F0  6FDB               	movwf	sprintf@sp& (0+255),b
  1734  0027F2  0E01               	movlw	high updateLCD@Buffer
  1735  0027F4  6FDC               	movwf	(sprintf@sp+1)& (0+255),b
  1736  0027F6  0E87               	movlw	low STR_7
  1737  0027F8  6FDD               	movwf	sprintf@f& (0+255),b
  1738  0027FA  0EFF               	movlw	high STR_7
  1739  0027FC  6FDE               	movwf	(sprintf@f+1)& (0+255),b
  1740  0027FE  C0FB  F0DF         	movff	_SP,?_sprintf+4
  1741  002802  C0FC  F0E0         	movff	_SP+1,?_sprintf+5
  1742  002806  C0FD  F0E1         	movff	_SP+2,?_sprintf+6
  1743  00280A  C0FE  F0E2         	movff	_SP+3,?_sprintf+7
  1744  00280E  C143  F0E3         	movff	_updateLCD$622,?_sprintf+8
  1745  002812  C144  F0E4         	movff	_updateLCD$622+1,?_sprintf+9
  1746  002816  C141  F0E5         	movff	_updateLCD$621,?_sprintf+10
  1747  00281A  C142  F0E6         	movff	_updateLCD$621+1,?_sprintf+11
  1748  00281E  EC09  F000         	call	_sprintf	;wreg free
  1749                           
  1750                           ;pwm_asl.c: 247: lcd_puts(Buffer);
  1751  002822  0E1F               	movlw	low updateLCD@Buffer
  1752  002824  0100               	movlb	0	; () banked
  1753  002826  6F8E               	movwf	lcd_puts@s& (0+255),b
  1754  002828  0E01               	movlw	high updateLCD@Buffer
  1755  00282A  6F8F               	movwf	(lcd_puts@s+1)& (0+255),b
  1756  00282C  EC6C  F01B         	call	_lcd_puts	;wreg free
  1757                           
  1758                           ;pwm_asl.c: 249: lcd_gotoxy(1, 3);
  1759  002830  0E03               	movlw	3
  1760  002832  0100               	movlb	0	; () banked
  1761  002834  6F8A               	movwf	lcd_gotoxy@y& (0+255),b
  1762  002836  0E01               	movlw	1
  1763  002838  EC55  F01A         	call	_lcd_gotoxy
  1764                           
  1765                           ;pwm_asl.c: 250: sprintf(Buffer, "HS : %d ",HS);
  1766  00283C  0E1F               	movlw	low updateLCD@Buffer
  1767  00283E  0100               	movlb	0	; () banked
  1768  002840  6FDB               	movwf	sprintf@sp& (0+255),b
  1769  002842  0E01               	movlw	high updateLCD@Buffer
  1770  002844  6FDC               	movwf	(sprintf@sp+1)& (0+255),b
  1771  002846  0EE3               	movlw	low STR_8
  1772  002848  6FDD               	movwf	sprintf@f& (0+255),b
  1773  00284A  0EFF               	movlw	high STR_8
  1774  00284C  6FDE               	movwf	(sprintf@f+1)& (0+255),b
  1775  00284E  C04B  F0DF         	movff	_HS,?_sprintf+4
  1776  002852  C04C  F0E0         	movff	_HS+1,?_sprintf+5
  1777  002856  EC09  F000         	call	_sprintf	;wreg free
  1778                           
  1779                           ;pwm_asl.c: 251: lcd_puts(Buffer);
  1780  00285A  0E1F               	movlw	low updateLCD@Buffer
  1781  00285C  0100               	movlb	0	; () banked
  1782  00285E  6F8E               	movwf	lcd_puts@s& (0+255),b
  1783  002860  0E01               	movlw	high updateLCD@Buffer
  1784  002862  6F8F               	movwf	(lcd_puts@s+1)& (0+255),b
  1785  002864  EC6C  F01B         	call	_lcd_puts	;wreg free
  1786                           
  1787                           ;pwm_asl.c: 253: lcd_gotoxy(1, 4);
  1788  002868  0E04               	movlw	4
  1789  00286A  0100               	movlb	0	; () banked
  1790  00286C  6F8A               	movwf	lcd_gotoxy@y& (0+255),b
  1791  00286E  0E01               	movlw	1
  1792  002870  EC55  F01A         	call	_lcd_gotoxy
  1793                           
  1794                           ;pwm_asl.c: 254: char* s= getMode();
  1795  002874  ECAF  F019         	call	_getMode	;wreg free
  1796  002878  C080  F13F         	movff	?_getMode,updateLCD@s
  1797  00287C  C081  F140         	movff	?_getMode+1,updateLCD@s+1
  1798                           
  1799                           ;pwm_asl.c: 255: sprintf(Buffer, "MD: %s ",s);
  1800  002880  0E1F               	movlw	low updateLCD@Buffer
  1801  002882  0100               	movlb	0	; () banked
  1802  002884  6FDB               	movwf	sprintf@sp& (0+255),b
  1803  002886  0E01               	movlw	high updateLCD@Buffer
  1804  002888  6FDC               	movwf	(sprintf@sp+1)& (0+255),b
  1805  00288A  0EEC               	movlw	low STR_9
  1806  00288C  6FDD               	movwf	sprintf@f& (0+255),b
  1807  00288E  0EFF               	movlw	high STR_9
  1808  002890  6FDE               	movwf	(sprintf@f+1)& (0+255),b
  1809  002892  C13F  F0DF         	movff	updateLCD@s,?_sprintf+4
  1810  002896  C140  F0E0         	movff	updateLCD@s+1,?_sprintf+5
  1811  00289A  EC09  F000         	call	_sprintf	;wreg free
  1812                           
  1813                           ;pwm_asl.c: 256: lcd_puts(Buffer);
  1814  00289E  0E1F               	movlw	low updateLCD@Buffer
  1815  0028A0  0100               	movlb	0	; () banked
  1816  0028A2  6F8E               	movwf	lcd_puts@s& (0+255),b
  1817  0028A4  0E01               	movlw	high updateLCD@Buffer
  1818  0028A6  6F8F               	movwf	(lcd_puts@s+1)& (0+255),b
  1819  0028A8  EC6C  F01B         	call	_lcd_puts	;wreg free
  1820  0028AC  0012               	return		;funcret
  1821  0028AE                     __end_of_updateLCD:
  1822                           	opt stack 0
  1823                           tblptru	equ	0xFF8
  1824                           tblptrh	equ	0xFF7
  1825                           tblptrl	equ	0xFF6
  1826                           tablat	equ	0xFF5
  1827                           postinc0	equ	0xFEE
  1828                           wreg	equ	0xFE8
  1829                           postdec1	equ	0xFE5
  1830                           fsr1l	equ	0xFE1
  1831                           status	equ	0xFD8
  1832                           
  1833 ;; *************** function _sprintf *****************
  1834 ;; Defined at:
  1835 ;;		line 492 in file "/opt/microchip/xc8/v1.45/sources/common/doprnt.c"
  1836 ;; Parameters:    Size  Location     Type
  1837 ;;  sp              2   91[BANK0 ] PTR unsigned char 
  1838 ;;		 -> updateLCD@Buffer(32), 
  1839 ;;  f               2   93[BANK0 ] PTR const unsigned char 
  1840 ;;		 -> STR_9(8), STR_8(9), STR_7(20), STR_6(18), 
  1841 ;; Auto vars:     Size  Location     Type
  1842 ;;  fval            4   24[BANK1 ] PTR const unsigned char 
  1843 ;;  val             4   16[BANK1 ] unsigned long 
  1844 ;;  tmpval          4   12[BANK1 ] struct .
  1845 ;;  prec            2   28[BANK1 ] int 
  1846 ;;  width           2   22[BANK1 ] int 
  1847 ;;  exp             2   20[BANK1 ] int 
  1848 ;;  flag            2   10[BANK1 ] unsigned short 
  1849 ;;  len             2    8[BANK1 ] unsigned int 
  1850 ;;  ap              2    6[BANK1 ] PTR void [1]
  1851 ;;		 -> ?_sprintf(2), 
  1852 ;;  cp              2    4[BANK1 ] PTR const unsigned char 
  1853 ;;		 -> STR_10(7), sprintf@c(1), STR_5(4), STR_4(16), 
  1854 ;;		 -> STR_3(11), STR_2(14), STR_1(13), 
  1855 ;;  c               1   30[BANK1 ] char 
  1856 ;;  d               1    0        unsigned char 
  1857 ;; Return value:  Size  Location     Type
  1858 ;;                  2   91[BANK0 ] int 
  1859 ;; Registers used:
  1860 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1861 ;; Tracked objects:
  1862 ;;		On entry : 0/0
  1863 ;;		On exit  : 0/0
  1864 ;;		Unchanged: 0/0
  1865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1866 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1867 ;;      Locals:         0       0      31       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1868 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1869 ;;      Totals:         0      16      31       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1870 ;;Total ram usage:       47 bytes
  1871 ;; Hardware stack levels used:    1
  1872 ;; Hardware stack levels required when called:    5
  1873 ;; This function calls:
  1874 ;;		___awdiv
  1875 ;;		___fladd
  1876 ;;		___flge
  1877 ;;		___flmul
  1878 ;;		___flneg
  1879 ;;		___flsub
  1880 ;;		___fltol
  1881 ;;		___lldiv
  1882 ;;		___llmod
  1883 ;;		___wmul
  1884 ;;		___xxtofl
  1885 ;;		__div_to_l_
  1886 ;;		__tdiv_to_l_
  1887 ;;		_fround
  1888 ;;		_isdigit
  1889 ;;		_scale
  1890 ;; This function is called by:
  1891 ;;		_updateLCD
  1892 ;; This function uses a non-reentrant model
  1893 ;;
  1894                           
  1895                           	psect	text2
  1896  000012                     __ptext2:
  1897                           	opt stack 0
  1898  000012                     _sprintf:
  1899                           	opt stack 24
  1900                           
  1901                           ;doprnt.c: 494: va_list ap;
  1902                           ;doprnt.c: 499: signed char c;
  1903                           ;doprnt.c: 501: int width;
  1904                           ;doprnt.c: 504: int prec;
  1905                           ;doprnt.c: 508: unsigned short flag;
  1906                           ;doprnt.c: 515: char d;
  1907                           ;doprnt.c: 516: double fval;
  1908                           ;doprnt.c: 517: int exp;
  1909                           ;doprnt.c: 523: union {
  1910                           ;doprnt.c: 524: unsigned long vd;
  1911                           ;doprnt.c: 525: double integ;
  1912                           ;doprnt.c: 526: } tmpval;
  1913                           ;doprnt.c: 528: unsigned long val;
  1914                           ;doprnt.c: 529: unsigned len;
  1915                           ;doprnt.c: 530: const char * cp;
  1916                           ;doprnt.c: 533: *ap = __va_start();
  1917                           
  1918                           ;incstack = 0
  1919  000012  0EDF               	movlw	low (?_sprintf+4)
  1920  000014  0101               	movlb	1	; () banked
  1921  000016  6F06               	movwf	sprintf@ap& (0+255),b
  1922  000018  0E00               	movlw	high (?_sprintf+4)
  1923  00001A  6F07               	movwf	(sprintf@ap+1)& (0+255),b
  1924                           
  1925                           ;doprnt.c: 536: while(c = *f++) {
  1926  00001C  EF1C  F006         	goto	u4800
  1927  000020                     
  1928                           ; BSR set to: 1
  1929                           ;doprnt.c: 538: if(c != '%')
  1930                           
  1931                           ; BSR set to: 1
  1932  000020  0E25               	movlw	37
  1933  000022  191E               	xorwf	sprintf@c& (0+255),w,b
  1934  000024  B4D8               	btfsc	status,2,c
  1935  000026  D00B               	goto	l395
  1936                           
  1937                           ; BSR set to: 1
  1938                           ;doprnt.c: 540: {
  1939                           ;doprnt.c: 541: ((*sp++ = (c)));
  1940  000028  C0DB  FFD9         	movff	sprintf@sp,fsr2l
  1941  00002C  C0DC  FFDA         	movff	sprintf@sp+1,fsr2h
  1942  000030  C11E  FFDF         	movff	sprintf@c,indf2
  1943                           
  1944                           ; BSR set to: 1
  1945  000034  0100               	movlb	0	; () banked
  1946  000036  4BDB               	infsnz	sprintf@sp& (0+255),f,b
  1947  000038  2BDC               	incf	(sprintf@sp+1)& (0+255),f,b
  1948                           
  1949                           ;doprnt.c: 542: continue;
  1950  00003A  EF1C  F006         	goto	u4800
  1951  00003E                     l395:
  1952                           
  1953                           ;doprnt.c: 543: }
  1954                           ;doprnt.c: 546: width = 0;
  1955                           
  1956                           ; BSR set to: 0
  1957  00003E  0E00               	movlw	0
  1958  000040  0101               	movlb	1	; () banked
  1959  000042  6F17               	movwf	(sprintf@width+1)& (0+255),b
  1960  000044  0E00               	movlw	0
  1961  000046  6F16               	movwf	sprintf@width& (0+255),b
  1962                           
  1963                           ;doprnt.c: 548: flag = 0;
  1964  000048  0E00               	movlw	0
  1965  00004A  6F0B               	movwf	(sprintf@flag+1)& (0+255),b
  1966  00004C  0E00               	movlw	0
  1967  00004E  6F0A               	movwf	sprintf@flag& (0+255),b
  1968                           
  1969                           ; BSR set to: 1
  1970                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  1971  000050  C0DD  FFF6         	movff	sprintf@f,tblptrl
  1972  000054  C0DE  FFF7         	movff	sprintf@f+1,tblptrh
  1973  000058                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1974  000058  6AF8               	clrf	tblptru,c
  1975  00005A                     	endif
  1976  00005A                     	if	0	;tblptru may be non-zero
  1977  00005A                     	endif
  1978  00005A  0008               	tblrd		*
  1979  00005C  50F5               	movf	tablat,w,c
  1980  00005E  EC92  F01B         	call	_isdigit
  1981  000062  A0D8               	btfss	status,0,c
  1982  000064  D03B               	goto	u4260
  1983                           
  1984                           ;doprnt.c: 598: width = 0;
  1985  000066  0E00               	movlw	0
  1986  000068  0101               	movlb	1	; () banked
  1987  00006A  6F17               	movwf	(sprintf@width+1)& (0+255),b
  1988  00006C  0E00               	movlw	0
  1989  00006E  6F16               	movwf	sprintf@width& (0+255),b
  1990  000070                     
  1991                           ;doprnt.c: 600: width *= 10;
  1992                           
  1993                           ; BSR set to: 1
  1994  000070  C116  F080         	movff	sprintf@width,___wmul@multiplier
  1995  000074  C117  F081         	movff	sprintf@width+1,___wmul@multiplier+1
  1996  000078  0E00               	movlw	0
  1997  00007A  0100               	movlb	0	; () banked
  1998  00007C  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1999  00007E  0E0A               	movlw	10
  2000  000080  6F82               	movwf	___wmul@multiplicand& (0+255),b
  2001  000082  EC58  F01B         	call	___wmul	;wreg free
  2002  000086  C080  F116         	movff	?___wmul,sprintf@width
  2003  00008A  C081  F117         	movff	?___wmul+1,sprintf@width+1
  2004                           
  2005                           ;doprnt.c: 601: width += *f++ - '0';
  2006  00008E  0ED0               	movlw	208
  2007  000090  0100               	movlb	0	; () banked
  2008  000092  6FE7               	movwf	??_sprintf& (0+255),b
  2009  000094  0EFF               	movlw	255
  2010  000096  6FE8               	movwf	(??_sprintf+1)& (0+255),b
  2011  000098  C0DD  FFF6         	movff	sprintf@f,tblptrl
  2012  00009C  C0DE  FFF7         	movff	sprintf@f+1,tblptrh
  2013  0000A0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2014  0000A0  6AF8               	clrf	tblptru,c
  2015  0000A2                     	endif
  2016  0000A2                     	if	0	;tblptru may be non-zero
  2017  0000A2                     	endif
  2018  0000A2  0008               	tblrd		*
  2019  0000A4  50F5               	movf	tablat,w,c
  2020  0000A6  6FE9               	movwf	(??_sprintf+2)& (0+255),b
  2021  0000A8  6BEA               	clrf	(??_sprintf+3)& (0+255),b
  2022  0000AA  51E7               	movf	??_sprintf& (0+255),w,b
  2023  0000AC  27E9               	addwf	(??_sprintf+2)& (0+255),f,b
  2024  0000AE  51E8               	movf	(??_sprintf+1)& (0+255),w,b
  2025  0000B0  23EA               	addwfc	(??_sprintf+3)& (0+255),f,b
  2026  0000B2  51E9               	movf	(??_sprintf+2)& (0+255),w,b
  2027  0000B4  0101               	movlb	1	; () banked
  2028  0000B6  2716               	addwf	sprintf@width& (0+255),f,b
  2029  0000B8  0100               	movlb	0	; () banked
  2030  0000BA  51EA               	movf	(??_sprintf+3)& (0+255),w,b
  2031  0000BC  0101               	movlb	1	; () banked
  2032  0000BE  2317               	addwfc	(sprintf@width+1)& (0+255),f,b
  2033                           
  2034                           ; BSR set to: 1
  2035  0000C0  0100               	movlb	0	; () banked
  2036  0000C2  4BDD               	infsnz	sprintf@f& (0+255),f,b
  2037  0000C4  2BDE               	incf	(sprintf@f+1)& (0+255),f,b
  2038                           
  2039                           ; BSR set to: 0
  2040                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  2041  0000C6  C0DD  FFF6         	movff	sprintf@f,tblptrl
  2042  0000CA  C0DE  FFF7         	movff	sprintf@f+1,tblptrh
  2043  0000CE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2044  0000CE  6AF8               	clrf	tblptru,c
  2045  0000D0                     	endif
  2046  0000D0                     	if	0	;tblptru may be non-zero
  2047  0000D0                     	endif
  2048  0000D0  0008               	tblrd		*
  2049  0000D2  50F5               	movf	tablat,w,c
  2050  0000D4  EC92  F01B         	call	_isdigit
  2051  0000D8  B0D8               	btfsc	status,0,c
  2052  0000DA  D7CA               	goto	l397
  2053  0000DC                     u4260:
  2054                           
  2055                           ;doprnt.c: 608: }
  2056                           ;doprnt.c: 611: if(*f == '.') {
  2057  0000DC  C0DD  FFF6         	movff	sprintf@f,tblptrl
  2058  0000E0  C0DE  FFF7         	movff	sprintf@f+1,tblptrh
  2059  0000E4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2060  0000E4  6AF8               	clrf	tblptru,c
  2061  0000E6                     	endif
  2062  0000E6                     	if	0	;tblptru may be non-zero
  2063  0000E6                     	endif
  2064  0000E6  0008               	tblrd		*
  2065  0000E8  50F5               	movf	tablat,w,c
  2066  0000EA  0A2E               	xorlw	46
  2067  0000EC  A4D8               	btfss	status,2,c
  2068  0000EE  D039               	goto	l399
  2069                           
  2070                           ;doprnt.c: 612: flag |= 0x4000;
  2071  0000F0  0101               	movlb	1	; () banked
  2072  0000F2  8D0B               	bsf	(sprintf@flag+1)& (0+255),6,b
  2073                           
  2074                           ;doprnt.c: 613: f++;
  2075  0000F4  0100               	movlb	0	; () banked
  2076  0000F6  4BDD               	infsnz	sprintf@f& (0+255),f,b
  2077  0000F8  2BDE               	incf	(sprintf@f+1)& (0+255),f,b
  2078                           
  2079                           ; BSR set to: 0
  2080                           ;doprnt.c: 620: {
  2081                           ;doprnt.c: 621: prec = 0;
  2082  0000FA  0E00               	movlw	0
  2083  0000FC  0101               	movlb	1	; () banked
  2084  0000FE  6F1D               	movwf	(sprintf@prec+1)& (0+255),b
  2085  000100  0E00               	movlw	0
  2086  000102  6F1C               	movwf	sprintf@prec& (0+255),b
  2087                           
  2088                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  2089  000104  D022               	goto	l400
  2090  000106                     
  2091                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  2092                           
  2093                           ; BSR set to: 1
  2094  000106  C11C  F080         	movff	sprintf@prec,___wmul@multiplier
  2095  00010A  C11D  F081         	movff	sprintf@prec+1,___wmul@multiplier+1
  2096  00010E  0E00               	movlw	0
  2097  000110  0100               	movlb	0	; () banked
  2098  000112  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2099  000114  0E0A               	movlw	10
  2100  000116  6F82               	movwf	___wmul@multiplicand& (0+255),b
  2101  000118  EC58  F01B         	call	___wmul	;wreg free
  2102  00011C  C0DD  FFF6         	movff	sprintf@f,tblptrl
  2103  000120  C0DE  FFF7         	movff	sprintf@f+1,tblptrh
  2104  000124                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2105  000124  6AF8               	clrf	tblptru,c
  2106  000126                     	endif
  2107  000126                     	if	0	;tblptru may be non-zero
  2108  000126                     	endif
  2109  000126  0008               	tblrd		*
  2110  000128  50F5               	movf	tablat,w,c
  2111  00012A  0100               	movlb	0	; () banked
  2112  00012C  2780               	addwf	?___wmul& (0+255),f,b
  2113  00012E  0E00               	movlw	0
  2114  000130  2381               	addwfc	(?___wmul+1)& (0+255),f,b
  2115  000132  0ED0               	movlw	208
  2116  000134  2580               	addwf	?___wmul& (0+255),w,b
  2117  000136  0101               	movlb	1	; () banked
  2118  000138  6F1C               	movwf	sprintf@prec& (0+255),b
  2119  00013A  0EFF               	movlw	255
  2120  00013C  0100               	movlb	0	; () banked
  2121  00013E  2181               	addwfc	(?___wmul+1)& (0+255),w,b
  2122  000140  0101               	movlb	1	; () banked
  2123  000142  6F1D               	movwf	(sprintf@prec+1)& (0+255),b
  2124                           
  2125                           ; BSR set to: 1
  2126  000144  0100               	movlb	0	; () banked
  2127  000146  4BDD               	infsnz	sprintf@f& (0+255),f,b
  2128  000148  2BDE               	incf	(sprintf@f+1)& (0+255),f,b
  2129  00014A                     l400:
  2130                           
  2131                           ; BSR set to: 0
  2132  00014A  C0DD  FFF6         	movff	sprintf@f,tblptrl
  2133  00014E  C0DE  FFF7         	movff	sprintf@f+1,tblptrh
  2134  000152                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2135  000152  6AF8               	clrf	tblptru,c
  2136  000154                     	endif
  2137  000154                     	if	0	;tblptru may be non-zero
  2138  000154                     	endif
  2139  000154  0008               	tblrd		*
  2140  000156  50F5               	movf	tablat,w,c
  2141  000158  EC92  F01B         	call	_isdigit
  2142  00015C  A0D8               	btfss	status,0,c
  2143  00015E  D0AF               	goto	l404
  2144  000160  D7D2               	goto	l401
  2145  000162                     l399:
  2146                           
  2147                           ;doprnt.c: 626: prec = 0;
  2148  000162  0E00               	movlw	0
  2149  000164  0101               	movlb	1	; () banked
  2150  000166  6F1D               	movwf	(sprintf@prec+1)& (0+255),b
  2151  000168  0E00               	movlw	0
  2152  00016A  6F1C               	movwf	sprintf@prec& (0+255),b
  2153                           
  2154                           ; BSR set to: 1
  2155                           ;doprnt.c: 628: flag |= 0x1000;
  2156  00016C  890B               	bsf	(sprintf@flag+1)& (0+255),4,b
  2157                           
  2158                           ; BSR set to: 1
  2159                           ;doprnt.c: 630: }
  2160                           ;doprnt.c: 635: switch(c = *f++) {
  2161  00016E  D0A7               	goto	l404
  2162  000170                     
  2163                           ; BSR set to: 1
  2164                           ;doprnt.c: 663: flag |= 0x400;
  2165                           
  2166                           ; BSR set to: 1
  2167  000170  850B               	bsf	(sprintf@flag+1)& (0+255),2,b
  2168                           
  2169                           ; BSR set to: 1
  2170                           ;doprnt.c: 698: case 'i':
  2171                           ;doprnt.c: 699: break;
  2172                           
  2173                           ; BSR set to: 1
  2174                           
  2175                           ;doprnt.c: 697: case 'd':
  2176                           
  2177                           ;doprnt.c: 664: break;
  2178  000172  D0C6               	goto	l408
  2179  000174                     
  2180                           ; BSR set to: 1
  2181                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  2182                           
  2183                           ; BSR set to: 1
  2184  000174  C106  FFD9         	movff	sprintf@ap,fsr2l
  2185  000178  C107  FFDA         	movff	sprintf@ap+1,fsr2h
  2186  00017C  CFDE F104          	movff	postinc2,sprintf@cp
  2187  000180  CFDD F105          	movff	postdec2,sprintf@cp+1
  2188                           
  2189                           ; BSR set to: 1
  2190  000184  0E02               	movlw	2
  2191  000186  2706               	addwf	sprintf@ap& (0+255),f,b
  2192  000188  0E00               	movlw	0
  2193  00018A  2307               	addwfc	(sprintf@ap+1)& (0+255),f,b
  2194                           
  2195                           ; BSR set to: 1
  2196                           ;doprnt.c: 740: if(!cp)
  2197  00018C  5104               	movf	sprintf@cp& (0+255),w,b
  2198  00018E  1105               	iorwf	(sprintf@cp+1)& (0+255),w,b
  2199  000190  A4D8               	btfss	status,2,c
  2200  000192  D004               	goto	l412
  2201                           
  2202                           ; BSR set to: 1
  2203                           ;doprnt.c: 741: cp = "(null)";
  2204  000194  0EF4               	movlw	low STR_10
  2205  000196  6F04               	movwf	sprintf@cp& (0+255),b
  2206  000198  0EFF               	movlw	high STR_10
  2207  00019A  6F05               	movwf	(sprintf@cp+1)& (0+255),b
  2208  00019C                     l412:
  2209                           
  2210                           ; BSR set to: 1
  2211                           ;doprnt.c: 745: len = 0;
  2212                           
  2213                           ; BSR set to: 1
  2214  00019C  0E00               	movlw	0
  2215  00019E  6F09               	movwf	(sprintf@len+1)& (0+255),b
  2216  0001A0  0E00               	movlw	0
  2217  0001A2  6F08               	movwf	sprintf@len& (0+255),b
  2218                           
  2219                           ;doprnt.c: 746: while(cp[len])
  2220  0001A4  D003               	goto	l413
  2221  0001A6                     
  2222                           ;doprnt.c: 747: len++;
  2223                           
  2224                           ; BSR set to: 1
  2225  0001A6  0101               	movlb	1	; () banked
  2226  0001A8  4B08               	infsnz	sprintf@len& (0+255),f,b
  2227  0001AA  2B09               	incf	(sprintf@len+1)& (0+255),f,b
  2228  0001AC                     l413:
  2229                           
  2230                           ; BSR set to: 1
  2231                           
  2232                           ; BSR set to: 1
  2233  0001AC  5108               	movf	sprintf@len& (0+255),w,b
  2234  0001AE  2504               	addwf	sprintf@cp& (0+255),w,b
  2235  0001B0  0100               	movlb	0	; () banked
  2236  0001B2  6FE7               	movwf	??_sprintf& (0+255),b
  2237  0001B4  0101               	movlb	1	; () banked
  2238  0001B6  5109               	movf	(sprintf@len+1)& (0+255),w,b
  2239  0001B8  2105               	addwfc	(sprintf@cp+1)& (0+255),w,b
  2240  0001BA  0100               	movlb	0	; () banked
  2241  0001BC  6FE8               	movwf	(??_sprintf+1)& (0+255),b
  2242  0001BE  C0E7  FFF6         	movff	??_sprintf,tblptrl
  2243  0001C2  C0E8  FFF7         	movff	??_sprintf+1,tblptrh
  2244  0001C6  0E00               	movlw	low (__mediumconst shr (0+16))
  2245  0001C8  6EF8               	movwf	tblptru,c
  2246  0001CA  0E0F               	movlw	(high __ramtop+-1)
  2247  0001CC  64F7               	cpfsgt	tblptrh,c
  2248  0001CE  D003               	bra	u4307
  2249  0001D0  0008               	tblrd		*
  2250  0001D2  50F5               	movf	tablat,w,c
  2251  0001D4  D005               	bra	u4300
  2252  0001D6                     u4307:
  2253  0001D6  CFF6 FFE9          	movff	tblptrl,fsr0l
  2254  0001DA  CFF7 FFEA          	movff	tblptrh,fsr0h
  2255  0001DE  50EF               	movf	indf0,w,c
  2256  0001E0                     u4300:
  2257  0001E0  0900               	iorlw	0
  2258  0001E2  A4D8               	btfss	status,2,c
  2259  0001E4  D7E0               	goto	l414
  2260  0001E6                     u4310:
  2261                           
  2262                           ;doprnt.c: 753: if(prec && prec < len)
  2263                           
  2264                           ;doprnt.c: 750: dostring:
  2265  0001E6  0101               	movlb	1	; () banked
  2266  0001E8  511C               	movf	sprintf@prec& (0+255),w,b
  2267  0001EA  111D               	iorwf	(sprintf@prec+1)& (0+255),w,b
  2268  0001EC  B4D8               	btfsc	status,2,c
  2269  0001EE  D00A               	goto	l417
  2270                           
  2271                           ; BSR set to: 1
  2272  0001F0  5108               	movf	sprintf@len& (0+255),w,b
  2273  0001F2  5D1C               	subwf	sprintf@prec& (0+255),w,b
  2274  0001F4  5109               	movf	(sprintf@len+1)& (0+255),w,b
  2275  0001F6  591D               	subwfb	(sprintf@prec+1)& (0+255),w,b
  2276  0001F8  B0D8               	btfsc	status,0,c
  2277  0001FA  D004               	goto	l417
  2278                           
  2279                           ; BSR set to: 1
  2280                           ;doprnt.c: 754: len = prec;
  2281  0001FC  C11C  F108         	movff	sprintf@prec,sprintf@len
  2282  000200  C11D  F109         	movff	sprintf@prec+1,sprintf@len+1
  2283  000204                     l417:
  2284                           
  2285                           ; BSR set to: 1
  2286                           ;doprnt.c: 757: if(width > len)
  2287                           
  2288                           ; BSR set to: 1
  2289  000204  5116               	movf	sprintf@width& (0+255),w,b
  2290  000206  5D08               	subwf	sprintf@len& (0+255),w,b
  2291  000208  5117               	movf	(sprintf@width+1)& (0+255),w,b
  2292  00020A  5909               	subwfb	(sprintf@len+1)& (0+255),w,b
  2293  00020C  B0D8               	btfsc	status,0,c
  2294  00020E  D005               	goto	l418
  2295                           
  2296                           ; BSR set to: 1
  2297                           ;doprnt.c: 758: width -= len;
  2298  000210  5108               	movf	sprintf@len& (0+255),w,b
  2299  000212  5F16               	subwf	sprintf@width& (0+255),f,b
  2300  000214  5109               	movf	(sprintf@len+1)& (0+255),w,b
  2301  000216  5B17               	subwfb	(sprintf@width+1)& (0+255),f,b
  2302  000218  D00E               	goto	l420
  2303  00021A                     l418:
  2304                           
  2305                           ; BSR set to: 1
  2306                           ;doprnt.c: 759: else
  2307                           ;doprnt.c: 760: width = 0;
  2308                           
  2309                           ; BSR set to: 1
  2310  00021A  0E00               	movlw	0
  2311  00021C  6F17               	movwf	(sprintf@width+1)& (0+255),b
  2312  00021E  0E00               	movlw	0
  2313  000220  6F16               	movwf	sprintf@width& (0+255),b
  2314                           
  2315                           ; BSR set to: 1
  2316                           ;doprnt.c: 764: while(width--)
  2317  000222  D009               	goto	l420
  2318  000224                     l4166:
  2319                           
  2320                           ; BSR set to: 1
  2321                           ;doprnt.c: 765: ((*sp++ = (' ')));
  2322  000224  C0DB  FFD9         	movff	sprintf@sp,fsr2l
  2323  000228  C0DC  FFDA         	movff	sprintf@sp+1,fsr2h
  2324  00022C  0E20               	movlw	32
  2325  00022E  6EDF               	movwf	indf2,c
  2326                           
  2327                           ; BSR set to: 1
  2328  000230  0100               	movlb	0	; () banked
  2329  000232  4BDB               	infsnz	sprintf@sp& (0+255),f,b
  2330  000234  2BDC               	incf	(sprintf@sp+1)& (0+255),f,b
  2331  000236                     l420:
  2332                           
  2333                           ; BSR set to: 0
  2334  000236  0101               	movlb	1	; () banked
  2335  000238  0716               	decf	sprintf@width& (0+255),f,b
  2336  00023A  A0D8               	btfss	status,0,c
  2337  00023C  0717               	decf	(sprintf@width+1)& (0+255),f,b
  2338  00023E  2916               	incf	sprintf@width& (0+255),w,b
  2339  000240  E1F1               	bnz	l4166
  2340  000242  2917               	incf	(sprintf@width+1)& (0+255),w,b
  2341  000244  B4D8               	btfsc	status,2,c
  2342  000246  D01D               	goto	l423
  2343  000248  D7ED               	goto	l421
  2344  00024A                     l4172:
  2345                           
  2346                           ; BSR set to: 1
  2347                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
  2348  00024A  C104  FFF6         	movff	sprintf@cp,tblptrl
  2349  00024E  C105  FFF7         	movff	sprintf@cp+1,tblptrh
  2350  000252  0E00               	movlw	low (__mediumconst shr (0+16))
  2351  000254  6EF8               	movwf	tblptru,c
  2352  000256  C0DB  FFD9         	movff	sprintf@sp,fsr2l
  2353  00025A  C0DC  FFDA         	movff	sprintf@sp+1,fsr2h
  2354  00025E  0E0F               	movlw	(high __ramtop+-1)
  2355  000260  64F7               	cpfsgt	tblptrh,c
  2356  000262  D003               	bra	u4367
  2357  000264  0008               	tblrd		*
  2358  000266  50F5               	movf	tablat,w,c
  2359  000268  D005               	bra	u4360
  2360  00026A                     u4367:
  2361  00026A  CFF6 FFE9          	movff	tblptrl,fsr0l
  2362  00026E  CFF7 FFEA          	movff	tblptrh,fsr0h
  2363  000272  50EF               	movf	indf0,w,c
  2364  000274                     u4360:
  2365  000274  6EDF               	movwf	indf2,c
  2366  000276  0101               	movlb	1	; () banked
  2367  000278  4B04               	infsnz	sprintf@cp& (0+255),f,b
  2368  00027A  2B05               	incf	(sprintf@cp+1)& (0+255),f,b
  2369                           
  2370                           ; BSR set to: 1
  2371  00027C  0100               	movlb	0	; () banked
  2372  00027E  4BDB               	infsnz	sprintf@sp& (0+255),f,b
  2373  000280  2BDC               	incf	(sprintf@sp+1)& (0+255),f,b
  2374  000282                     l423:
  2375                           
  2376                           ; BSR set to: 0
  2377  000282  0101               	movlb	1	; () banked
  2378  000284  0708               	decf	sprintf@len& (0+255),f,b
  2379  000286  A0D8               	btfss	status,0,c
  2380  000288  0709               	decf	(sprintf@len+1)& (0+255),f,b
  2381  00028A  2908               	incf	sprintf@len& (0+255),w,b
  2382  00028C  E1DE               	bnz	l4172
  2383  00028E  2909               	incf	(sprintf@len+1)& (0+255),w,b
  2384  000290  B4D8               	btfsc	status,2,c
  2385  000292  EF1C  F006         	goto	u4800
  2386  000296  D7D9               	goto	l424
  2387  000298                     
  2388                           ; BSR set to: 1
  2389                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
  2390                           
  2391                           ; BSR set to: 1
  2392  000298  C106  FFD9         	movff	sprintf@ap,fsr2l
  2393  00029C  C107  FFDA         	movff	sprintf@ap+1,fsr2h
  2394  0002A0  50DF               	movf	indf2,w,c
  2395  0002A2  6F1E               	movwf	sprintf@c& (0+255),b
  2396                           
  2397                           ; BSR set to: 1
  2398  0002A4  0E02               	movlw	2
  2399  0002A6  2706               	addwf	sprintf@ap& (0+255),f,b
  2400  0002A8  0E00               	movlw	0
  2401  0002AA  2307               	addwfc	(sprintf@ap+1)& (0+255),f,b
  2402  0002AC                     
  2403                           ; BSR set to: 1
  2404                           ;doprnt.c: 805: cp = (char *)&c;
  2405                           
  2406                           ; BSR set to: 1
  2407  0002AC  0E1E               	movlw	low sprintf@c
  2408  0002AE  6F04               	movwf	sprintf@cp& (0+255),b
  2409  0002B0  0E01               	movlw	high sprintf@c
  2410  0002B2  6F05               	movwf	(sprintf@cp+1)& (0+255),b
  2411                           
  2412                           ; BSR set to: 1
  2413                           ;doprnt.c: 806: len = 1;
  2414  0002B4  0E00               	movlw	0
  2415  0002B6  6F09               	movwf	(sprintf@len+1)& (0+255),b
  2416  0002B8  0E01               	movlw	1
  2417  0002BA  6F08               	movwf	sprintf@len& (0+255),b
  2418                           
  2419                           ;doprnt.c: 807: goto dostring;
  2420  0002BC  D794               	goto	u4310
  2421  0002BE                     l404:
  2422                           
  2423                           ; BSR set to: 1
  2424  0002BE  C0DD  FFF6         	movff	sprintf@f,tblptrl
  2425  0002C2  C0DE  FFF7         	movff	sprintf@f+1,tblptrh
  2426  0002C6  0100               	movlb	0	; () banked
  2427  0002C8  4BDD               	infsnz	sprintf@f& (0+255),f,b
  2428  0002CA  2BDE               	incf	(sprintf@f+1)& (0+255),f,b
  2429  0002CC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2430  0002CC  6AF8               	clrf	tblptru,c
  2431  0002CE                     	endif
  2432  0002CE                     	if	0	;tblptru may be non-zero
  2433  0002CE                     	endif
  2434  0002CE  0008               	tblrd		*
  2435  0002D0  CFF5 F11E          	movff	tablat,sprintf@c
  2436  0002D4  0101               	movlb	1	; () banked
  2437  0002D6  511E               	movf	sprintf@c& (0+255),w,b
  2438                           
  2439                           ; Switch size 1, requested type "space"
  2440                           ; Number of cases is 6, Range of values is 0 to 115
  2441                           ; switch strategies available:
  2442                           ; Name         Instructions Cycles
  2443                           ; simple_byte           19    10 (average)
  2444                           ;	Chosen strategy is simple_byte
  2445  0002D8  0A00               	xorlw	0	; case 0
  2446  0002DA  B4D8               	btfsc	status,2,c
  2447  0002DC  EF2C  F006         	goto	u4810
  2448  0002E0  0A63               	xorlw	99	; case 99
  2449  0002E2  B4D8               	btfsc	status,2,c
  2450  0002E4  D7D9               	goto	l426
  2451  0002E6  0A07               	xorlw	7	; case 100
  2452  0002E8  B4D8               	btfsc	status,2,c
  2453  0002EA  D00A               	goto	l408
  2454  0002EC  0A02               	xorlw	2	; case 102
  2455  0002EE  B4D8               	btfsc	status,2,c
  2456  0002F0  D73F               	goto	l407
  2457  0002F2  0A0F               	xorlw	15	; case 105
  2458  0002F4  B4D8               	btfsc	status,2,c
  2459  0002F6  D004               	goto	l408
  2460  0002F8  0A1A               	xorlw	26	; case 115
  2461  0002FA  B4D8               	btfsc	status,2,c
  2462  0002FC  D73B               	goto	l411
  2463  0002FE  D7D6               	goto	l427
  2464  000300                     l408:
  2465                           
  2466                           ; BSR set to: 1
  2467                           ;doprnt.c: 825: if(flag & (0x700)) {
  2468                           
  2469                           ; BSR set to: 1
  2470  000300  0E07               	movlw	7
  2471  000302  150B               	andwf	(sprintf@flag+1)& (0+255),w,b
  2472  000304  B4D8               	btfsc	status,2,c
  2473  000306  D35F               	goto	l428
  2474                           
  2475                           ; BSR set to: 1
  2476                           ;doprnt.c: 827: if(flag & 0x1000)
  2477  000308  A90B               	btfss	(sprintf@flag+1)& (0+255),4,b
  2478  00030A  D004               	goto	l429
  2479                           
  2480                           ; BSR set to: 1
  2481                           ;doprnt.c: 829: prec = 6;
  2482  00030C  0E00               	movlw	0
  2483  00030E  6F1D               	movwf	(sprintf@prec+1)& (0+255),b
  2484  000310  0E06               	movlw	6
  2485  000312  6F1C               	movwf	sprintf@prec& (0+255),b
  2486  000314                     l429:
  2487                           
  2488                           ; BSR set to: 1
  2489                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  2490                           
  2491                           ; BSR set to: 1
  2492  000314  C106  FFD9         	movff	sprintf@ap,fsr2l
  2493  000318  C107  FFDA         	movff	sprintf@ap+1,fsr2h
  2494  00031C  CFDE F118          	movff	postinc2,sprintf@fval
  2495  000320  CFDE F119          	movff	postinc2,sprintf@fval+1
  2496  000324  CFDE F11A          	movff	postinc2,sprintf@fval+2
  2497  000328  CFDE F11B          	movff	postinc2,sprintf@fval+3
  2498                           
  2499                           ; BSR set to: 1
  2500  00032C  0E04               	movlw	4
  2501  00032E  2706               	addwf	sprintf@ap& (0+255),f,b
  2502  000330  0E00               	movlw	0
  2503  000332  2307               	addwfc	(sprintf@ap+1)& (0+255),f,b
  2504                           
  2505                           ; BSR set to: 1
  2506                           ;doprnt.c: 831: if(fval < 0.0) {
  2507  000334  AF1B               	btfss	(sprintf@fval+3)& (0+255),7,b
  2508  000336  D015               	goto	l430
  2509                           
  2510                           ; BSR set to: 1
  2511                           ;doprnt.c: 832: fval = -fval;
  2512  000338  C118  F094         	movff	sprintf@fval,___flneg@f1
  2513  00033C  C119  F095         	movff	sprintf@fval+1,___flneg@f1+1
  2514  000340  C11A  F096         	movff	sprintf@fval+2,___flneg@f1+2
  2515  000344  C11B  F097         	movff	sprintf@fval+3,___flneg@f1+3
  2516  000348  ECD1  F01A         	call	___flneg	;wreg free
  2517  00034C  C094  F118         	movff	?___flneg,sprintf@fval
  2518  000350  C095  F119         	movff	?___flneg+1,sprintf@fval+1
  2519  000354  C096  F11A         	movff	?___flneg+2,sprintf@fval+2
  2520  000358  C097  F11B         	movff	?___flneg+3,sprintf@fval+3
  2521                           
  2522                           ;doprnt.c: 833: flag |= 0x03;
  2523  00035C  0E03               	movlw	3
  2524  00035E  0101               	movlb	1	; () banked
  2525  000360  130A               	iorwf	sprintf@flag& (0+255),f,b
  2526  000362                     l430:
  2527                           
  2528                           ; BSR set to: 1
  2529                           ;doprnt.c: 834: }
  2530                           ;doprnt.c: 835: exp = 0;
  2531                           
  2532                           ; BSR set to: 1
  2533  000362  0E00               	movlw	0
  2534  000364  6F15               	movwf	(sprintf@exp+1)& (0+255),b
  2535  000366  0E00               	movlw	0
  2536  000368  6F14               	movwf	sprintf@exp& (0+255),b
  2537                           
  2538                           ; BSR set to: 1
  2539                           ;doprnt.c: 836: if( fval!=0) {
  2540  00036A  5118               	movf	sprintf@fval& (0+255),w,b
  2541  00036C  1119               	iorwf	(sprintf@fval+1)& (0+255),w,b
  2542  00036E  111A               	iorwf	(sprintf@fval+2)& (0+255),w,b
  2543  000370  111B               	iorwf	(sprintf@fval+3)& (0+255),w,b
  2544  000372  B4D8               	btfsc	status,2,c
  2545  000374  D088               	goto	l435
  2546                           
  2547                           ; BSR set to: 1
  2548                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  2549  000376  351A               	rlcf	(sprintf@fval+2)& (0+255),w,b
  2550  000378  351B               	rlcf	(sprintf@fval+3)& (0+255),w,b
  2551  00037A  0F82               	addlw	130
  2552  00037C  6F14               	movwf	sprintf@exp& (0+255),b
  2553  00037E  6B15               	clrf	(sprintf@exp+1)& (0+255),b
  2554  000380  0EFF               	movlw	255
  2555  000382  2315               	addwfc	(sprintf@exp+1)& (0+255),f,b
  2556                           
  2557                           ; BSR set to: 1
  2558                           ;doprnt.c: 838: exp--;
  2559  000384  0714               	decf	sprintf@exp& (0+255),f,b
  2560  000386  A0D8               	btfss	status,0,c
  2561  000388  0715               	decf	(sprintf@exp+1)& (0+255),f,b
  2562                           
  2563                           ; BSR set to: 1
  2564                           ;doprnt.c: 839: exp *= 3;
  2565  00038A  C114  F080         	movff	sprintf@exp,___wmul@multiplier
  2566  00038E  C115  F081         	movff	sprintf@exp+1,___wmul@multiplier+1
  2567  000392  0E00               	movlw	0
  2568  000394  0100               	movlb	0	; () banked
  2569  000396  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2570  000398  0E03               	movlw	3
  2571  00039A  6F82               	movwf	___wmul@multiplicand& (0+255),b
  2572  00039C  EC58  F01B         	call	___wmul	;wreg free
  2573  0003A0  C080  F114         	movff	?___wmul,sprintf@exp
  2574  0003A4  C081  F115         	movff	?___wmul+1,sprintf@exp+1
  2575                           
  2576                           ;doprnt.c: 840: exp /= 10;
  2577  0003A8  C114  F086         	movff	sprintf@exp,___awdiv@dividend
  2578  0003AC  C115  F087         	movff	sprintf@exp+1,___awdiv@dividend+1
  2579  0003B0  0E00               	movlw	0
  2580  0003B2  0100               	movlb	0	; () banked
  2581  0003B4  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  2582  0003B6  0E0A               	movlw	10
  2583  0003B8  6F88               	movwf	___awdiv@divisor& (0+255),b
  2584  0003BA  EC55  F018         	call	___awdiv	;wreg free
  2585  0003BE  C086  F114         	movff	?___awdiv,sprintf@exp
  2586  0003C2  C087  F115         	movff	?___awdiv+1,sprintf@exp+1
  2587                           
  2588                           ;doprnt.c: 841: if(exp < 0)
  2589  0003C6  0101               	movlb	1	; () banked
  2590  0003C8  AF15               	btfss	(sprintf@exp+1)& (0+255),7,b
  2591  0003CA  D003               	goto	l432
  2592                           
  2593                           ; BSR set to: 1
  2594                           ;doprnt.c: 842: exp--;
  2595  0003CC  0714               	decf	sprintf@exp& (0+255),f,b
  2596  0003CE  A0D8               	btfss	status,0,c
  2597  0003D0  0715               	decf	(sprintf@exp+1)& (0+255),f,b
  2598  0003D2                     l432:
  2599                           
  2600                           ; BSR set to: 1
  2601                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  2602                           
  2603                           ; BSR set to: 1
  2604  0003D2  5114               	movf	sprintf@exp& (0+255),w,b
  2605  0003D4  0800               	sublw	0
  2606  0003D6  EC33  F006         	call	_scale
  2607  0003DA  C0AD  F10C         	movff	?_scale,sprintf@tmpval
  2608  0003DE  C0AE  F10D         	movff	?_scale+1,sprintf@tmpval+1
  2609  0003E2  C0AF  F10E         	movff	?_scale+2,sprintf@tmpval+2
  2610  0003E6  C0B0  F10F         	movff	?_scale+3,sprintf@tmpval+3
  2611                           
  2612                           ;doprnt.c: 847: tmpval.integ *= fval;
  2613  0003EA  C10C  F094         	movff	sprintf@tmpval,___flmul@b
  2614  0003EE  C10D  F095         	movff	sprintf@tmpval+1,___flmul@b+1
  2615  0003F2  C10E  F096         	movff	sprintf@tmpval+2,___flmul@b+2
  2616  0003F6  C10F  F097         	movff	sprintf@tmpval+3,___flmul@b+3
  2617  0003FA  C118  F098         	movff	sprintf@fval,___flmul@a
  2618  0003FE  C119  F099         	movff	sprintf@fval+1,___flmul@a+1
  2619  000402  C11A  F09A         	movff	sprintf@fval+2,___flmul@a+2
  2620  000406  C11B  F09B         	movff	sprintf@fval+3,___flmul@a+3
  2621  00040A  EC85  F008         	call	___flmul	;wreg free
  2622  00040E  C094  F10C         	movff	?___flmul,sprintf@tmpval
  2623  000412  C095  F10D         	movff	?___flmul+1,sprintf@tmpval+1
  2624  000416  C096  F10E         	movff	?___flmul+2,sprintf@tmpval+2
  2625  00041A  C097  F10F         	movff	?___flmul+3,sprintf@tmpval+3
  2626                           
  2627                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  2628  00041E  C10C  F0CE         	movff	sprintf@tmpval,___flge@ff1
  2629  000422  C10D  F0CF         	movff	sprintf@tmpval+1,___flge@ff1+1
  2630  000426  C10E  F0D0         	movff	sprintf@tmpval+2,___flge@ff1+2
  2631  00042A  C10F  F0D1         	movff	sprintf@tmpval+3,___flge@ff1+3
  2632  00042E  0E00               	movlw	0
  2633  000430  0100               	movlb	0	; () banked
  2634  000432  6FD2               	movwf	___flge@ff2& (0+255),b
  2635  000434  0E00               	movlw	0
  2636  000436  6FD3               	movwf	(___flge@ff2+1)& (0+255),b
  2637  000438  0E80               	movlw	128
  2638  00043A  6FD4               	movwf	(___flge@ff2+2)& (0+255),b
  2639  00043C  0E3F               	movlw	63
  2640  00043E  6FD5               	movwf	(___flge@ff2+3)& (0+255),b
  2641  000440  EC86  F015         	call	___flge	;wreg free
  2642  000444  0100               	movlb	0	; () banked
  2643  000446  B0D8               	btfsc	status,0,c
  2644  000448  D005               	goto	l433
  2645                           
  2646                           ; BSR set to: 0
  2647                           ;doprnt.c: 849: exp--;
  2648  00044A  0101               	movlb	1	; () banked
  2649  00044C  0714               	decf	sprintf@exp& (0+255),f,b
  2650  00044E  A0D8               	btfss	status,0,c
  2651  000450  0715               	decf	(sprintf@exp+1)& (0+255),f,b
  2652  000452  D019               	goto	l435
  2653  000454                     l433:
  2654                           
  2655                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  2656                           
  2657                           ; BSR set to: 1
  2658  000454  C10C  F0CE         	movff	sprintf@tmpval,___flge@ff1
  2659  000458  C10D  F0CF         	movff	sprintf@tmpval+1,___flge@ff1+1
  2660  00045C  C10E  F0D0         	movff	sprintf@tmpval+2,___flge@ff1+2
  2661  000460  C10F  F0D1         	movff	sprintf@tmpval+3,___flge@ff1+3
  2662  000464  0E00               	movlw	0
  2663  000466  0100               	movlb	0	; () banked
  2664  000468  6FD2               	movwf	___flge@ff2& (0+255),b
  2665  00046A  0E00               	movlw	0
  2666  00046C  6FD3               	movwf	(___flge@ff2+1)& (0+255),b
  2667  00046E  0E20               	movlw	32
  2668  000470  6FD4               	movwf	(___flge@ff2+2)& (0+255),b
  2669  000472  0E41               	movlw	65
  2670  000474  6FD5               	movwf	(___flge@ff2+3)& (0+255),b
  2671  000476  EC86  F015         	call	___flge	;wreg free
  2672  00047A  0100               	movlb	0	; () banked
  2673  00047C  A0D8               	btfss	status,0,c
  2674  00047E  D003               	goto	l435
  2675                           
  2676                           ; BSR set to: 0
  2677                           ;doprnt.c: 851: exp++;
  2678  000480  0101               	movlb	1	; () banked
  2679  000482  4B14               	infsnz	sprintf@exp& (0+255),f,b
  2680  000484  2B15               	incf	(sprintf@exp+1)& (0+255),f,b
  2681  000486                     l435:
  2682                           
  2683                           ;doprnt.c: 852: }
  2684                           ;doprnt.c: 1112: if(prec <= 12)
  2685                           
  2686                           ; BSR set to: 1
  2687                           
  2688                           ; BSR set to: 1
  2689                           
  2690                           ; BSR set to: 1
  2691  000486  0101               	movlb	1	; () banked
  2692  000488  BF1D               	btfsc	(sprintf@prec+1)& (0+255),7,b
  2693  00048A  D006               	goto	u4450
  2694  00048C  511D               	movf	(sprintf@prec+1)& (0+255),w,b
  2695  00048E  E121               	bnz	l4240
  2696  000490  0E0D               	movlw	13
  2697  000492  5D1C               	subwf	sprintf@prec& (0+255),w,b
  2698  000494  B0D8               	btfsc	status,0,c
  2699  000496  D01D               	goto	l436
  2700  000498                     u4450:
  2701                           
  2702                           ; BSR set to: 1
  2703                           ;doprnt.c: 1113: fval += fround(prec);
  2704  000498  C118  F0BA         	movff	sprintf@fval,___fladd@b
  2705  00049C  C119  F0BB         	movff	sprintf@fval+1,___fladd@b+1
  2706  0004A0  C11A  F0BC         	movff	sprintf@fval+2,___fladd@b+2
  2707  0004A4  C11B  F0BD         	movff	sprintf@fval+3,___fladd@b+3
  2708  0004A8  511C               	movf	sprintf@prec& (0+255),w,b
  2709  0004AA  ECFA  F00E         	call	_fround
  2710  0004AE  C0AD  F0BE         	movff	?_fround,___fladd@a
  2711  0004B2  C0AE  F0BF         	movff	?_fround+1,___fladd@a+1
  2712  0004B6  C0AF  F0C0         	movff	?_fround+2,___fladd@a+2
  2713  0004BA  C0B0  F0C1         	movff	?_fround+3,___fladd@a+3
  2714  0004BE  EC2E  F00A         	call	___fladd	;wreg free
  2715  0004C2  C0BA  F118         	movff	?___fladd,sprintf@fval
  2716  0004C6  C0BB  F119         	movff	?___fladd+1,sprintf@fval+1
  2717  0004CA  C0BC  F11A         	movff	?___fladd+2,sprintf@fval+2
  2718  0004CE  C0BD  F11B         	movff	?___fladd+3,sprintf@fval+3
  2719  0004D2                     l436:
  2720  0004D2                     l4240:
  2721                           
  2722                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  2723  0004D2  0101               	movlb	1	; () banked
  2724  0004D4  BF15               	btfsc	(sprintf@exp+1)& (0+255),7,b
  2725  0004D6  D006               	goto	u4460
  2726  0004D8  5115               	movf	(sprintf@exp+1)& (0+255),w,b
  2727  0004DA  E124               	bnz	l4248
  2728  0004DC  0E0A               	movlw	10
  2729  0004DE  5D14               	subwf	sprintf@exp& (0+255),w,b
  2730  0004E0  B0D8               	btfsc	status,0,c
  2731  0004E2  D020               	goto	u4490
  2732  0004E4                     u4460:
  2733                           
  2734                           ; BSR set to: 1
  2735  0004E4  5118               	movf	sprintf@fval& (0+255),w,b
  2736  0004E6  1119               	iorwf	(sprintf@fval+1)& (0+255),w,b
  2737  0004E8  111A               	iorwf	(sprintf@fval+2)& (0+255),w,b
  2738  0004EA  111B               	iorwf	(sprintf@fval+3)& (0+255),w,b
  2739  0004EC  B4D8               	btfsc	status,2,c
  2740  0004EE  D067               	goto	l437
  2741                           
  2742                           ; BSR set to: 1
  2743  0004F0  C118  F0D1         	movff	sprintf@fval,___fltol@f1
  2744  0004F4  C119  F0D2         	movff	sprintf@fval+1,___fltol@f1+1
  2745  0004F8  C11A  F0D3         	movff	sprintf@fval+2,___fltol@f1+2
  2746  0004FC  C11B  F0D4         	movff	sprintf@fval+3,___fltol@f1+3
  2747  000500  EC21  F017         	call	___fltol	;wreg free
  2748  000504  0100               	movlb	0	; () banked
  2749  000506  51D1               	movf	?___fltol& (0+255),w,b
  2750  000508  11D2               	iorwf	(?___fltol+1)& (0+255),w,b
  2751  00050A  11D3               	iorwf	(?___fltol+2)& (0+255),w,b
  2752  00050C  11D4               	iorwf	(?___fltol+3)& (0+255),w,b
  2753  00050E  A4D8               	btfss	status,2,c
  2754  000510  D056               	goto	l437
  2755                           
  2756                           ; BSR set to: 0
  2757  000512  0101               	movlb	1	; () banked
  2758  000514  BF15               	btfsc	(sprintf@exp+1)& (0+255),7,b
  2759  000516  D053               	goto	l437
  2760  000518  5115               	movf	(sprintf@exp+1)& (0+255),w,b
  2761  00051A  E104               	bnz	l4248
  2762  00051C  0E02               	movlw	2
  2763  00051E  5D14               	subwf	sprintf@exp& (0+255),w,b
  2764  000520  A0D8               	btfss	status,0,c
  2765  000522  D04D               	goto	l437
  2766  000524                     u4490:
  2767  000524                     l4248:
  2768                           
  2769                           ; BSR set to: 1
  2770                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  2771  000524  C10C  F0CE         	movff	sprintf@tmpval,___flge@ff1
  2772  000528  C10D  F0CF         	movff	sprintf@tmpval+1,___flge@ff1+1
  2773  00052C  C10E  F0D0         	movff	sprintf@tmpval+2,___flge@ff1+2
  2774  000530  C10F  F0D1         	movff	sprintf@tmpval+3,___flge@ff1+3
  2775  000534  0E5F               	movlw	95
  2776  000536  0100               	movlb	0	; () banked
  2777  000538  6FD2               	movwf	___flge@ff2& (0+255),b
  2778  00053A  0E70               	movlw	112
  2779  00053C  6FD3               	movwf	(___flge@ff2+1)& (0+255),b
  2780  00053E  0E89               	movlw	137
  2781  000540  6FD4               	movwf	(___flge@ff2+2)& (0+255),b
  2782  000542  0E40               	movlw	64
  2783  000544  6FD5               	movwf	(___flge@ff2+3)& (0+255),b
  2784  000546  EC86  F015         	call	___flge	;wreg free
  2785  00054A  0100               	movlb	0	; () banked
  2786  00054C  B0D8               	btfsc	status,0,c
  2787  00054E  D003               	goto	l440
  2788                           
  2789                           ; BSR set to: 0
  2790                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2791  000550  0101               	movlb	1	; () banked
  2792  000552  0EF7               	movlw	247
  2793  000554  D002               	goto	L3
  2794  000556                     l440:
  2795                           
  2796                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2797                           
  2798                           ; BSR set to: 1
  2799  000556  0101               	movlb	1	; () banked
  2800  000558  0EF8               	movlw	248
  2801  00055A                     L3:
  2802  00055A  2714               	addwf	sprintf@exp& (0+255),f,b
  2803  00055C  0EFF               	movlw	255
  2804  00055E  2315               	addwfc	(sprintf@exp+1)& (0+255),f,b
  2805                           
  2806                           ; BSR set to: 1
  2807                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  2808                           
  2809                           ; BSR set to: 1
  2810  000560  5114               	movf	sprintf@exp& (0+255),w,b
  2811  000562  EC33  F006         	call	_scale
  2812  000566  C0AD  F10C         	movff	?_scale,sprintf@tmpval
  2813  00056A  C0AE  F10D         	movff	?_scale+1,sprintf@tmpval+1
  2814  00056E  C0AF  F10E         	movff	?_scale+2,sprintf@tmpval+2
  2815  000572  C0B0  F10F         	movff	?_scale+3,sprintf@tmpval+3
  2816  000576  C118  F080         	movff	sprintf@fval,__div_to_l_@f1
  2817  00057A  C119  F081         	movff	sprintf@fval+1,__div_to_l_@f1+1
  2818  00057E  C11A  F082         	movff	sprintf@fval+2,__div_to_l_@f1+2
  2819  000582  C11B  F083         	movff	sprintf@fval+3,__div_to_l_@f1+3
  2820  000586  C10C  F084         	movff	sprintf@tmpval,__div_to_l_@f2
  2821  00058A  C10D  F085         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  2822  00058E  C10E  F086         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  2823  000592  C10F  F087         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  2824  000596  ECF1  F014         	call	__div_to_l_	;wreg free
  2825  00059A  C080  F110         	movff	?__div_to_l_,sprintf@val
  2826  00059E  C081  F111         	movff	?__div_to_l_+1,sprintf@val+1
  2827  0005A2  C082  F112         	movff	?__div_to_l_+2,sprintf@val+2
  2828  0005A6  C083  F113         	movff	?__div_to_l_+3,sprintf@val+3
  2829                           
  2830                           ;doprnt.c: 1129: fval = 0.0;
  2831  0005AA  0E00               	movlw	0
  2832  0005AC  0101               	movlb	1	; () banked
  2833  0005AE  6F18               	movwf	sprintf@fval& (0+255),b
  2834  0005B0  0E00               	movlw	0
  2835  0005B2  6F19               	movwf	(sprintf@fval+1)& (0+255),b
  2836  0005B4  0E00               	movlw	0
  2837  0005B6  6F1A               	movwf	(sprintf@fval+2)& (0+255),b
  2838  0005B8  0E00               	movlw	0
  2839  0005BA  6F1B               	movwf	(sprintf@fval+3)& (0+255),b
  2840                           
  2841                           ;doprnt.c: 1130: } else {
  2842  0005BC  D03C               	goto	l446
  2843  0005BE                     l437:
  2844                           
  2845                           ;doprnt.c: 1131: val = (unsigned long)fval;
  2846                           
  2847                           ; BSR set to: 1
  2848  0005BE  C118  F0D1         	movff	sprintf@fval,___fltol@f1
  2849  0005C2  C119  F0D2         	movff	sprintf@fval+1,___fltol@f1+1
  2850  0005C6  C11A  F0D3         	movff	sprintf@fval+2,___fltol@f1+2
  2851  0005CA  C11B  F0D4         	movff	sprintf@fval+3,___fltol@f1+3
  2852  0005CE  EC21  F017         	call	___fltol	;wreg free
  2853  0005D2  C0D1  F110         	movff	?___fltol,sprintf@val
  2854  0005D6  C0D2  F111         	movff	?___fltol+1,sprintf@val+1
  2855  0005DA  C0D3  F112         	movff	?___fltol+2,sprintf@val+2
  2856  0005DE  C0D4  F113         	movff	?___fltol+3,sprintf@val+3
  2857                           
  2858                           ;doprnt.c: 1132: fval -= (double)val;
  2859  0005E2  C118  F0CE         	movff	sprintf@fval,___flsub@b
  2860  0005E6  C119  F0CF         	movff	sprintf@fval+1,___flsub@b+1
  2861  0005EA  C11A  F0D0         	movff	sprintf@fval+2,___flsub@b+2
  2862  0005EE  C11B  F0D1         	movff	sprintf@fval+3,___flsub@b+3
  2863  0005F2  C110  F086         	movff	sprintf@val,___xxtofl@val
  2864  0005F6  C111  F087         	movff	sprintf@val+1,___xxtofl@val+1
  2865  0005FA  C112  F088         	movff	sprintf@val+2,___xxtofl@val+2
  2866  0005FE  C113  F089         	movff	sprintf@val+3,___xxtofl@val+3
  2867  000602  0E00               	movlw	0
  2868  000604  EC68  F012         	call	___xxtofl
  2869  000608  C086  F0D2         	movff	?___xxtofl,___flsub@a
  2870  00060C  C087  F0D3         	movff	?___xxtofl+1,___flsub@a+1
  2871  000610  C088  F0D4         	movff	?___xxtofl+2,___flsub@a+2
  2872  000614  C089  F0D5         	movff	?___xxtofl+3,___flsub@a+3
  2873  000618  EC31  F01A         	call	___flsub	;wreg free
  2874  00061C  C0CE  F118         	movff	?___flsub,sprintf@fval
  2875  000620  C0CF  F119         	movff	?___flsub+1,sprintf@fval+1
  2876  000624  C0D0  F11A         	movff	?___flsub+2,sprintf@fval+2
  2877  000628  C0D1  F11B         	movff	?___flsub+3,sprintf@fval+3
  2878                           
  2879                           ;doprnt.c: 1133: exp = 0;
  2880  00062C  0E00               	movlw	0
  2881  00062E  0101               	movlb	1	; () banked
  2882  000630  6F15               	movwf	(sprintf@exp+1)& (0+255),b
  2883  000632  0E00               	movlw	0
  2884  000634  6F14               	movwf	sprintf@exp& (0+255),b
  2885  000636                     l446:
  2886                           
  2887                           ; BSR set to: 1
  2888                           ;doprnt.c: 1134: }
  2889                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2890                           
  2891                           ; BSR set to: 1
  2892  000636  0E01               	movlw	1
  2893  000638  6F1E               	movwf	sprintf@c& (0+255),b
  2894  00063A                     l4268:
  2895                           
  2896                           ; BSR set to: 1
  2897  00063A  0E0A               	movlw	10
  2898  00063C  191E               	xorwf	sprintf@c& (0+255),w,b
  2899  00063E  B4D8               	btfsc	status,2,c
  2900  000640  D01B               	goto	u4530
  2901                           
  2902                           ; BSR set to: 1
  2903                           ;doprnt.c: 1137: if(val < dpowers[c])
  2904                           
  2905                           ; BSR set to: 1
  2906                           
  2907                           ; BSR set to: 1
  2908  000642  511E               	movf	sprintf@c& (0+255),w,b
  2909  000644  0D04               	mullw	4
  2910  000646  0E5F               	movlw	low _dpowers
  2911  000648  24F3               	addwf	prodl,w,c
  2912  00064A  6EF6               	movwf	tblptrl,c
  2913  00064C  0EFF               	movlw	high _dpowers
  2914  00064E  20F4               	addwfc	prodh,w,c
  2915  000650  6EF7               	movwf	tblptrh,c
  2916  000652                     	if	1	;There are 3 active tblptr bytes
  2917  000652  6AF8               	clrf	tblptru,c
  2918  000654  0E00               	movlw	low (__mediumconst shr (0+16))
  2919  000656  22F8               	addwfc	tblptru,f,c
  2920  000658                     	endif
  2921  000658  0009               	tblrd		*+
  2922  00065A  50F5               	movf	tablat,w,c
  2923  00065C  5D10               	subwf	sprintf@val& (0+255),w,b
  2924  00065E  0009               	tblrd		*+
  2925  000660  50F5               	movf	tablat,w,c
  2926  000662  5911               	subwfb	(sprintf@val+1)& (0+255),w,b
  2927  000664  0009               	tblrd		*+
  2928  000666  50F5               	movf	tablat,w,c
  2929  000668  5912               	subwfb	(sprintf@val+2)& (0+255),w,b
  2930  00066A  0009               	tblrd		*+
  2931  00066C  50F5               	movf	tablat,w,c
  2932  00066E  5913               	subwfb	(sprintf@val+3)& (0+255),w,b
  2933  000670  A0D8               	btfss	status,0,c
  2934  000672  D002               	goto	u4530
  2935                           
  2936                           ; BSR set to: 1
  2937                           
  2938                           ; BSR set to: 1
  2939                           
  2940                           ; BSR set to: 1
  2941                           ;doprnt.c: 1138: break;
  2942  000674  2B1E               	incf	sprintf@c& (0+255),f,b
  2943  000676  D7E1               	goto	l4268
  2944  000678                     u4530:
  2945                           
  2946                           ; BSR set to: 1
  2947                           ;doprnt.c: 1142: width -= prec + c + exp;
  2948                           
  2949                           ; BSR set to: 1
  2950  000678  C11E  F0E7         	movff	sprintf@c,??_sprintf
  2951  00067C  0100               	movlb	0	; () banked
  2952  00067E  6BE8               	clrf	(??_sprintf+1)& (0+255),b
  2953  000680  BFE7               	btfsc	??_sprintf& (0+255),7,b
  2954  000682  07E8               	decf	(??_sprintf+1)& (0+255),f,b
  2955  000684  0101               	movlb	1	; () banked
  2956  000686  511C               	movf	sprintf@prec& (0+255),w,b
  2957  000688  0100               	movlb	0	; () banked
  2958  00068A  27E7               	addwf	??_sprintf& (0+255),f,b
  2959  00068C  0101               	movlb	1	; () banked
  2960  00068E  511D               	movf	(sprintf@prec+1)& (0+255),w,b
  2961  000690  0100               	movlb	0	; () banked
  2962  000692  23E8               	addwfc	(??_sprintf+1)& (0+255),f,b
  2963  000694  0101               	movlb	1	; () banked
  2964  000696  5114               	movf	sprintf@exp& (0+255),w,b
  2965  000698  0100               	movlb	0	; () banked
  2966  00069A  27E7               	addwf	??_sprintf& (0+255),f,b
  2967  00069C  0101               	movlb	1	; () banked
  2968  00069E  5115               	movf	(sprintf@exp+1)& (0+255),w,b
  2969  0006A0  0100               	movlb	0	; () banked
  2970  0006A2  23E8               	addwfc	(??_sprintf+1)& (0+255),f,b
  2971  0006A4  51E7               	movf	??_sprintf& (0+255),w,b
  2972  0006A6  0101               	movlb	1	; () banked
  2973  0006A8  5F16               	subwf	sprintf@width& (0+255),f,b
  2974  0006AA  0100               	movlb	0	; () banked
  2975  0006AC  51E8               	movf	(??_sprintf+1)& (0+255),w,b
  2976  0006AE  0101               	movlb	1	; () banked
  2977  0006B0  5B17               	subwfb	(sprintf@width+1)& (0+255),f,b
  2978                           
  2979                           ;doprnt.c: 1143: if(
  2980                           ;doprnt.c: 1147: prec)
  2981  0006B2  511C               	movf	sprintf@prec& (0+255),w,b
  2982  0006B4  111D               	iorwf	(sprintf@prec+1)& (0+255),w,b
  2983  0006B6  B4D8               	btfsc	status,2,c
  2984  0006B8  D003               	goto	l450
  2985                           
  2986                           ; BSR set to: 1
  2987                           ;doprnt.c: 1148: width--;
  2988  0006BA  0716               	decf	sprintf@width& (0+255),f,b
  2989  0006BC  A0D8               	btfss	status,0,c
  2990  0006BE  0717               	decf	(sprintf@width+1)& (0+255),f,b
  2991  0006C0                     l450:
  2992                           
  2993                           ; BSR set to: 1
  2994                           ;doprnt.c: 1149: if(flag & 0x03)
  2995                           
  2996                           ; BSR set to: 1
  2997  0006C0  0E03               	movlw	3
  2998  0006C2  150A               	andwf	sprintf@flag& (0+255),w,b
  2999  0006C4  0100               	movlb	0	; () banked
  3000  0006C6  6FE7               	movwf	??_sprintf& (0+255),b
  3001  0006C8  0E00               	movlw	0
  3002  0006CA  0101               	movlb	1	; () banked
  3003  0006CC  150B               	andwf	(sprintf@flag+1)& (0+255),w,b
  3004  0006CE  0100               	movlb	0	; () banked
  3005  0006D0  6FE8               	movwf	(??_sprintf+1)& (0+255),b
  3006  0006D2  51E7               	movf	??_sprintf& (0+255),w,b
  3007  0006D4  11E8               	iorwf	(??_sprintf+1)& (0+255),w,b
  3008  0006D6  B4D8               	btfsc	status,2,c
  3009  0006D8  D00E               	goto	l452
  3010  0006DA  D009               	goto	l4292
  3011  0006DC                     l4288:
  3012                           
  3013                           ; BSR set to: 1
  3014                           ;doprnt.c: 1181: ((*sp++ = (' ')));
  3015  0006DC  C0DB  FFD9         	movff	sprintf@sp,fsr2l
  3016  0006E0  C0DC  FFDA         	movff	sprintf@sp+1,fsr2h
  3017  0006E4  0E20               	movlw	32
  3018  0006E6  6EDF               	movwf	indf2,c
  3019                           
  3020                           ; BSR set to: 1
  3021  0006E8  0100               	movlb	0	; () banked
  3022  0006EA  4BDB               	infsnz	sprintf@sp& (0+255),f,b
  3023  0006EC  2BDC               	incf	(sprintf@sp+1)& (0+255),f,b
  3024  0006EE                     l4292:
  3025                           
  3026                           ; BSR set to: 0
  3027                           ;doprnt.c: 1182: width--;
  3028  0006EE  0101               	movlb	1	; () banked
  3029  0006F0  0716               	decf	sprintf@width& (0+255),f,b
  3030  0006F2  A0D8               	btfss	status,0,c
  3031  0006F4  0717               	decf	(sprintf@width+1)& (0+255),f,b
  3032  0006F6                     l452:
  3033                           
  3034                           ; BSR set to: 1
  3035  0006F6  0101               	movlb	1	; () banked
  3036  0006F8  BF17               	btfsc	(sprintf@width+1)& (0+255),7,b
  3037  0006FA  D005               	goto	u4560
  3038  0006FC  5117               	movf	(sprintf@width+1)& (0+255),w,b
  3039  0006FE  E1EE               	bnz	l4288
  3040  000700  0516               	decf	sprintf@width& (0+255),w,b
  3041  000702  B0D8               	btfsc	status,0,c
  3042  000704  D7EB               	goto	l453
  3043  000706                     u4560:
  3044                           
  3045                           ; BSR set to: 1
  3046                           ;doprnt.c: 1183: }
  3047                           ;doprnt.c: 1188: if(flag & 0x03)
  3048                           
  3049                           ; BSR set to: 1
  3050  000706  0E03               	movlw	3
  3051  000708  150A               	andwf	sprintf@flag& (0+255),w,b
  3052  00070A  0100               	movlb	0	; () banked
  3053  00070C  6FE7               	movwf	??_sprintf& (0+255),b
  3054  00070E  0E00               	movlw	0
  3055  000710  0101               	movlb	1	; () banked
  3056  000712  150B               	andwf	(sprintf@flag+1)& (0+255),w,b
  3057  000714  0100               	movlb	0	; () banked
  3058  000716  6FE8               	movwf	(??_sprintf+1)& (0+255),b
  3059  000718  51E7               	movf	??_sprintf& (0+255),w,b
  3060  00071A  11E8               	iorwf	(??_sprintf+1)& (0+255),w,b
  3061  00071C  B4D8               	btfsc	status,2,c
  3062  00071E  D057               	goto	l456
  3063                           
  3064                           ; BSR set to: 0
  3065                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  3066  000720  C0DB  FFD9         	movff	sprintf@sp,fsr2l
  3067  000724  C0DC  FFDA         	movff	sprintf@sp+1,fsr2h
  3068  000728  0E2D               	movlw	45
  3069  00072A  6EDF               	movwf	indf2,c
  3070  00072C  D04E               	goto	L4
  3071  00072E                     
  3072                           ;doprnt.c: 1200: {
  3073                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  3074                           
  3075                           ; BSR set to: 0
  3076  00072E  C110  F080         	movff	sprintf@val,___lldiv@dividend
  3077  000732  C111  F081         	movff	sprintf@val+1,___lldiv@dividend+1
  3078  000736  C112  F082         	movff	sprintf@val+2,___lldiv@dividend+2
  3079  00073A  C113  F083         	movff	sprintf@val+3,___lldiv@dividend+3
  3080  00073E  0101               	movlb	1	; () banked
  3081  000740  511E               	movf	sprintf@c& (0+255),w,b
  3082  000742  0D04               	mullw	4
  3083  000744  0E5F               	movlw	low _dpowers
  3084  000746  24F3               	addwf	prodl,w,c
  3085  000748  6EF6               	movwf	tblptrl,c
  3086  00074A  0EFF               	movlw	high _dpowers
  3087  00074C  20F4               	addwfc	prodh,w,c
  3088  00074E  6EF7               	movwf	tblptrh,c
  3089  000750                     	if	1	;There are 3 active tblptr bytes
  3090  000750  6AF8               	clrf	tblptru,c
  3091  000752  0E00               	movlw	low (__mediumconst shr (0+16))
  3092  000754  22F8               	addwfc	tblptru,f,c
  3093  000756                     	endif
  3094  000756  0009               	tblrd		*+
  3095  000758  CFF5 F084          	movff	tablat,___lldiv@divisor
  3096  00075C  0009               	tblrd		*+
  3097  00075E  CFF5 F085          	movff	tablat,___lldiv@divisor+1
  3098  000762  0009               	tblrd		*+
  3099  000764  CFF5 F086          	movff	tablat,___lldiv@divisor+2
  3100  000768  000A               	tblrd		*-
  3101  00076A  CFF5 F087          	movff	tablat,___lldiv@divisor+3
  3102  00076E  EC98  F018         	call	___lldiv	;wreg free
  3103  000772  C080  F10C         	movff	?___lldiv,sprintf@tmpval
  3104  000776  C081  F10D         	movff	?___lldiv+1,sprintf@tmpval+1
  3105  00077A  C082  F10E         	movff	?___lldiv+2,sprintf@tmpval+2
  3106  00077E  C083  F10F         	movff	?___lldiv+3,sprintf@tmpval+3
  3107                           
  3108                           ;doprnt.c: 1202: tmpval.vd %= 10;
  3109  000782  C10C  F08D         	movff	sprintf@tmpval,___llmod@dividend
  3110  000786  C10D  F08E         	movff	sprintf@tmpval+1,___llmod@dividend+1
  3111  00078A  C10E  F08F         	movff	sprintf@tmpval+2,___llmod@dividend+2
  3112  00078E  C10F  F090         	movff	sprintf@tmpval+3,___llmod@dividend+3
  3113  000792  0E0A               	movlw	10
  3114  000794  0100               	movlb	0	; () banked
  3115  000796  6F91               	movwf	___llmod@divisor& (0+255),b
  3116  000798  0E00               	movlw	0
  3117  00079A  6F92               	movwf	(___llmod@divisor+1)& (0+255),b
  3118  00079C  0E00               	movlw	0
  3119  00079E  6F93               	movwf	(___llmod@divisor+2)& (0+255),b
  3120  0007A0  0E00               	movlw	0
  3121  0007A2  6F94               	movwf	(___llmod@divisor+3)& (0+255),b
  3122  0007A4  EC4A  F019         	call	___llmod	;wreg free
  3123  0007A8  C08D  F10C         	movff	?___llmod,sprintf@tmpval
  3124  0007AC  C08E  F10D         	movff	?___llmod+1,sprintf@tmpval+1
  3125  0007B0  C08F  F10E         	movff	?___llmod+2,sprintf@tmpval+2
  3126  0007B4  C090  F10F         	movff	?___llmod+3,sprintf@tmpval+3
  3127                           
  3128                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  3129  0007B8  0101               	movlb	1	; () banked
  3130  0007BA  510C               	movf	sprintf@tmpval& (0+255),w,b
  3131  0007BC  0F30               	addlw	48
  3132  0007BE  C0DB  FFD9         	movff	sprintf@sp,fsr2l
  3133  0007C2  C0DC  FFDA         	movff	sprintf@sp+1,fsr2h
  3134  0007C6  6EDF               	movwf	indf2,c
  3135                           
  3136                           ; BSR set to: 1
  3137  0007C8  0100               	movlb	0	; () banked
  3138  0007CA                     L4:
  3139  0007CA  4BDB               	infsnz	sprintf@sp& (0+255),f,b
  3140  0007CC  2BDC               	incf	(sprintf@sp+1)& (0+255),f,b
  3141  0007CE                     l456:
  3142                           
  3143                           ; BSR set to: 0
  3144                           
  3145                           ; BSR set to: 0
  3146  0007CE  0101               	movlb	1	; () banked
  3147  0007D0  071E               	decf	sprintf@c& (0+255),f,b
  3148  0007D2  291E               	incf	sprintf@c& (0+255),w,b
  3149  0007D4  B4D8               	btfsc	status,2,c
  3150  0007D6  D00E               	goto	l459
  3151  0007D8  D7AA               	goto	l457
  3152  0007DA                     l4312:
  3153                           
  3154                           ; BSR set to: 1
  3155                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  3156  0007DA  C0DB  FFD9         	movff	sprintf@sp,fsr2l
  3157  0007DE  C0DC  FFDA         	movff	sprintf@sp+1,fsr2h
  3158  0007E2  0E30               	movlw	48
  3159  0007E4  6EDF               	movwf	indf2,c
  3160                           
  3161                           ; BSR set to: 1
  3162  0007E6  0100               	movlb	0	; () banked
  3163  0007E8  4BDB               	infsnz	sprintf@sp& (0+255),f,b
  3164  0007EA  2BDC               	incf	(sprintf@sp+1)& (0+255),f,b
  3165                           
  3166                           ; BSR set to: 0
  3167                           ;doprnt.c: 1209: exp--;
  3168  0007EC  0101               	movlb	1	; () banked
  3169  0007EE  0714               	decf	sprintf@exp& (0+255),f,b
  3170  0007F0  A0D8               	btfss	status,0,c
  3171  0007F2  0715               	decf	(sprintf@exp+1)& (0+255),f,b
  3172  0007F4                     l459:
  3173                           
  3174                           ; BSR set to: 1
  3175                           
  3176                           ; BSR set to: 1
  3177  0007F4  BF15               	btfsc	(sprintf@exp+1)& (0+255),7,b
  3178  0007F6  D005               	goto	u4590
  3179  0007F8  5115               	movf	(sprintf@exp+1)& (0+255),w,b
  3180  0007FA  E1EF               	bnz	l4312
  3181  0007FC  0514               	decf	sprintf@exp& (0+255),w,b
  3182  0007FE  B0D8               	btfsc	status,0,c
  3183  000800  D7EC               	goto	l460
  3184  000802                     u4590:
  3185                           
  3186                           ; BSR set to: 1
  3187                           ;doprnt.c: 1210: }
  3188                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3189                           
  3190                           ; BSR set to: 1
  3191  000802  BF1D               	btfsc	(sprintf@prec+1)& (0+255),7,b
  3192  000804  D009               	goto	l462
  3193  000806  511D               	movf	(sprintf@prec+1)& (0+255),w,b
  3194  000808  E104               	bnz	u4600
  3195  00080A  0E09               	movlw	9
  3196  00080C  5D1C               	subwf	sprintf@prec& (0+255),w,b
  3197  00080E  A0D8               	btfss	status,0,c
  3198  000810  D003               	goto	l462
  3199  000812                     u4600:
  3200                           
  3201                           ; BSR set to: 1
  3202                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  3203  000812  0E08               	movlw	8
  3204  000814  6F1E               	movwf	sprintf@c& (0+255),b
  3205  000816  D002               	goto	l463
  3206  000818                     l462:
  3207                           
  3208                           ; BSR set to: 1
  3209                           ;doprnt.c: 1213: else
  3210                           ;doprnt.c: 1214: c = prec;
  3211  000818  C11C  F11E         	movff	sprintf@prec,sprintf@c
  3212  00081C                     l463:
  3213                           
  3214                           ; BSR set to: 1
  3215                           ;doprnt.c: 1215: prec -= c;
  3216                           
  3217                           ; BSR set to: 1
  3218  00081C  511E               	movf	sprintf@c& (0+255),w,b
  3219  00081E  5F1C               	subwf	sprintf@prec& (0+255),f,b
  3220  000820  0E00               	movlw	0
  3221  000822  BF1E               	btfsc	sprintf@c& (0+255),7,b
  3222  000824  0EFF               	movlw	255
  3223  000826  5B1D               	subwfb	(sprintf@prec+1)& (0+255),f,b
  3224                           
  3225                           ; BSR set to: 1
  3226                           ;doprnt.c: 1219: if(c)
  3227  000828  511E               	movf	sprintf@c& (0+255),w,b
  3228  00082A  B4D8               	btfsc	status,2,c
  3229  00082C  D009               	goto	l464
  3230                           
  3231                           ; BSR set to: 1
  3232                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  3233  00082E  C0DB  FFD9         	movff	sprintf@sp,fsr2l
  3234  000832  C0DC  FFDA         	movff	sprintf@sp+1,fsr2h
  3235  000836  0E2E               	movlw	46
  3236  000838  6EDF               	movwf	indf2,c
  3237                           
  3238                           ; BSR set to: 1
  3239  00083A  0100               	movlb	0	; () banked
  3240  00083C  4BDB               	infsnz	sprintf@sp& (0+255),f,b
  3241  00083E  2BDC               	incf	(sprintf@sp+1)& (0+255),f,b
  3242  000840                     l464:
  3243                           
  3244                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3245                           
  3246                           ; BSR set to: 0
  3247  000840  0101               	movlb	1	; () banked
  3248  000842  511E               	movf	sprintf@c& (0+255),w,b
  3249  000844  EC33  F006         	call	_scale
  3250  000848  C0AD  F100         	movff	?_scale,_sprintf$1901
  3251  00084C  C0AE  F101         	movff	?_scale+1,_sprintf$1901+1
  3252  000850  C0AF  F102         	movff	?_scale+2,_sprintf$1901+2
  3253  000854  C0B0  F103         	movff	?_scale+3,_sprintf$1901+3
  3254                           
  3255                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3256  000858  C118  F098         	movff	sprintf@fval,___flmul@a
  3257  00085C  C119  F099         	movff	sprintf@fval+1,___flmul@a+1
  3258  000860  C11A  F09A         	movff	sprintf@fval+2,___flmul@a+2
  3259  000864  C11B  F09B         	movff	sprintf@fval+3,___flmul@a+3
  3260  000868  C100  F094         	movff	_sprintf$1901,___flmul@b
  3261  00086C  C101  F095         	movff	_sprintf$1901+1,___flmul@b+1
  3262  000870  C102  F096         	movff	_sprintf$1901+2,___flmul@b+2
  3263  000874  C103  F097         	movff	_sprintf$1901+3,___flmul@b+3
  3264  000878  EC85  F008         	call	___flmul	;wreg free
  3265  00087C  C094  F0D1         	movff	?___flmul,___fltol@f1
  3266  000880  C095  F0D2         	movff	?___flmul+1,___fltol@f1+1
  3267  000884  C096  F0D3         	movff	?___flmul+2,___fltol@f1+2
  3268  000888  C097  F0D4         	movff	?___flmul+3,___fltol@f1+3
  3269  00088C  EC21  F017         	call	___fltol	;wreg free
  3270  000890  C0D1  F110         	movff	?___fltol,sprintf@val
  3271  000894  C0D2  F111         	movff	?___fltol+1,sprintf@val+1
  3272  000898  C0D3  F112         	movff	?___fltol+2,sprintf@val+2
  3273  00089C  C0D4  F113         	movff	?___fltol+3,sprintf@val+3
  3274                           
  3275                           ;doprnt.c: 1228: while(c--) {
  3276  0008A0  D07A               	goto	l465
  3277  0008A2                     
  3278                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  3279  0008A2  C110  F080         	movff	sprintf@val,___lldiv@dividend
  3280  0008A6  C111  F081         	movff	sprintf@val+1,___lldiv@dividend+1
  3281  0008AA  C112  F082         	movff	sprintf@val+2,___lldiv@dividend+2
  3282  0008AE  C113  F083         	movff	sprintf@val+3,___lldiv@dividend+3
  3283  0008B2  0101               	movlb	1	; () banked
  3284  0008B4  511E               	movf	sprintf@c& (0+255),w,b
  3285  0008B6  0D04               	mullw	4
  3286  0008B8  0E5F               	movlw	low _dpowers
  3287  0008BA  24F3               	addwf	prodl,w,c
  3288  0008BC  6EF6               	movwf	tblptrl,c
  3289  0008BE  0EFF               	movlw	high _dpowers
  3290  0008C0  20F4               	addwfc	prodh,w,c
  3291  0008C2  6EF7               	movwf	tblptrh,c
  3292  0008C4                     	if	1	;There are 3 active tblptr bytes
  3293  0008C4  6AF8               	clrf	tblptru,c
  3294  0008C6  0E00               	movlw	low (__mediumconst shr (0+16))
  3295  0008C8  22F8               	addwfc	tblptru,f,c
  3296  0008CA                     	endif
  3297  0008CA  0009               	tblrd		*+
  3298  0008CC  CFF5 F084          	movff	tablat,___lldiv@divisor
  3299  0008D0  0009               	tblrd		*+
  3300  0008D2  CFF5 F085          	movff	tablat,___lldiv@divisor+1
  3301  0008D6  0009               	tblrd		*+
  3302  0008D8  CFF5 F086          	movff	tablat,___lldiv@divisor+2
  3303  0008DC  000A               	tblrd		*-
  3304  0008DE  CFF5 F087          	movff	tablat,___lldiv@divisor+3
  3305  0008E2  EC98  F018         	call	___lldiv	;wreg free
  3306  0008E6  C080  F10C         	movff	?___lldiv,sprintf@tmpval
  3307  0008EA  C081  F10D         	movff	?___lldiv+1,sprintf@tmpval+1
  3308  0008EE  C082  F10E         	movff	?___lldiv+2,sprintf@tmpval+2
  3309  0008F2  C083  F10F         	movff	?___lldiv+3,sprintf@tmpval+3
  3310                           
  3311                           ;doprnt.c: 1230: tmpval.vd %= 10;
  3312  0008F6  C10C  F08D         	movff	sprintf@tmpval,___llmod@dividend
  3313  0008FA  C10D  F08E         	movff	sprintf@tmpval+1,___llmod@dividend+1
  3314  0008FE  C10E  F08F         	movff	sprintf@tmpval+2,___llmod@dividend+2
  3315  000902  C10F  F090         	movff	sprintf@tmpval+3,___llmod@dividend+3
  3316  000906  0E0A               	movlw	10
  3317  000908  0100               	movlb	0	; () banked
  3318  00090A  6F91               	movwf	___llmod@divisor& (0+255),b
  3319  00090C  0E00               	movlw	0
  3320  00090E  6F92               	movwf	(___llmod@divisor+1)& (0+255),b
  3321  000910  0E00               	movlw	0
  3322  000912  6F93               	movwf	(___llmod@divisor+2)& (0+255),b
  3323  000914  0E00               	movlw	0
  3324  000916  6F94               	movwf	(___llmod@divisor+3)& (0+255),b
  3325  000918  EC4A  F019         	call	___llmod	;wreg free
  3326  00091C  C08D  F10C         	movff	?___llmod,sprintf@tmpval
  3327  000920  C08E  F10D         	movff	?___llmod+1,sprintf@tmpval+1
  3328  000924  C08F  F10E         	movff	?___llmod+2,sprintf@tmpval+2
  3329  000928  C090  F10F         	movff	?___llmod+3,sprintf@tmpval+3
  3330                           
  3331                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  3332  00092C  0101               	movlb	1	; () banked
  3333  00092E  510C               	movf	sprintf@tmpval& (0+255),w,b
  3334  000930  0F30               	addlw	48
  3335  000932  C0DB  FFD9         	movff	sprintf@sp,fsr2l
  3336  000936  C0DC  FFDA         	movff	sprintf@sp+1,fsr2h
  3337  00093A  6EDF               	movwf	indf2,c
  3338                           
  3339                           ; BSR set to: 1
  3340  00093C  0100               	movlb	0	; () banked
  3341  00093E  4BDB               	infsnz	sprintf@sp& (0+255),f,b
  3342  000940  2BDC               	incf	(sprintf@sp+1)& (0+255),f,b
  3343                           
  3344                           ; BSR set to: 0
  3345                           ;doprnt.c: 1232: val %= dpowers[c];
  3346  000942  C110  F08D         	movff	sprintf@val,___llmod@dividend
  3347  000946  C111  F08E         	movff	sprintf@val+1,___llmod@dividend+1
  3348  00094A  C112  F08F         	movff	sprintf@val+2,___llmod@dividend+2
  3349  00094E  C113  F090         	movff	sprintf@val+3,___llmod@dividend+3
  3350  000952  0101               	movlb	1	; () banked
  3351  000954  511E               	movf	sprintf@c& (0+255),w,b
  3352  000956  0D04               	mullw	4
  3353  000958  0E5F               	movlw	low _dpowers
  3354  00095A  24F3               	addwf	prodl,w,c
  3355  00095C  6EF6               	movwf	tblptrl,c
  3356  00095E  0EFF               	movlw	high _dpowers
  3357  000960  20F4               	addwfc	prodh,w,c
  3358  000962  6EF7               	movwf	tblptrh,c
  3359  000964                     	if	1	;There are 3 active tblptr bytes
  3360  000964  6AF8               	clrf	tblptru,c
  3361  000966  0E00               	movlw	low (__mediumconst shr (0+16))
  3362  000968  22F8               	addwfc	tblptru,f,c
  3363  00096A                     	endif
  3364  00096A  0009               	tblrd		*+
  3365  00096C  CFF5 F091          	movff	tablat,___llmod@divisor
  3366  000970  0009               	tblrd		*+
  3367  000972  CFF5 F092          	movff	tablat,___llmod@divisor+1
  3368  000976  0009               	tblrd		*+
  3369  000978  CFF5 F093          	movff	tablat,___llmod@divisor+2
  3370  00097C  000A               	tblrd		*-
  3371  00097E  CFF5 F094          	movff	tablat,___llmod@divisor+3
  3372  000982  EC4A  F019         	call	___llmod	;wreg free
  3373  000986  C08D  F110         	movff	?___llmod,sprintf@val
  3374  00098A  C08E  F111         	movff	?___llmod+1,sprintf@val+1
  3375  00098E  C08F  F112         	movff	?___llmod+2,sprintf@val+2
  3376  000992  C090  F113         	movff	?___llmod+3,sprintf@val+3
  3377  000996                     l465:
  3378  000996  0101               	movlb	1	; () banked
  3379  000998  071E               	decf	sprintf@c& (0+255),f,b
  3380  00099A  291E               	incf	sprintf@c& (0+255),w,b
  3381  00099C  B4D8               	btfsc	status,2,c
  3382  00099E  D00E               	goto	l468
  3383  0009A0  D780               	goto	l466
  3384  0009A2                     
  3385                           ; BSR set to: 1
  3386                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  3387                           
  3388                           ; BSR set to: 1
  3389  0009A2  C0DB  FFD9         	movff	sprintf@sp,fsr2l
  3390  0009A6  C0DC  FFDA         	movff	sprintf@sp+1,fsr2h
  3391  0009AA  0E30               	movlw	48
  3392  0009AC  6EDF               	movwf	indf2,c
  3393                           
  3394                           ; BSR set to: 1
  3395  0009AE  0100               	movlb	0	; () banked
  3396  0009B0  4BDB               	infsnz	sprintf@sp& (0+255),f,b
  3397  0009B2  2BDC               	incf	(sprintf@sp+1)& (0+255),f,b
  3398                           
  3399                           ; BSR set to: 0
  3400                           ;doprnt.c: 1237: prec--;
  3401  0009B4  0101               	movlb	1	; () banked
  3402  0009B6  071C               	decf	sprintf@prec& (0+255),f,b
  3403  0009B8  A0D8               	btfss	status,0,c
  3404  0009BA  071D               	decf	(sprintf@prec+1)& (0+255),f,b
  3405  0009BC                     l468:
  3406                           
  3407                           ; BSR set to: 1
  3408                           
  3409                           ; BSR set to: 1
  3410  0009BC  511C               	movf	sprintf@prec& (0+255),w,b
  3411  0009BE  111D               	iorwf	(sprintf@prec+1)& (0+255),w,b
  3412  0009C0  B4D8               	btfsc	status,2,c
  3413  0009C2  D13A               	goto	u4800
  3414  0009C4  D7EE               	goto	l469
  3415  0009C6                     l428:
  3416                           
  3417                           ; BSR set to: 1
  3418                           ;doprnt.c: 1246: }
  3419                           ;doprnt.c: 1253: {
  3420                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  3421                           
  3422                           ; BSR set to: 1
  3423  0009C6  C106  FFD9         	movff	sprintf@ap,fsr2l
  3424  0009CA  C107  FFDA         	movff	sprintf@ap+1,fsr2h
  3425  0009CE  CFDE F110          	movff	postinc2,sprintf@val
  3426  0009D2  CFDD F111          	movff	postdec2,sprintf@val+1
  3427  0009D6  0E00               	movlw	0
  3428  0009D8  BF11               	btfsc	(sprintf@val+1)& (0+255),7,b
  3429  0009DA  0EFF               	movlw	-1
  3430  0009DC  6F12               	movwf	(sprintf@val+2)& (0+255),b
  3431  0009DE  6F13               	movwf	(sprintf@val+3)& (0+255),b
  3432                           
  3433                           ; BSR set to: 1
  3434  0009E0  0E02               	movlw	2
  3435  0009E2  2706               	addwf	sprintf@ap& (0+255),f,b
  3436  0009E4  0E00               	movlw	0
  3437  0009E6  2307               	addwfc	(sprintf@ap+1)& (0+255),f,b
  3438                           
  3439                           ; BSR set to: 1
  3440                           ;doprnt.c: 1261: if((long)val < 0) {
  3441  0009E8  AF13               	btfss	(sprintf@val+3)& (0+255),7,b
  3442  0009EA  D00A               	goto	l471
  3443                           
  3444                           ; BSR set to: 1
  3445                           ;doprnt.c: 1262: flag |= 0x03;
  3446  0009EC  0E03               	movlw	3
  3447  0009EE  130A               	iorwf	sprintf@flag& (0+255),f,b
  3448                           
  3449                           ; BSR set to: 1
  3450                           ;doprnt.c: 1263: val = -val;
  3451  0009F0  1F13               	comf	(sprintf@val+3)& (0+255),f,b
  3452  0009F2  1F12               	comf	(sprintf@val+2)& (0+255),f,b
  3453  0009F4  1F11               	comf	(sprintf@val+1)& (0+255),f,b
  3454  0009F6  6D10               	negf	sprintf@val& (0+255),b
  3455  0009F8  0E00               	movlw	0
  3456  0009FA  2311               	addwfc	(sprintf@val+1)& (0+255),f,b
  3457  0009FC  2312               	addwfc	(sprintf@val+2)& (0+255),f,b
  3458  0009FE  2313               	addwfc	(sprintf@val+3)& (0+255),f,b
  3459  000A00                     l471:
  3460                           
  3461                           ; BSR set to: 1
  3462                           ;doprnt.c: 1264: }
  3463                           ;doprnt.c: 1266: }
  3464                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  3465                           
  3466                           ; BSR set to: 1
  3467  000A00  511C               	movf	sprintf@prec& (0+255),w,b
  3468  000A02  111D               	iorwf	(sprintf@prec+1)& (0+255),w,b
  3469  000A04  A4D8               	btfss	status,2,c
  3470  000A06  D008               	goto	l472
  3471                           
  3472                           ; BSR set to: 1
  3473  000A08  5110               	movf	sprintf@val& (0+255),w,b
  3474  000A0A  1111               	iorwf	(sprintf@val+1)& (0+255),w,b
  3475  000A0C  1112               	iorwf	(sprintf@val+2)& (0+255),w,b
  3476  000A0E  1113               	iorwf	(sprintf@val+3)& (0+255),w,b
  3477  000A10  A4D8               	btfss	status,2,c
  3478  000A12  D002               	goto	l472
  3479                           
  3480                           ; BSR set to: 1
  3481                           ;doprnt.c: 1291: prec++;
  3482  000A14  4B1C               	infsnz	sprintf@prec& (0+255),f,b
  3483  000A16  2B1D               	incf	(sprintf@prec+1)& (0+255),f,b
  3484  000A18                     l472:
  3485                           
  3486                           ; BSR set to: 1
  3487                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3488                           
  3489                           ; BSR set to: 1
  3490  000A18  0E01               	movlw	1
  3491  000A1A  6F1E               	movwf	sprintf@c& (0+255),b
  3492  000A1C                     l4374:
  3493                           
  3494                           ; BSR set to: 1
  3495  000A1C  0E0A               	movlw	10
  3496  000A1E  191E               	xorwf	sprintf@c& (0+255),w,b
  3497  000A20  B4D8               	btfsc	status,2,c
  3498  000A22  D01B               	goto	u4690
  3499                           
  3500                           ; BSR set to: 1
  3501                           ;doprnt.c: 1306: if(val < dpowers[c])
  3502                           
  3503                           ; BSR set to: 1
  3504                           
  3505                           ; BSR set to: 1
  3506  000A24  511E               	movf	sprintf@c& (0+255),w,b
  3507  000A26  0D04               	mullw	4
  3508  000A28  0E5F               	movlw	low _dpowers
  3509  000A2A  24F3               	addwf	prodl,w,c
  3510  000A2C  6EF6               	movwf	tblptrl,c
  3511  000A2E  0EFF               	movlw	high _dpowers
  3512  000A30  20F4               	addwfc	prodh,w,c
  3513  000A32  6EF7               	movwf	tblptrh,c
  3514  000A34                     	if	1	;There are 3 active tblptr bytes
  3515  000A34  6AF8               	clrf	tblptru,c
  3516  000A36  0E00               	movlw	low (__mediumconst shr (0+16))
  3517  000A38  22F8               	addwfc	tblptru,f,c
  3518  000A3A                     	endif
  3519  000A3A  0009               	tblrd		*+
  3520  000A3C  50F5               	movf	tablat,w,c
  3521  000A3E  5D10               	subwf	sprintf@val& (0+255),w,b
  3522  000A40  0009               	tblrd		*+
  3523  000A42  50F5               	movf	tablat,w,c
  3524  000A44  5911               	subwfb	(sprintf@val+1)& (0+255),w,b
  3525  000A46  0009               	tblrd		*+
  3526  000A48  50F5               	movf	tablat,w,c
  3527  000A4A  5912               	subwfb	(sprintf@val+2)& (0+255),w,b
  3528  000A4C  0009               	tblrd		*+
  3529  000A4E  50F5               	movf	tablat,w,c
  3530  000A50  5913               	subwfb	(sprintf@val+3)& (0+255),w,b
  3531  000A52  A0D8               	btfss	status,0,c
  3532  000A54  D002               	goto	u4690
  3533                           
  3534                           ; BSR set to: 1
  3535                           
  3536                           ; BSR set to: 1
  3537                           
  3538                           ; BSR set to: 1
  3539                           ;doprnt.c: 1307: break;
  3540  000A56  2B1E               	incf	sprintf@c& (0+255),f,b
  3541  000A58  D7E1               	goto	l4374
  3542  000A5A                     u4690:
  3543                           
  3544                           ; BSR set to: 1
  3545                           ;doprnt.c: 1339: if(c < prec)
  3546                           
  3547                           ; BSR set to: 1
  3548  000A5A  0E80               	movlw	128
  3549  000A5C  BF1E               	btfsc	sprintf@c& (0+255),7,b
  3550  000A5E  0E7F               	movlw	127
  3551  000A60  0100               	movlb	0	; () banked
  3552  000A62  6FE7               	movwf	??_sprintf& (0+255),b
  3553  000A64  0101               	movlb	1	; () banked
  3554  000A66  511C               	movf	sprintf@prec& (0+255),w,b
  3555  000A68  5D1E               	subwf	sprintf@c& (0+255),w,b
  3556  000A6A  511D               	movf	(sprintf@prec+1)& (0+255),w,b
  3557  000A6C  0A80               	xorlw	128
  3558  000A6E  0100               	movlb	0	; () banked
  3559  000A70  59E7               	subwfb	??_sprintf& (0+255),w,b
  3560  000A72  B0D8               	btfsc	status,0,c
  3561  000A74  D003               	goto	l476
  3562                           
  3563                           ; BSR set to: 0
  3564                           ;doprnt.c: 1340: c = prec;
  3565  000A76  C11C  F11E         	movff	sprintf@prec,sprintf@c
  3566  000A7A  D015               	goto	l478
  3567  000A7C                     l476:
  3568                           
  3569                           ; BSR set to: 0
  3570                           ;doprnt.c: 1341: else if(prec < c)
  3571                           
  3572                           ; BSR set to: 0
  3573  000A7C  0101               	movlb	1	; () banked
  3574  000A7E  511D               	movf	(sprintf@prec+1)& (0+255),w,b
  3575  000A80  0A80               	xorlw	128
  3576  000A82  0100               	movlb	0	; () banked
  3577  000A84  6FE7               	movwf	??_sprintf& (0+255),b
  3578  000A86  0101               	movlb	1	; () banked
  3579  000A88  511E               	movf	sprintf@c& (0+255),w,b
  3580  000A8A  5D1C               	subwf	sprintf@prec& (0+255),w,b
  3581  000A8C  0E80               	movlw	128
  3582  000A8E  BF1E               	btfsc	sprintf@c& (0+255),7,b
  3583  000A90  0E7F               	movlw	127
  3584  000A92  0100               	movlb	0	; () banked
  3585  000A94  59E7               	subwfb	??_sprintf& (0+255),w,b
  3586  000A96  B0D8               	btfsc	status,0,c
  3587  000A98  D006               	goto	l478
  3588                           
  3589                           ; BSR set to: 0
  3590                           ;doprnt.c: 1342: prec = c;
  3591  000A9A  0101               	movlb	1	; () banked
  3592  000A9C  511E               	movf	sprintf@c& (0+255),w,b
  3593  000A9E  6F1C               	movwf	sprintf@prec& (0+255),b
  3594  000AA0  6B1D               	clrf	(sprintf@prec+1)& (0+255),b
  3595  000AA2  BF1C               	btfsc	sprintf@prec& (0+255),7,b
  3596  000AA4  071D               	decf	(sprintf@prec+1)& (0+255),f,b
  3597  000AA6                     l478:
  3598                           
  3599                           ;doprnt.c: 1345: if(width && flag & 0x03)
  3600                           
  3601                           ; BSR set to: 1
  3602                           
  3603                           ; BSR set to: 1
  3604  000AA6  0101               	movlb	1	; () banked
  3605  000AA8  5116               	movf	sprintf@width& (0+255),w,b
  3606  000AAA  1117               	iorwf	(sprintf@width+1)& (0+255),w,b
  3607  000AAC  B4D8               	btfsc	status,2,c
  3608  000AAE  D011               	goto	l479
  3609                           
  3610                           ; BSR set to: 1
  3611  000AB0  0E03               	movlw	3
  3612  000AB2  150A               	andwf	sprintf@flag& (0+255),w,b
  3613  000AB4  0100               	movlb	0	; () banked
  3614  000AB6  6FE7               	movwf	??_sprintf& (0+255),b
  3615  000AB8  0E00               	movlw	0
  3616  000ABA  0101               	movlb	1	; () banked
  3617  000ABC  150B               	andwf	(sprintf@flag+1)& (0+255),w,b
  3618  000ABE  0100               	movlb	0	; () banked
  3619  000AC0  6FE8               	movwf	(??_sprintf+1)& (0+255),b
  3620  000AC2  51E7               	movf	??_sprintf& (0+255),w,b
  3621  000AC4  11E8               	iorwf	(??_sprintf+1)& (0+255),w,b
  3622  000AC6  B4D8               	btfsc	status,2,c
  3623  000AC8  D004               	goto	l479
  3624                           
  3625                           ; BSR set to: 0
  3626                           ;doprnt.c: 1346: width--;
  3627  000ACA  0101               	movlb	1	; () banked
  3628  000ACC  0716               	decf	sprintf@width& (0+255),f,b
  3629  000ACE  A0D8               	btfss	status,0,c
  3630  000AD0  0717               	decf	(sprintf@width+1)& (0+255),f,b
  3631  000AD2                     l479:
  3632                           
  3633                           ;doprnt.c: 1348: if(flag & 0x4000) {
  3634                           
  3635                           ; BSR set to: 1
  3636  000AD2  0101               	movlb	1	; () banked
  3637  000AD4  AD0B               	btfss	(sprintf@flag+1)& (0+255),6,b
  3638  000AD6  D018               	goto	l482
  3639                           
  3640                           ; BSR set to: 1
  3641                           ;doprnt.c: 1349: if(width > prec)
  3642  000AD8  5116               	movf	sprintf@width& (0+255),w,b
  3643  000ADA  5D1C               	subwf	sprintf@prec& (0+255),w,b
  3644  000ADC  511D               	movf	(sprintf@prec+1)& (0+255),w,b
  3645  000ADE  0A80               	xorlw	128
  3646  000AE0  0100               	movlb	0	; () banked
  3647  000AE2  6FE7               	movwf	??_sprintf& (0+255),b
  3648  000AE4  0101               	movlb	1	; () banked
  3649  000AE6  5117               	movf	(sprintf@width+1)& (0+255),w,b
  3650  000AE8  0A80               	xorlw	128
  3651  000AEA  0100               	movlb	0	; () banked
  3652  000AEC  59E7               	subwfb	??_sprintf& (0+255),w,b
  3653  000AEE  B0D8               	btfsc	status,0,c
  3654  000AF0  D006               	goto	l481
  3655                           
  3656                           ; BSR set to: 0
  3657                           ;doprnt.c: 1350: width -= prec;
  3658  000AF2  0101               	movlb	1	; () banked
  3659  000AF4  511C               	movf	sprintf@prec& (0+255),w,b
  3660  000AF6  5F16               	subwf	sprintf@width& (0+255),f,b
  3661  000AF8  511D               	movf	(sprintf@prec+1)& (0+255),w,b
  3662  000AFA  5B17               	subwfb	(sprintf@width+1)& (0+255),f,b
  3663  000AFC  D005               	goto	l482
  3664  000AFE                     l481:
  3665                           
  3666                           ;doprnt.c: 1351: else
  3667                           ;doprnt.c: 1352: width = 0;
  3668                           
  3669                           ; BSR set to: 1
  3670  000AFE  0E00               	movlw	0
  3671  000B00  0101               	movlb	1	; () banked
  3672  000B02  6F17               	movwf	(sprintf@width+1)& (0+255),b
  3673  000B04  0E00               	movlw	0
  3674  000B06  6F16               	movwf	sprintf@width& (0+255),b
  3675  000B08                     l482:
  3676                           
  3677                           ; BSR set to: 1
  3678                           ;doprnt.c: 1353: }
  3679                           ;doprnt.c: 1381: if(width > c)
  3680                           
  3681                           ; BSR set to: 1
  3682                           
  3683                           ; BSR set to: 1
  3684  000B08  0E80               	movlw	128
  3685  000B0A  BF1E               	btfsc	sprintf@c& (0+255),7,b
  3686  000B0C  0E7F               	movlw	127
  3687  000B0E  0100               	movlb	0	; () banked
  3688  000B10  6FE7               	movwf	??_sprintf& (0+255),b
  3689  000B12  0101               	movlb	1	; () banked
  3690  000B14  5116               	movf	sprintf@width& (0+255),w,b
  3691  000B16  5D1E               	subwf	sprintf@c& (0+255),w,b
  3692  000B18  5117               	movf	(sprintf@width+1)& (0+255),w,b
  3693  000B1A  0A80               	xorlw	128
  3694  000B1C  0100               	movlb	0	; () banked
  3695  000B1E  59E7               	subwfb	??_sprintf& (0+255),w,b
  3696  000B20  B0D8               	btfsc	status,0,c
  3697  000B22  D008               	goto	l483
  3698                           
  3699                           ; BSR set to: 0
  3700                           ;doprnt.c: 1382: width -= c;
  3701  000B24  0101               	movlb	1	; () banked
  3702  000B26  511E               	movf	sprintf@c& (0+255),w,b
  3703  000B28  5F16               	subwf	sprintf@width& (0+255),f,b
  3704  000B2A  0E00               	movlw	0
  3705  000B2C  BF1E               	btfsc	sprintf@c& (0+255),7,b
  3706  000B2E  0EFF               	movlw	255
  3707  000B30  5B17               	subwfb	(sprintf@width+1)& (0+255),f,b
  3708  000B32  D005               	goto	l484
  3709  000B34                     l483:
  3710                           
  3711                           ;doprnt.c: 1383: else
  3712                           ;doprnt.c: 1384: width = 0;
  3713                           
  3714                           ; BSR set to: 1
  3715  000B34  0E00               	movlw	0
  3716  000B36  0101               	movlb	1	; () banked
  3717  000B38  6F17               	movwf	(sprintf@width+1)& (0+255),b
  3718  000B3A  0E00               	movlw	0
  3719  000B3C  6F16               	movwf	sprintf@width& (0+255),b
  3720  000B3E                     l484:
  3721                           
  3722                           ; BSR set to: 1
  3723                           ;doprnt.c: 1422: {
  3724                           ;doprnt.c: 1424: if(width
  3725                           ;doprnt.c: 1428: )
  3726                           
  3727                           ; BSR set to: 1
  3728  000B3E  5116               	movf	sprintf@width& (0+255),w,b
  3729  000B40  1117               	iorwf	(sprintf@width+1)& (0+255),w,b
  3730  000B42  B4D8               	btfsc	status,2,c
  3731  000B44  D011               	goto	u4780
  3732  000B46                     u4770:
  3733                           
  3734                           ; BSR set to: 1
  3735                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  3736                           
  3737                           ; BSR set to: 1
  3738                           
  3739                           ;doprnt.c: 1429: do
  3740  000B46  C0DB  FFD9         	movff	sprintf@sp,fsr2l
  3741  000B4A  C0DC  FFDA         	movff	sprintf@sp+1,fsr2h
  3742  000B4E  0E20               	movlw	32
  3743  000B50  6EDF               	movwf	indf2,c
  3744                           
  3745                           ; BSR set to: 1
  3746  000B52  0100               	movlb	0	; () banked
  3747  000B54  4BDB               	infsnz	sprintf@sp& (0+255),f,b
  3748  000B56  2BDC               	incf	(sprintf@sp+1)& (0+255),f,b
  3749                           
  3750                           ; BSR set to: 0
  3751                           ;doprnt.c: 1431: while(--width);
  3752  000B58  0101               	movlb	1	; () banked
  3753  000B5A  0716               	decf	sprintf@width& (0+255),f,b
  3754  000B5C  A0D8               	btfss	status,0,c
  3755  000B5E  0717               	decf	(sprintf@width+1)& (0+255),f,b
  3756  000B60  5116               	movf	sprintf@width& (0+255),w,b
  3757  000B62  1117               	iorwf	(sprintf@width+1)& (0+255),w,b
  3758  000B64  A4D8               	btfss	status,2,c
  3759  000B66  D7EF               	goto	u4770
  3760  000B68                     u4780:
  3761                           
  3762                           ; BSR set to: 1
  3763                           ;doprnt.c: 1438: if(flag & 0x03)
  3764                           
  3765                           ; BSR set to: 1
  3766                           
  3767                           ; BSR set to: 1
  3768  000B68  0E03               	movlw	3
  3769  000B6A  150A               	andwf	sprintf@flag& (0+255),w,b
  3770  000B6C  0100               	movlb	0	; () banked
  3771  000B6E  6FE7               	movwf	??_sprintf& (0+255),b
  3772  000B70  0E00               	movlw	0
  3773  000B72  0101               	movlb	1	; () banked
  3774  000B74  150B               	andwf	(sprintf@flag+1)& (0+255),w,b
  3775  000B76  0100               	movlb	0	; () banked
  3776  000B78  6FE8               	movwf	(??_sprintf+1)& (0+255),b
  3777  000B7A  51E7               	movf	??_sprintf& (0+255),w,b
  3778  000B7C  11E8               	iorwf	(??_sprintf+1)& (0+255),w,b
  3779  000B7E  B4D8               	btfsc	status,2,c
  3780  000B80  D052               	goto	l489
  3781                           
  3782                           ; BSR set to: 0
  3783                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  3784  000B82  C0DB  FFD9         	movff	sprintf@sp,fsr2l
  3785  000B86  C0DC  FFDA         	movff	sprintf@sp+1,fsr2h
  3786  000B8A  0E2D               	movlw	45
  3787  000B8C  6EDF               	movwf	indf2,c
  3788  000B8E  D049               	goto	L5
  3789  000B90                     l4428:
  3790                           
  3791                           ;doprnt.c: 1478: {
  3792                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  3793  000B90  C11C  F0E7         	movff	sprintf@prec,??_sprintf
  3794  000B94  C11D  F0E8         	movff	sprintf@prec+1,??_sprintf+1
  3795  000B98  0100               	movlb	0	; () banked
  3796  000B9A  90D8               	bcf	status,0,c
  3797  000B9C  37E7               	rlcf	??_sprintf& (0+255),f,b
  3798  000B9E  37E8               	rlcf	(??_sprintf+1)& (0+255),f,b
  3799  000BA0  90D8               	bcf	status,0,c
  3800  000BA2  37E7               	rlcf	??_sprintf& (0+255),f,b
  3801  000BA4  37E8               	rlcf	(??_sprintf+1)& (0+255),f,b
  3802  000BA6  0E5F               	movlw	low _dpowers
  3803  000BA8  25E7               	addwf	??_sprintf& (0+255),w,b
  3804  000BAA  6EF6               	movwf	tblptrl,c
  3805  000BAC  0EFF               	movlw	high _dpowers
  3806  000BAE  21E8               	addwfc	(??_sprintf+1)& (0+255),w,b
  3807  000BB0  6EF7               	movwf	tblptrh,c
  3808  000BB2                     	if	1	;There are 3 active tblptr bytes
  3809  000BB2  6AF8               	clrf	tblptru,c
  3810  000BB4  0E00               	movlw	low (__mediumconst shr (0+16))
  3811  000BB6  22F8               	addwfc	tblptru,f,c
  3812  000BB8                     	endif
  3813  000BB8  0009               	tblrd		*+
  3814  000BBA  CFF5 F084          	movff	tablat,___lldiv@divisor
  3815  000BBE  0009               	tblrd		*+
  3816  000BC0  CFF5 F085          	movff	tablat,___lldiv@divisor+1
  3817  000BC4  0009               	tblrd		*+
  3818  000BC6  CFF5 F086          	movff	tablat,___lldiv@divisor+2
  3819  000BCA  000A               	tblrd		*-
  3820  000BCC  CFF5 F087          	movff	tablat,___lldiv@divisor+3
  3821  000BD0  C110  F080         	movff	sprintf@val,___lldiv@dividend
  3822  000BD4  C111  F081         	movff	sprintf@val+1,___lldiv@dividend+1
  3823  000BD8  C112  F082         	movff	sprintf@val+2,___lldiv@dividend+2
  3824  000BDC  C113  F083         	movff	sprintf@val+3,___lldiv@dividend+3
  3825  000BE0  EC98  F018         	call	___lldiv	;wreg free
  3826  000BE4  C080  F08D         	movff	?___lldiv,___llmod@dividend
  3827  000BE8  C081  F08E         	movff	?___lldiv+1,___llmod@dividend+1
  3828  000BEC  C082  F08F         	movff	?___lldiv+2,___llmod@dividend+2
  3829  000BF0  C083  F090         	movff	?___lldiv+3,___llmod@dividend+3
  3830  000BF4  0E0A               	movlw	10
  3831  000BF6  0100               	movlb	0	; () banked
  3832  000BF8  6F91               	movwf	___llmod@divisor& (0+255),b
  3833  000BFA  0E00               	movlw	0
  3834  000BFC  6F92               	movwf	(___llmod@divisor+1)& (0+255),b
  3835  000BFE  0E00               	movlw	0
  3836  000C00  6F93               	movwf	(___llmod@divisor+2)& (0+255),b
  3837  000C02  0E00               	movlw	0
  3838  000C04  6F94               	movwf	(___llmod@divisor+3)& (0+255),b
  3839  000C06  EC4A  F019         	call	___llmod	;wreg free
  3840  000C0A  0100               	movlb	0	; () banked
  3841  000C0C  518D               	movf	?___llmod& (0+255),w,b
  3842  000C0E  0F30               	addlw	48
  3843  000C10  0101               	movlb	1	; () banked
  3844  000C12  6F1E               	movwf	sprintf@c& (0+255),b
  3845                           
  3846                           ; BSR set to: 1
  3847                           ;doprnt.c: 1523: }
  3848                           ;doprnt.c: 1524: ((*sp++ = (c)));
  3849  000C14  C0DB  FFD9         	movff	sprintf@sp,fsr2l
  3850  000C18  C0DC  FFDA         	movff	sprintf@sp+1,fsr2h
  3851  000C1C  C11E  FFDF         	movff	sprintf@c,indf2
  3852                           
  3853                           ; BSR set to: 1
  3854  000C20  0100               	movlb	0	; () banked
  3855  000C22                     L5:
  3856  000C22  4BDB               	infsnz	sprintf@sp& (0+255),f,b
  3857  000C24  2BDC               	incf	(sprintf@sp+1)& (0+255),f,b
  3858  000C26                     l489:
  3859                           
  3860                           ; BSR set to: 0
  3861                           
  3862                           ; BSR set to: 0
  3863  000C26  0101               	movlb	1	; () banked
  3864  000C28  071C               	decf	sprintf@prec& (0+255),f,b
  3865  000C2A  A0D8               	btfss	status,0,c
  3866  000C2C  071D               	decf	(sprintf@prec+1)& (0+255),f,b
  3867  000C2E  291C               	incf	sprintf@prec& (0+255),w,b
  3868  000C30  E1AF               	bnz	l4428
  3869  000C32  291D               	incf	(sprintf@prec+1)& (0+255),w,b
  3870  000C34  A4D8               	btfss	status,2,c
  3871  000C36  D7AC               	goto	l490
  3872  000C38                     u4800:
  3873                           
  3874                           ; BSR set to: 1
  3875                           
  3876                           ; BSR set to: 1
  3877  000C38  C0DD  FFF6         	movff	sprintf@f,tblptrl
  3878  000C3C  C0DE  FFF7         	movff	sprintf@f+1,tblptrh
  3879  000C40  0100               	movlb	0	; () banked
  3880  000C42  4BDD               	infsnz	sprintf@f& (0+255),f,b
  3881  000C44  2BDE               	incf	(sprintf@f+1)& (0+255),f,b
  3882  000C46                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3883  000C46  6AF8               	clrf	tblptru,c
  3884  000C48                     	endif
  3885  000C48                     	if	0	;tblptru may be non-zero
  3886  000C48                     	endif
  3887  000C48  0008               	tblrd		*
  3888  000C4A  CFF5 F11E          	movff	tablat,sprintf@c
  3889  000C4E  0101               	movlb	1	; () banked
  3890  000C50  511E               	movf	sprintf@c& (0+255),w,b
  3891  000C52  A4D8               	btfss	status,2,c
  3892  000C54  EF10  F000         	goto	l394
  3893  000C58                     u4810:
  3894                           
  3895                           ; BSR set to: 1
  3896                           ;doprnt.c: 1538: *sp = 0;
  3897                           
  3898                           ; BSR set to: 1
  3899                           
  3900                           ;doprnt.c: 1525: }
  3901                           ;doprnt.c: 1533: }
  3902                           ;doprnt.c: 1535: alldone:
  3903                           
  3904                           ; BSR set to: 1
  3905  000C58  C0DB  FFD9         	movff	sprintf@sp,fsr2l
  3906  000C5C  C0DC  FFDA         	movff	sprintf@sp+1,fsr2h
  3907  000C60  0E00               	movlw	0
  3908  000C62  6EDF               	movwf	indf2,c
  3909  000C64  0012               	return	
  3910  000C66                     __end_of_sprintf:
  3911                           	opt stack 0
  3912                           tblptru	equ	0xFF8
  3913                           tblptrh	equ	0xFF7
  3914                           tblptrl	equ	0xFF6
  3915                           tablat	equ	0xFF5
  3916                           prodh	equ	0xFF4
  3917                           prodl	equ	0xFF3
  3918                           indf0	equ	0xFEF
  3919                           postinc0	equ	0xFEE
  3920                           fsr0h	equ	0xFEA
  3921                           fsr0l	equ	0xFE9
  3922                           wreg	equ	0xFE8
  3923                           postdec1	equ	0xFE5
  3924                           fsr1l	equ	0xFE1
  3925                           indf2	equ	0xFDF
  3926                           postinc2	equ	0xFDE
  3927                           postdec2	equ	0xFDD
  3928                           fsr2h	equ	0xFDA
  3929                           fsr2l	equ	0xFD9
  3930                           status	equ	0xFD8
  3931                           
  3932 ;; *************** function _scale *****************
  3933 ;; Defined at:
  3934 ;;		line 425 in file "/opt/microchip/xc8/v1.45/sources/common/doprnt.c"
  3935 ;; Parameters:    Size  Location     Type
  3936 ;;  scl             1    wreg     char 
  3937 ;; Auto vars:     Size  Location     Type
  3938 ;;  scl             1   53[BANK0 ] char 
  3939 ;; Return value:  Size  Location     Type
  3940 ;;                  4   45[BANK0 ] char 
  3941 ;; Registers used:
  3942 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3943 ;; Tracked objects:
  3944 ;;		On entry : 0/0
  3945 ;;		On exit  : 0/0
  3946 ;;		Unchanged: 0/0
  3947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3948 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3949 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3951 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3952 ;;Total ram usage:        9 bytes
  3953 ;; Hardware stack levels used:    1
  3954 ;; Hardware stack levels required when called:    4
  3955 ;; This function calls:
  3956 ;;		___awdiv
  3957 ;;		___awmod
  3958 ;;		___flmul
  3959 ;; This function is called by:
  3960 ;;		_sprintf
  3961 ;; This function uses a non-reentrant model
  3962 ;;
  3963                           
  3964                           	psect	text3
  3965  000C66                     __ptext3:
  3966                           	opt stack 0
  3967  000C66                     _scale:
  3968                           	opt stack 24
  3969                           
  3970                           ; BSR set to: 1
  3971                           ;incstack = 0
  3972                           ;scale@scl stored from wreg
  3973  000C66  0100               	movlb	0	; () banked
  3974  000C68  6FB5               	movwf	scale@scl& (0+255),b
  3975                           
  3976                           ;doprnt.c: 428: if(scl < 0) {
  3977  000C6A  0100               	movlb	0	; () banked
  3978  000C6C  AFB5               	btfss	scale@scl& (0+255),7,b
  3979  000C6E  D127               	goto	l383
  3980                           
  3981                           ; BSR set to: 0
  3982                           ;doprnt.c: 429: scl = -scl;
  3983  000C70  6DB5               	negf	scale@scl& (0+255),b
  3984                           
  3985                           ;doprnt.c: 430: if(scl>=110)
  3986  000C72  51B5               	movf	scale@scl& (0+255),w,b
  3987  000C74  0A80               	xorlw	128
  3988  000C76  0F12               	addlw	-238
  3989  000C78  A0D8               	btfss	status,0,c
  3990  000C7A  D0A5               	goto	l384
  3991                           
  3992                           ; BSR set to: 0
  3993                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  3994  000C7C  0E00               	movlw	0
  3995  000C7E  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  3996  000C80  0E0A               	movlw	10
  3997  000C82  6F88               	movwf	___awdiv@divisor& (0+255),b
  3998  000C84  0E00               	movlw	0
  3999  000C86  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  4000  000C88  0E64               	movlw	100
  4001  000C8A  6F82               	movwf	___awmod@divisor& (0+255),b
  4002  000C8C  51B5               	movf	scale@scl& (0+255),w,b
  4003  000C8E  6F80               	movwf	___awmod@dividend& (0+255),b
  4004  000C90  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  4005  000C92  BF80               	btfsc	___awmod@dividend& (0+255),7,b
  4006  000C94  0781               	decf	(___awmod@dividend+1)& (0+255),f,b
  4007  000C96  ECDA  F018         	call	___awmod	;wreg free
  4008  000C9A  C080  F086         	movff	?___awmod,___awdiv@dividend
  4009  000C9E  C081  F087         	movff	?___awmod+1,___awdiv@dividend+1
  4010  000CA2  EC55  F018         	call	___awdiv	;wreg free
  4011  000CA6  0100               	movlb	0	; () banked
  4012  000CA8  90D8               	bcf	status,0,c
  4013  000CAA  3786               	rlcf	?___awdiv& (0+255),f,b
  4014  000CAC  3787               	rlcf	(?___awdiv+1)& (0+255),f,b
  4015  000CAE  90D8               	bcf	status,0,c
  4016  000CB0  3786               	rlcf	?___awdiv& (0+255),f,b
  4017  000CB2  3787               	rlcf	(?___awdiv+1)& (0+255),f,b
  4018  000CB4  0E24               	movlw	36
  4019  000CB6  2786               	addwf	?___awdiv& (0+255),f,b
  4020  000CB8  0E00               	movlw	0
  4021  000CBA  2387               	addwfc	(?___awdiv+1)& (0+255),f,b
  4022  000CBC  0E2B               	movlw	low __npowers_
  4023  000CBE  2586               	addwf	?___awdiv& (0+255),w,b
  4024  000CC0  6EF6               	movwf	tblptrl,c
  4025  000CC2  0EFF               	movlw	high __npowers_
  4026  000CC4  2187               	addwfc	(?___awdiv+1)& (0+255),w,b
  4027  000CC6  6EF7               	movwf	tblptrh,c
  4028  000CC8                     	if	1	;There are 3 active tblptr bytes
  4029  000CC8  6AF8               	clrf	tblptru,c
  4030  000CCA  0E00               	movlw	low (__mediumconst shr (0+16))
  4031  000CCC  22F8               	addwfc	tblptru,f,c
  4032  000CCE                     	endif
  4033  000CCE  0009               	tblrd		*+
  4034  000CD0  CFF5 F098          	movff	tablat,___flmul@a
  4035  000CD4  0009               	tblrd		*+
  4036  000CD6  CFF5 F099          	movff	tablat,___flmul@a+1
  4037  000CDA  0009               	tblrd		*+
  4038  000CDC  CFF5 F09A          	movff	tablat,___flmul@a+2
  4039  000CE0  000A               	tblrd		*-
  4040  000CE2  CFF5 F09B          	movff	tablat,___flmul@a+3
  4041  000CE6  0E00               	movlw	0
  4042  000CE8  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  4043  000CEA  0E64               	movlw	100
  4044  000CEC  6F88               	movwf	___awdiv@divisor& (0+255),b
  4045  000CEE  51B5               	movf	scale@scl& (0+255),w,b
  4046  000CF0  6F86               	movwf	___awdiv@dividend& (0+255),b
  4047  000CF2  6B87               	clrf	(___awdiv@dividend+1)& (0+255),b
  4048  000CF4  BF86               	btfsc	___awdiv@dividend& (0+255),7,b
  4049  000CF6  0787               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4050  000CF8  EC55  F018         	call	___awdiv	;wreg free
  4051  000CFC  0100               	movlb	0	; () banked
  4052  000CFE  90D8               	bcf	status,0,c
  4053  000D00  3786               	rlcf	?___awdiv& (0+255),f,b
  4054  000D02  3787               	rlcf	(?___awdiv+1)& (0+255),f,b
  4055  000D04  90D8               	bcf	status,0,c
  4056  000D06  3786               	rlcf	?___awdiv& (0+255),f,b
  4057  000D08  3787               	rlcf	(?___awdiv+1)& (0+255),f,b
  4058  000D0A  0E48               	movlw	72
  4059  000D0C  2786               	addwf	?___awdiv& (0+255),f,b
  4060  000D0E  0E00               	movlw	0
  4061  000D10  2387               	addwfc	(?___awdiv+1)& (0+255),f,b
  4062  000D12  0E2B               	movlw	low __npowers_
  4063  000D14  2586               	addwf	?___awdiv& (0+255),w,b
  4064  000D16  6EF6               	movwf	tblptrl,c
  4065  000D18  0EFF               	movlw	high __npowers_
  4066  000D1A  2187               	addwfc	(?___awdiv+1)& (0+255),w,b
  4067  000D1C  6EF7               	movwf	tblptrh,c
  4068  000D1E                     	if	1	;There are 3 active tblptr bytes
  4069  000D1E  6AF8               	clrf	tblptru,c
  4070  000D20  0E00               	movlw	low (__mediumconst shr (0+16))
  4071  000D22  22F8               	addwfc	tblptru,f,c
  4072  000D24                     	endif
  4073  000D24  0009               	tblrd		*+
  4074  000D26  CFF5 F094          	movff	tablat,___flmul@b
  4075  000D2A  0009               	tblrd		*+
  4076  000D2C  CFF5 F095          	movff	tablat,___flmul@b+1
  4077  000D30  0009               	tblrd		*+
  4078  000D32  CFF5 F096          	movff	tablat,___flmul@b+2
  4079  000D36  000A               	tblrd		*-
  4080  000D38  CFF5 F097          	movff	tablat,___flmul@b+3
  4081  000D3C  EC85  F008         	call	___flmul	;wreg free
  4082  000D40  C094  F0B1         	movff	?___flmul,_scale$1900
  4083  000D44  C095  F0B2         	movff	?___flmul+1,_scale$1900+1
  4084  000D48  C096  F0B3         	movff	?___flmul+2,_scale$1900+2
  4085  000D4C  C097  F0B4         	movff	?___flmul+3,_scale$1900+3
  4086                           
  4087                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4088  000D50  C0B1  F094         	movff	_scale$1900,___flmul@b
  4089  000D54  C0B2  F095         	movff	_scale$1900+1,___flmul@b+1
  4090  000D58  C0B3  F096         	movff	_scale$1900+2,___flmul@b+2
  4091  000D5C  C0B4  F097         	movff	_scale$1900+3,___flmul@b+3
  4092  000D60  0E00               	movlw	0
  4093  000D62  0100               	movlb	0	; () banked
  4094  000D64  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  4095  000D66  0E0A               	movlw	10
  4096  000D68  6F82               	movwf	___awmod@divisor& (0+255),b
  4097  000D6A  51B5               	movf	scale@scl& (0+255),w,b
  4098  000D6C  6F80               	movwf	___awmod@dividend& (0+255),b
  4099  000D6E  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  4100  000D70  BF80               	btfsc	___awmod@dividend& (0+255),7,b
  4101  000D72  0781               	decf	(___awmod@dividend+1)& (0+255),f,b
  4102  000D74  ECDA  F018         	call	___awmod	;wreg free
  4103  000D78  0100               	movlb	0	; () banked
  4104  000D7A  90D8               	bcf	status,0,c
  4105  000D7C  3780               	rlcf	?___awmod& (0+255),f,b
  4106  000D7E  3781               	rlcf	(?___awmod+1)& (0+255),f,b
  4107  000D80  90D8               	bcf	status,0,c
  4108  000D82  3780               	rlcf	?___awmod& (0+255),f,b
  4109  000D84  3781               	rlcf	(?___awmod+1)& (0+255),f,b
  4110  000D86  0E2B               	movlw	low __npowers_
  4111  000D88  2580               	addwf	?___awmod& (0+255),w,b
  4112  000D8A  6EF6               	movwf	tblptrl,c
  4113  000D8C  0EFF               	movlw	high __npowers_
  4114  000D8E  2181               	addwfc	(?___awmod+1)& (0+255),w,b
  4115  000D90  6EF7               	movwf	tblptrh,c
  4116  000D92                     	if	1	;There are 3 active tblptr bytes
  4117  000D92  6AF8               	clrf	tblptru,c
  4118  000D94  0E00               	movlw	low (__mediumconst shr (0+16))
  4119  000D96  22F8               	addwfc	tblptru,f,c
  4120  000D98                     	endif
  4121  000D98  0009               	tblrd		*+
  4122  000D9A  CFF5 F098          	movff	tablat,___flmul@a
  4123  000D9E  0009               	tblrd		*+
  4124  000DA0  CFF5 F099          	movff	tablat,___flmul@a+1
  4125  000DA4  0009               	tblrd		*+
  4126  000DA6  CFF5 F09A          	movff	tablat,___flmul@a+2
  4127  000DAA  000A               	tblrd		*-
  4128  000DAC  CFF5 F09B          	movff	tablat,___flmul@a+3
  4129  000DB0  EC85  F008         	call	___flmul	;wreg free
  4130  000DB4  C094  F0AD         	movff	?___flmul,?_scale
  4131  000DB8  C095  F0AE         	movff	?___flmul+1,?_scale+1
  4132  000DBC  C096  F0AF         	movff	?___flmul+2,?_scale+2
  4133  000DC0  C097  F0B0         	movff	?___flmul+3,?_scale+3
  4134  000DC4  0012               	return	
  4135  000DC6                     l384:
  4136                           
  4137                           ;doprnt.c: 432: else if(scl > 10)
  4138  000DC6  0100               	movlb	0	; () banked
  4139  000DC8  51B5               	movf	scale@scl& (0+255),w,b
  4140  000DCA  0A80               	xorlw	128
  4141  000DCC  0F75               	addlw	-139
  4142  000DCE  A0D8               	btfss	status,0,c
  4143  000DD0  D05D               	goto	l387
  4144                           
  4145                           ; BSR set to: 0
  4146                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  4147  000DD2  0E00               	movlw	0
  4148  000DD4  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  4149  000DD6  0E0A               	movlw	10
  4150  000DD8  6F88               	movwf	___awdiv@divisor& (0+255),b
  4151  000DDA  51B5               	movf	scale@scl& (0+255),w,b
  4152  000DDC  6F86               	movwf	___awdiv@dividend& (0+255),b
  4153  000DDE  6B87               	clrf	(___awdiv@dividend+1)& (0+255),b
  4154  000DE0  BF86               	btfsc	___awdiv@dividend& (0+255),7,b
  4155  000DE2  0787               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4156  000DE4  EC55  F018         	call	___awdiv	;wreg free
  4157  000DE8  0100               	movlb	0	; () banked
  4158  000DEA  90D8               	bcf	status,0,c
  4159  000DEC  3786               	rlcf	?___awdiv& (0+255),f,b
  4160  000DEE  3787               	rlcf	(?___awdiv+1)& (0+255),f,b
  4161  000DF0  90D8               	bcf	status,0,c
  4162  000DF2  3786               	rlcf	?___awdiv& (0+255),f,b
  4163  000DF4  3787               	rlcf	(?___awdiv+1)& (0+255),f,b
  4164  000DF6  0E24               	movlw	36
  4165  000DF8  2786               	addwf	?___awdiv& (0+255),f,b
  4166  000DFA  0E00               	movlw	0
  4167  000DFC  2387               	addwfc	(?___awdiv+1)& (0+255),f,b
  4168  000DFE  0E2B               	movlw	low __npowers_
  4169  000E00  2586               	addwf	?___awdiv& (0+255),w,b
  4170  000E02  6EF6               	movwf	tblptrl,c
  4171  000E04  0EFF               	movlw	high __npowers_
  4172  000E06  2187               	addwfc	(?___awdiv+1)& (0+255),w,b
  4173  000E08  6EF7               	movwf	tblptrh,c
  4174  000E0A                     	if	1	;There are 3 active tblptr bytes
  4175  000E0A  6AF8               	clrf	tblptru,c
  4176  000E0C  0E00               	movlw	low (__mediumconst shr (0+16))
  4177  000E0E  22F8               	addwfc	tblptru,f,c
  4178  000E10                     	endif
  4179  000E10  0009               	tblrd		*+
  4180  000E12  CFF5 F094          	movff	tablat,___flmul@b
  4181  000E16  0009               	tblrd		*+
  4182  000E18  CFF5 F095          	movff	tablat,___flmul@b+1
  4183  000E1C  0009               	tblrd		*+
  4184  000E1E  CFF5 F096          	movff	tablat,___flmul@b+2
  4185  000E22  000A               	tblrd		*-
  4186  000E24  CFF5 F097          	movff	tablat,___flmul@b+3
  4187  000E28  0E00               	movlw	0
  4188  000E2A  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  4189  000E2C  0E0A               	movlw	10
  4190  000E2E  6F82               	movwf	___awmod@divisor& (0+255),b
  4191  000E30  51B5               	movf	scale@scl& (0+255),w,b
  4192  000E32  6F80               	movwf	___awmod@dividend& (0+255),b
  4193  000E34  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  4194  000E36  BF80               	btfsc	___awmod@dividend& (0+255),7,b
  4195  000E38  0781               	decf	(___awmod@dividend+1)& (0+255),f,b
  4196  000E3A  ECDA  F018         	call	___awmod	;wreg free
  4197  000E3E  0100               	movlb	0	; () banked
  4198  000E40  90D8               	bcf	status,0,c
  4199  000E42  3780               	rlcf	?___awmod& (0+255),f,b
  4200  000E44  3781               	rlcf	(?___awmod+1)& (0+255),f,b
  4201  000E46  90D8               	bcf	status,0,c
  4202  000E48  3780               	rlcf	?___awmod& (0+255),f,b
  4203  000E4A  3781               	rlcf	(?___awmod+1)& (0+255),f,b
  4204  000E4C  0E2B               	movlw	low __npowers_
  4205  000E4E  2580               	addwf	?___awmod& (0+255),w,b
  4206  000E50  6EF6               	movwf	tblptrl,c
  4207  000E52  0EFF               	movlw	high __npowers_
  4208  000E54  2181               	addwfc	(?___awmod+1)& (0+255),w,b
  4209  000E56  6EF7               	movwf	tblptrh,c
  4210  000E58                     	if	1	;There are 3 active tblptr bytes
  4211  000E58  6AF8               	clrf	tblptru,c
  4212  000E5A  0E00               	movlw	low (__mediumconst shr (0+16))
  4213  000E5C  22F8               	addwfc	tblptru,f,c
  4214  000E5E                     	endif
  4215  000E5E  0009               	tblrd		*+
  4216  000E60  CFF5 F098          	movff	tablat,___flmul@a
  4217  000E64  0009               	tblrd		*+
  4218  000E66  CFF5 F099          	movff	tablat,___flmul@a+1
  4219  000E6A  0009               	tblrd		*+
  4220  000E6C  CFF5 F09A          	movff	tablat,___flmul@a+2
  4221  000E70  000A               	tblrd		*-
  4222  000E72  CFF5 F09B          	movff	tablat,___flmul@a+3
  4223  000E76  EC85  F008         	call	___flmul	;wreg free
  4224  000E7A  C094  F0AD         	movff	?___flmul,?_scale
  4225  000E7E  C095  F0AE         	movff	?___flmul+1,?_scale+1
  4226  000E82  C096  F0AF         	movff	?___flmul+2,?_scale+2
  4227  000E86  C097  F0B0         	movff	?___flmul+3,?_scale+3
  4228  000E8A  0012               	return	
  4229  000E8C                     l387:
  4230                           
  4231                           ;doprnt.c: 434: return _npowers_[scl];
  4232  000E8C  0100               	movlb	0	; () banked
  4233  000E8E  51B5               	movf	scale@scl& (0+255),w,b
  4234  000E90  0D04               	mullw	4
  4235  000E92  0E2B               	movlw	low __npowers_
  4236  000E94  24F3               	addwf	prodl,w,c
  4237  000E96  6EF6               	movwf	tblptrl,c
  4238  000E98  0EFF               	movlw	high __npowers_
  4239  000E9A  20F4               	addwfc	prodh,w,c
  4240  000E9C  6EF7               	movwf	tblptrh,c
  4241  000E9E                     	if	1	;There are 3 active tblptr bytes
  4242  000E9E  6AF8               	clrf	tblptru,c
  4243  000EA0  0E00               	movlw	low (__mediumconst shr (0+16))
  4244  000EA2  22F8               	addwfc	tblptru,f,c
  4245  000EA4                     	endif
  4246  000EA4  0009               	tblrd		*+
  4247  000EA6  CFF5 F0AD          	movff	tablat,?_scale
  4248  000EAA  0009               	tblrd		*+
  4249  000EAC  CFF5 F0AE          	movff	tablat,?_scale+1
  4250  000EB0  0009               	tblrd		*+
  4251  000EB2  CFF5 F0AF          	movff	tablat,?_scale+2
  4252  000EB6  000A               	tblrd		*-
  4253  000EB8  CFF5 F0B0          	movff	tablat,?_scale+3
  4254                           
  4255                           ; BSR set to: 0
  4256  000EBC  0012               	return	
  4257  000EBE                     l383:
  4258                           
  4259                           ; BSR set to: 0
  4260                           ;doprnt.c: 435: }
  4261                           ;doprnt.c: 436: if(scl>=110)
  4262                           
  4263                           ; BSR set to: 0
  4264  000EBE  51B5               	movf	scale@scl& (0+255),w,b
  4265  000EC0  0A80               	xorlw	128
  4266  000EC2  0F12               	addlw	-238
  4267  000EC4  A0D8               	btfss	status,0,c
  4268  000EC6  D0A5               	goto	l388
  4269                           
  4270                           ; BSR set to: 0
  4271                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4272  000EC8  0E00               	movlw	0
  4273  000ECA  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  4274  000ECC  0E0A               	movlw	10
  4275  000ECE  6F88               	movwf	___awdiv@divisor& (0+255),b
  4276  000ED0  0E00               	movlw	0
  4277  000ED2  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  4278  000ED4  0E64               	movlw	100
  4279  000ED6  6F82               	movwf	___awmod@divisor& (0+255),b
  4280  000ED8  51B5               	movf	scale@scl& (0+255),w,b
  4281  000EDA  6F80               	movwf	___awmod@dividend& (0+255),b
  4282  000EDC  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  4283  000EDE  BF80               	btfsc	___awmod@dividend& (0+255),7,b
  4284  000EE0  0781               	decf	(___awmod@dividend+1)& (0+255),f,b
  4285  000EE2  ECDA  F018         	call	___awmod	;wreg free
  4286  000EE6  C080  F086         	movff	?___awmod,___awdiv@dividend
  4287  000EEA  C081  F087         	movff	?___awmod+1,___awdiv@dividend+1
  4288  000EEE  EC55  F018         	call	___awdiv	;wreg free
  4289  000EF2  0100               	movlb	0	; () banked
  4290  000EF4  90D8               	bcf	status,0,c
  4291  000EF6  3786               	rlcf	?___awdiv& (0+255),f,b
  4292  000EF8  3787               	rlcf	(?___awdiv+1)& (0+255),f,b
  4293  000EFA  90D8               	bcf	status,0,c
  4294  000EFC  3786               	rlcf	?___awdiv& (0+255),f,b
  4295  000EFE  3787               	rlcf	(?___awdiv+1)& (0+255),f,b
  4296  000F00  0E24               	movlw	36
  4297  000F02  2786               	addwf	?___awdiv& (0+255),f,b
  4298  000F04  0E00               	movlw	0
  4299  000F06  2387               	addwfc	(?___awdiv+1)& (0+255),f,b
  4300  000F08  0EF7               	movlw	low __powers_
  4301  000F0A  2586               	addwf	?___awdiv& (0+255),w,b
  4302  000F0C  6EF6               	movwf	tblptrl,c
  4303  000F0E  0EFE               	movlw	high __powers_
  4304  000F10  2187               	addwfc	(?___awdiv+1)& (0+255),w,b
  4305  000F12  6EF7               	movwf	tblptrh,c
  4306  000F14                     	if	1	;There are 3 active tblptr bytes
  4307  000F14  6AF8               	clrf	tblptru,c
  4308  000F16  0E00               	movlw	low (__mediumconst shr (0+16))
  4309  000F18  22F8               	addwfc	tblptru,f,c
  4310  000F1A                     	endif
  4311  000F1A  0009               	tblrd		*+
  4312  000F1C  CFF5 F098          	movff	tablat,___flmul@a
  4313  000F20  0009               	tblrd		*+
  4314  000F22  CFF5 F099          	movff	tablat,___flmul@a+1
  4315  000F26  0009               	tblrd		*+
  4316  000F28  CFF5 F09A          	movff	tablat,___flmul@a+2
  4317  000F2C  000A               	tblrd		*-
  4318  000F2E  CFF5 F09B          	movff	tablat,___flmul@a+3
  4319  000F32  0E00               	movlw	0
  4320  000F34  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  4321  000F36  0E64               	movlw	100
  4322  000F38  6F88               	movwf	___awdiv@divisor& (0+255),b
  4323  000F3A  51B5               	movf	scale@scl& (0+255),w,b
  4324  000F3C  6F86               	movwf	___awdiv@dividend& (0+255),b
  4325  000F3E  6B87               	clrf	(___awdiv@dividend+1)& (0+255),b
  4326  000F40  BF86               	btfsc	___awdiv@dividend& (0+255),7,b
  4327  000F42  0787               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4328  000F44  EC55  F018         	call	___awdiv	;wreg free
  4329  000F48  0100               	movlb	0	; () banked
  4330  000F4A  90D8               	bcf	status,0,c
  4331  000F4C  3786               	rlcf	?___awdiv& (0+255),f,b
  4332  000F4E  3787               	rlcf	(?___awdiv+1)& (0+255),f,b
  4333  000F50  90D8               	bcf	status,0,c
  4334  000F52  3786               	rlcf	?___awdiv& (0+255),f,b
  4335  000F54  3787               	rlcf	(?___awdiv+1)& (0+255),f,b
  4336  000F56  0E48               	movlw	72
  4337  000F58  2786               	addwf	?___awdiv& (0+255),f,b
  4338  000F5A  0E00               	movlw	0
  4339  000F5C  2387               	addwfc	(?___awdiv+1)& (0+255),f,b
  4340  000F5E  0EF7               	movlw	low __powers_
  4341  000F60  2586               	addwf	?___awdiv& (0+255),w,b
  4342  000F62  6EF6               	movwf	tblptrl,c
  4343  000F64  0EFE               	movlw	high __powers_
  4344  000F66  2187               	addwfc	(?___awdiv+1)& (0+255),w,b
  4345  000F68  6EF7               	movwf	tblptrh,c
  4346  000F6A                     	if	1	;There are 3 active tblptr bytes
  4347  000F6A  6AF8               	clrf	tblptru,c
  4348  000F6C  0E00               	movlw	low (__mediumconst shr (0+16))
  4349  000F6E  22F8               	addwfc	tblptru,f,c
  4350  000F70                     	endif
  4351  000F70  0009               	tblrd		*+
  4352  000F72  CFF5 F094          	movff	tablat,___flmul@b
  4353  000F76  0009               	tblrd		*+
  4354  000F78  CFF5 F095          	movff	tablat,___flmul@b+1
  4355  000F7C  0009               	tblrd		*+
  4356  000F7E  CFF5 F096          	movff	tablat,___flmul@b+2
  4357  000F82  000A               	tblrd		*-
  4358  000F84  CFF5 F097          	movff	tablat,___flmul@b+3
  4359  000F88  EC85  F008         	call	___flmul	;wreg free
  4360  000F8C  C094  F0B1         	movff	?___flmul,_scale$1900
  4361  000F90  C095  F0B2         	movff	?___flmul+1,_scale$1900+1
  4362  000F94  C096  F0B3         	movff	?___flmul+2,_scale$1900+2
  4363  000F98  C097  F0B4         	movff	?___flmul+3,_scale$1900+3
  4364                           
  4365                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4366  000F9C  C0B1  F094         	movff	_scale$1900,___flmul@b
  4367  000FA0  C0B2  F095         	movff	_scale$1900+1,___flmul@b+1
  4368  000FA4  C0B3  F096         	movff	_scale$1900+2,___flmul@b+2
  4369  000FA8  C0B4  F097         	movff	_scale$1900+3,___flmul@b+3
  4370  000FAC  0E00               	movlw	0
  4371  000FAE  0100               	movlb	0	; () banked
  4372  000FB0  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  4373  000FB2  0E0A               	movlw	10
  4374  000FB4  6F82               	movwf	___awmod@divisor& (0+255),b
  4375  000FB6  51B5               	movf	scale@scl& (0+255),w,b
  4376  000FB8  6F80               	movwf	___awmod@dividend& (0+255),b
  4377  000FBA  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  4378  000FBC  BF80               	btfsc	___awmod@dividend& (0+255),7,b
  4379  000FBE  0781               	decf	(___awmod@dividend+1)& (0+255),f,b
  4380  000FC0  ECDA  F018         	call	___awmod	;wreg free
  4381  000FC4  0100               	movlb	0	; () banked
  4382  000FC6  90D8               	bcf	status,0,c
  4383  000FC8  3780               	rlcf	?___awmod& (0+255),f,b
  4384  000FCA  3781               	rlcf	(?___awmod+1)& (0+255),f,b
  4385  000FCC  90D8               	bcf	status,0,c
  4386  000FCE  3780               	rlcf	?___awmod& (0+255),f,b
  4387  000FD0  3781               	rlcf	(?___awmod+1)& (0+255),f,b
  4388  000FD2  0EF7               	movlw	low __powers_
  4389  000FD4  2580               	addwf	?___awmod& (0+255),w,b
  4390  000FD6  6EF6               	movwf	tblptrl,c
  4391  000FD8  0EFE               	movlw	high __powers_
  4392  000FDA  2181               	addwfc	(?___awmod+1)& (0+255),w,b
  4393  000FDC  6EF7               	movwf	tblptrh,c
  4394  000FDE                     	if	1	;There are 3 active tblptr bytes
  4395  000FDE  6AF8               	clrf	tblptru,c
  4396  000FE0  0E00               	movlw	low (__mediumconst shr (0+16))
  4397  000FE2  22F8               	addwfc	tblptru,f,c
  4398  000FE4                     	endif
  4399  000FE4  0009               	tblrd		*+
  4400  000FE6  CFF5 F098          	movff	tablat,___flmul@a
  4401  000FEA  0009               	tblrd		*+
  4402  000FEC  CFF5 F099          	movff	tablat,___flmul@a+1
  4403  000FF0  0009               	tblrd		*+
  4404  000FF2  CFF5 F09A          	movff	tablat,___flmul@a+2
  4405  000FF6  000A               	tblrd		*-
  4406  000FF8  CFF5 F09B          	movff	tablat,___flmul@a+3
  4407  000FFC  EC85  F008         	call	___flmul	;wreg free
  4408  001000  C094  F0AD         	movff	?___flmul,?_scale
  4409  001004  C095  F0AE         	movff	?___flmul+1,?_scale+1
  4410  001008  C096  F0AF         	movff	?___flmul+2,?_scale+2
  4411  00100C  C097  F0B0         	movff	?___flmul+3,?_scale+3
  4412  001010  0012               	return	
  4413  001012                     l388:
  4414                           
  4415                           ;doprnt.c: 438: else if(scl > 10)
  4416  001012  0100               	movlb	0	; () banked
  4417  001014  51B5               	movf	scale@scl& (0+255),w,b
  4418  001016  0A80               	xorlw	128
  4419  001018  0F75               	addlw	-139
  4420  00101A  A0D8               	btfss	status,0,c
  4421  00101C  D05D               	goto	l390
  4422                           
  4423                           ; BSR set to: 0
  4424                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  4425  00101E  0E00               	movlw	0
  4426  001020  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  4427  001022  0E0A               	movlw	10
  4428  001024  6F88               	movwf	___awdiv@divisor& (0+255),b
  4429  001026  51B5               	movf	scale@scl& (0+255),w,b
  4430  001028  6F86               	movwf	___awdiv@dividend& (0+255),b
  4431  00102A  6B87               	clrf	(___awdiv@dividend+1)& (0+255),b
  4432  00102C  BF86               	btfsc	___awdiv@dividend& (0+255),7,b
  4433  00102E  0787               	decf	(___awdiv@dividend+1)& (0+255),f,b
  4434  001030  EC55  F018         	call	___awdiv	;wreg free
  4435  001034  0100               	movlb	0	; () banked
  4436  001036  90D8               	bcf	status,0,c
  4437  001038  3786               	rlcf	?___awdiv& (0+255),f,b
  4438  00103A  3787               	rlcf	(?___awdiv+1)& (0+255),f,b
  4439  00103C  90D8               	bcf	status,0,c
  4440  00103E  3786               	rlcf	?___awdiv& (0+255),f,b
  4441  001040  3787               	rlcf	(?___awdiv+1)& (0+255),f,b
  4442  001042  0E24               	movlw	36
  4443  001044  2786               	addwf	?___awdiv& (0+255),f,b
  4444  001046  0E00               	movlw	0
  4445  001048  2387               	addwfc	(?___awdiv+1)& (0+255),f,b
  4446  00104A  0EF7               	movlw	low __powers_
  4447  00104C  2586               	addwf	?___awdiv& (0+255),w,b
  4448  00104E  6EF6               	movwf	tblptrl,c
  4449  001050  0EFE               	movlw	high __powers_
  4450  001052  2187               	addwfc	(?___awdiv+1)& (0+255),w,b
  4451  001054  6EF7               	movwf	tblptrh,c
  4452  001056                     	if	1	;There are 3 active tblptr bytes
  4453  001056  6AF8               	clrf	tblptru,c
  4454  001058  0E00               	movlw	low (__mediumconst shr (0+16))
  4455  00105A  22F8               	addwfc	tblptru,f,c
  4456  00105C                     	endif
  4457  00105C  0009               	tblrd		*+
  4458  00105E  CFF5 F094          	movff	tablat,___flmul@b
  4459  001062  0009               	tblrd		*+
  4460  001064  CFF5 F095          	movff	tablat,___flmul@b+1
  4461  001068  0009               	tblrd		*+
  4462  00106A  CFF5 F096          	movff	tablat,___flmul@b+2
  4463  00106E  000A               	tblrd		*-
  4464  001070  CFF5 F097          	movff	tablat,___flmul@b+3
  4465  001074  0E00               	movlw	0
  4466  001076  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  4467  001078  0E0A               	movlw	10
  4468  00107A  6F82               	movwf	___awmod@divisor& (0+255),b
  4469  00107C  51B5               	movf	scale@scl& (0+255),w,b
  4470  00107E  6F80               	movwf	___awmod@dividend& (0+255),b
  4471  001080  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  4472  001082  BF80               	btfsc	___awmod@dividend& (0+255),7,b
  4473  001084  0781               	decf	(___awmod@dividend+1)& (0+255),f,b
  4474  001086  ECDA  F018         	call	___awmod	;wreg free
  4475  00108A  0100               	movlb	0	; () banked
  4476  00108C  90D8               	bcf	status,0,c
  4477  00108E  3780               	rlcf	?___awmod& (0+255),f,b
  4478  001090  3781               	rlcf	(?___awmod+1)& (0+255),f,b
  4479  001092  90D8               	bcf	status,0,c
  4480  001094  3780               	rlcf	?___awmod& (0+255),f,b
  4481  001096  3781               	rlcf	(?___awmod+1)& (0+255),f,b
  4482  001098  0EF7               	movlw	low __powers_
  4483  00109A  2580               	addwf	?___awmod& (0+255),w,b
  4484  00109C  6EF6               	movwf	tblptrl,c
  4485  00109E  0EFE               	movlw	high __powers_
  4486  0010A0  2181               	addwfc	(?___awmod+1)& (0+255),w,b
  4487  0010A2  6EF7               	movwf	tblptrh,c
  4488  0010A4                     	if	1	;There are 3 active tblptr bytes
  4489  0010A4  6AF8               	clrf	tblptru,c
  4490  0010A6  0E00               	movlw	low (__mediumconst shr (0+16))
  4491  0010A8  22F8               	addwfc	tblptru,f,c
  4492  0010AA                     	endif
  4493  0010AA  0009               	tblrd		*+
  4494  0010AC  CFF5 F098          	movff	tablat,___flmul@a
  4495  0010B0  0009               	tblrd		*+
  4496  0010B2  CFF5 F099          	movff	tablat,___flmul@a+1
  4497  0010B6  0009               	tblrd		*+
  4498  0010B8  CFF5 F09A          	movff	tablat,___flmul@a+2
  4499  0010BC  000A               	tblrd		*-
  4500  0010BE  CFF5 F09B          	movff	tablat,___flmul@a+3
  4501  0010C2  EC85  F008         	call	___flmul	;wreg free
  4502  0010C6  C094  F0AD         	movff	?___flmul,?_scale
  4503  0010CA  C095  F0AE         	movff	?___flmul+1,?_scale+1
  4504  0010CE  C096  F0AF         	movff	?___flmul+2,?_scale+2
  4505  0010D2  C097  F0B0         	movff	?___flmul+3,?_scale+3
  4506  0010D6  0012               	return	
  4507  0010D8                     l390:
  4508                           
  4509                           ;doprnt.c: 440: return _powers_[scl];
  4510  0010D8  0100               	movlb	0	; () banked
  4511  0010DA  51B5               	movf	scale@scl& (0+255),w,b
  4512  0010DC  0D04               	mullw	4
  4513  0010DE  0EF7               	movlw	low __powers_
  4514  0010E0  24F3               	addwf	prodl,w,c
  4515  0010E2  6EF6               	movwf	tblptrl,c
  4516  0010E4  0EFE               	movlw	high __powers_
  4517  0010E6  20F4               	addwfc	prodh,w,c
  4518  0010E8  6EF7               	movwf	tblptrh,c
  4519  0010EA                     	if	1	;There are 3 active tblptr bytes
  4520  0010EA  6AF8               	clrf	tblptru,c
  4521  0010EC  0E00               	movlw	low (__mediumconst shr (0+16))
  4522  0010EE  22F8               	addwfc	tblptru,f,c
  4523  0010F0                     	endif
  4524  0010F0  0009               	tblrd		*+
  4525  0010F2  CFF5 F0AD          	movff	tablat,?_scale
  4526  0010F6  0009               	tblrd		*+
  4527  0010F8  CFF5 F0AE          	movff	tablat,?_scale+1
  4528  0010FC  0009               	tblrd		*+
  4529  0010FE  CFF5 F0AF          	movff	tablat,?_scale+2
  4530  001102  000A               	tblrd		*-
  4531  001104  CFF5 F0B0          	movff	tablat,?_scale+3
  4532  001108  0012               	return	
  4533  00110A                     __end_of_scale:
  4534                           	opt stack 0
  4535                           tblptru	equ	0xFF8
  4536                           tblptrh	equ	0xFF7
  4537                           tblptrl	equ	0xFF6
  4538                           tablat	equ	0xFF5
  4539                           prodh	equ	0xFF4
  4540                           prodl	equ	0xFF3
  4541                           indf0	equ	0xFEF
  4542                           postinc0	equ	0xFEE
  4543                           fsr0h	equ	0xFEA
  4544                           fsr0l	equ	0xFE9
  4545                           wreg	equ	0xFE8
  4546                           postdec1	equ	0xFE5
  4547                           fsr1l	equ	0xFE1
  4548                           indf2	equ	0xFDF
  4549                           postinc2	equ	0xFDE
  4550                           postdec2	equ	0xFDD
  4551                           fsr2h	equ	0xFDA
  4552                           fsr2l	equ	0xFD9
  4553                           status	equ	0xFD8
  4554                           
  4555 ;; *************** function _isdigit *****************
  4556 ;; Defined at:
  4557 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/isdigit.c"
  4558 ;; Parameters:    Size  Location     Type
  4559 ;;  c               1    wreg     unsigned char 
  4560 ;; Auto vars:     Size  Location     Type
  4561 ;;  c               1    2[BANK0 ] unsigned char 
  4562 ;; Return value:  Size  Location     Type
  4563 ;;		None               void
  4564 ;; Registers used:
  4565 ;;		wreg, status,2, status,0
  4566 ;; Tracked objects:
  4567 ;;		On entry : 0/0
  4568 ;;		On exit  : 0/0
  4569 ;;		Unchanged: 0/0
  4570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4572 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4573 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4574 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4575 ;;Total ram usage:        3 bytes
  4576 ;; Hardware stack levels used:    1
  4577 ;; Hardware stack levels required when called:    3
  4578 ;; This function calls:
  4579 ;;		Nothing
  4580 ;; This function is called by:
  4581 ;;		_sprintf
  4582 ;; This function uses a non-reentrant model
  4583 ;;
  4584                           
  4585                           	psect	text4
  4586  003724                     __ptext4:
  4587                           	opt stack 0
  4588  003724                     _isdigit:
  4589                           	opt stack 25
  4590                           
  4591                           ;incstack = 0
  4592                           ;isdigit@c stored from wreg
  4593  003724  0100               	movlb	0	; () banked
  4594  003726  6F82               	movwf	isdigit@c& (0+255),b
  4595  003728  0E00               	movlw	0
  4596  00372A  0100               	movlb	0	; () banked
  4597  00372C  6F81               	movwf	_isdigit$1531& (0+255),b
  4598                           
  4599                           ; BSR set to: 0
  4600  00372E  0E3A               	movlw	58
  4601  003730  6182               	cpfslt	isdigit@c& (0+255),b
  4602  003732  D005               	goto	l857
  4603                           
  4604                           ; BSR set to: 0
  4605  003734  0E2F               	movlw	47
  4606  003736  6582               	cpfsgt	isdigit@c& (0+255),b
  4607  003738  D002               	goto	l857
  4608                           
  4609                           ; BSR set to: 0
  4610  00373A  0E01               	movlw	1
  4611  00373C  6F81               	movwf	_isdigit$1531& (0+255),b
  4612  00373E                     l857:
  4613                           
  4614                           ; BSR set to: 0
  4615                           
  4616                           ; BSR set to: 0
  4617  00373E  C081  F080         	movff	_isdigit$1531,??_isdigit
  4618  003742  3180               	rrcf	??_isdigit& (0+255),w,b
  4619  003744  0012               	return	
  4620  003746                     __end_of_isdigit:
  4621                           	opt stack 0
  4622                           tblptru	equ	0xFF8
  4623                           tblptrh	equ	0xFF7
  4624                           tblptrl	equ	0xFF6
  4625                           tablat	equ	0xFF5
  4626                           prodh	equ	0xFF4
  4627                           prodl	equ	0xFF3
  4628                           indf0	equ	0xFEF
  4629                           postinc0	equ	0xFEE
  4630                           fsr0h	equ	0xFEA
  4631                           fsr0l	equ	0xFE9
  4632                           wreg	equ	0xFE8
  4633                           postdec1	equ	0xFE5
  4634                           fsr1l	equ	0xFE1
  4635                           indf2	equ	0xFDF
  4636                           postinc2	equ	0xFDE
  4637                           postdec2	equ	0xFDD
  4638                           fsr2h	equ	0xFDA
  4639                           fsr2l	equ	0xFD9
  4640                           status	equ	0xFD8
  4641                           
  4642 ;; *************** function _fround *****************
  4643 ;; Defined at:
  4644 ;;		line 409 in file "/opt/microchip/xc8/v1.45/sources/common/doprnt.c"
  4645 ;; Parameters:    Size  Location     Type
  4646 ;;  prec            1    wreg     unsigned char 
  4647 ;; Auto vars:     Size  Location     Type
  4648 ;;  prec            1   57[BANK0 ] unsigned char 
  4649 ;; Return value:  Size  Location     Type
  4650 ;;                  4   45[BANK0 ] unsigned char 
  4651 ;; Registers used:
  4652 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4653 ;; Tracked objects:
  4654 ;;		On entry : 0/0
  4655 ;;		On exit  : 0/0
  4656 ;;		Unchanged: 0/0
  4657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4658 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4659 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4661 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4662 ;;Total ram usage:       13 bytes
  4663 ;; Hardware stack levels used:    1
  4664 ;; Hardware stack levels required when called:    4
  4665 ;; This function calls:
  4666 ;;		___awdiv
  4667 ;;		___awmod
  4668 ;;		___flmul
  4669 ;; This function is called by:
  4670 ;;		_sprintf
  4671 ;; This function uses a non-reentrant model
  4672 ;;
  4673                           
  4674                           	psect	text5
  4675  001DF4                     __ptext5:
  4676                           	opt stack 0
  4677  001DF4                     _fround:
  4678                           	opt stack 24
  4679                           
  4680                           ; BSR set to: 0
  4681                           ;incstack = 0
  4682                           ;fround@prec stored from wreg
  4683  001DF4  0100               	movlb	0	; () banked
  4684  001DF6  6FB9               	movwf	fround@prec& (0+255),b
  4685                           
  4686                           ;doprnt.c: 413: if(prec>=110)
  4687  001DF8  0E6D               	movlw	109
  4688  001DFA  0100               	movlb	0	; () banked
  4689  001DFC  65B9               	cpfsgt	fround@prec& (0+255),b
  4690  001DFE  D0BA               	goto	l377
  4691                           
  4692                           ; BSR set to: 0
  4693                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4694  001E00  0E00               	movlw	0
  4695  001E02  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  4696  001E04  0E0A               	movlw	10
  4697  001E06  6F88               	movwf	___awdiv@divisor& (0+255),b
  4698  001E08  0E00               	movlw	0
  4699  001E0A  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  4700  001E0C  0E64               	movlw	100
  4701  001E0E  6F82               	movwf	___awmod@divisor& (0+255),b
  4702  001E10  C0B9  F080         	movff	fround@prec,___awmod@dividend
  4703  001E14  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  4704  001E16  ECDA  F018         	call	___awmod	;wreg free
  4705  001E1A  C080  F086         	movff	?___awmod,___awdiv@dividend
  4706  001E1E  C081  F087         	movff	?___awmod+1,___awdiv@dividend+1
  4707  001E22  EC55  F018         	call	___awdiv	;wreg free
  4708  001E26  0100               	movlb	0	; () banked
  4709  001E28  90D8               	bcf	status,0,c
  4710  001E2A  3786               	rlcf	?___awdiv& (0+255),f,b
  4711  001E2C  3787               	rlcf	(?___awdiv+1)& (0+255),f,b
  4712  001E2E  90D8               	bcf	status,0,c
  4713  001E30  3786               	rlcf	?___awdiv& (0+255),f,b
  4714  001E32  3787               	rlcf	(?___awdiv+1)& (0+255),f,b
  4715  001E34  0E24               	movlw	36
  4716  001E36  2786               	addwf	?___awdiv& (0+255),f,b
  4717  001E38  0E00               	movlw	0
  4718  001E3A  2387               	addwfc	(?___awdiv+1)& (0+255),f,b
  4719  001E3C  0E2B               	movlw	low __npowers_
  4720  001E3E  2586               	addwf	?___awdiv& (0+255),w,b
  4721  001E40  6EF6               	movwf	tblptrl,c
  4722  001E42  0EFF               	movlw	high __npowers_
  4723  001E44  2187               	addwfc	(?___awdiv+1)& (0+255),w,b
  4724  001E46  6EF7               	movwf	tblptrh,c
  4725  001E48                     	if	1	;There are 3 active tblptr bytes
  4726  001E48  6AF8               	clrf	tblptru,c
  4727  001E4A  0E00               	movlw	low (__mediumconst shr (0+16))
  4728  001E4C  22F8               	addwfc	tblptru,f,c
  4729  001E4E                     	endif
  4730  001E4E  0009               	tblrd		*+
  4731  001E50  CFF5 F098          	movff	tablat,___flmul@a
  4732  001E54  0009               	tblrd		*+
  4733  001E56  CFF5 F099          	movff	tablat,___flmul@a+1
  4734  001E5A  0009               	tblrd		*+
  4735  001E5C  CFF5 F09A          	movff	tablat,___flmul@a+2
  4736  001E60  000A               	tblrd		*-
  4737  001E62  CFF5 F09B          	movff	tablat,___flmul@a+3
  4738  001E66  0E00               	movlw	0
  4739  001E68  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  4740  001E6A  0E64               	movlw	100
  4741  001E6C  6F88               	movwf	___awdiv@divisor& (0+255),b
  4742  001E6E  C0B9  F086         	movff	fround@prec,___awdiv@dividend
  4743  001E72  6B87               	clrf	(___awdiv@dividend+1)& (0+255),b
  4744  001E74  EC55  F018         	call	___awdiv	;wreg free
  4745  001E78  0100               	movlb	0	; () banked
  4746  001E7A  90D8               	bcf	status,0,c
  4747  001E7C  3786               	rlcf	?___awdiv& (0+255),f,b
  4748  001E7E  3787               	rlcf	(?___awdiv+1)& (0+255),f,b
  4749  001E80  90D8               	bcf	status,0,c
  4750  001E82  3786               	rlcf	?___awdiv& (0+255),f,b
  4751  001E84  3787               	rlcf	(?___awdiv+1)& (0+255),f,b
  4752  001E86  0E48               	movlw	72
  4753  001E88  2786               	addwf	?___awdiv& (0+255),f,b
  4754  001E8A  0E00               	movlw	0
  4755  001E8C  2387               	addwfc	(?___awdiv+1)& (0+255),f,b
  4756  001E8E  0E2B               	movlw	low __npowers_
  4757  001E90  2586               	addwf	?___awdiv& (0+255),w,b
  4758  001E92  6EF6               	movwf	tblptrl,c
  4759  001E94  0EFF               	movlw	high __npowers_
  4760  001E96  2187               	addwfc	(?___awdiv+1)& (0+255),w,b
  4761  001E98  6EF7               	movwf	tblptrh,c
  4762  001E9A                     	if	1	;There are 3 active tblptr bytes
  4763  001E9A  6AF8               	clrf	tblptru,c
  4764  001E9C  0E00               	movlw	low (__mediumconst shr (0+16))
  4765  001E9E  22F8               	addwfc	tblptru,f,c
  4766  001EA0                     	endif
  4767  001EA0  0009               	tblrd		*+
  4768  001EA2  CFF5 F094          	movff	tablat,___flmul@b
  4769  001EA6  0009               	tblrd		*+
  4770  001EA8  CFF5 F095          	movff	tablat,___flmul@b+1
  4771  001EAC  0009               	tblrd		*+
  4772  001EAE  CFF5 F096          	movff	tablat,___flmul@b+2
  4773  001EB2  000A               	tblrd		*-
  4774  001EB4  CFF5 F097          	movff	tablat,___flmul@b+3
  4775  001EB8  EC85  F008         	call	___flmul	;wreg free
  4776  001EBC  C094  F0B5         	movff	?___flmul,_fround$1898
  4777  001EC0  C095  F0B6         	movff	?___flmul+1,_fround$1898+1
  4778  001EC4  C096  F0B7         	movff	?___flmul+2,_fround$1898+2
  4779  001EC8  C097  F0B8         	movff	?___flmul+3,_fround$1898+3
  4780                           
  4781                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4782  001ECC  0E00               	movlw	0
  4783  001ECE  0100               	movlb	0	; () banked
  4784  001ED0  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  4785  001ED2  0E0A               	movlw	10
  4786  001ED4  6F82               	movwf	___awmod@divisor& (0+255),b
  4787  001ED6  C0B9  F080         	movff	fround@prec,___awmod@dividend
  4788  001EDA  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  4789  001EDC  ECDA  F018         	call	___awmod	;wreg free
  4790  001EE0  0100               	movlb	0	; () banked
  4791  001EE2  90D8               	bcf	status,0,c
  4792  001EE4  3780               	rlcf	?___awmod& (0+255),f,b
  4793  001EE6  3781               	rlcf	(?___awmod+1)& (0+255),f,b
  4794  001EE8  90D8               	bcf	status,0,c
  4795  001EEA  3780               	rlcf	?___awmod& (0+255),f,b
  4796  001EEC  3781               	rlcf	(?___awmod+1)& (0+255),f,b
  4797  001EEE  0E2B               	movlw	low __npowers_
  4798  001EF0  2580               	addwf	?___awmod& (0+255),w,b
  4799  001EF2  6EF6               	movwf	tblptrl,c
  4800  001EF4  0EFF               	movlw	high __npowers_
  4801  001EF6  2181               	addwfc	(?___awmod+1)& (0+255),w,b
  4802  001EF8  6EF7               	movwf	tblptrh,c
  4803  001EFA                     	if	1	;There are 3 active tblptr bytes
  4804  001EFA  6AF8               	clrf	tblptru,c
  4805  001EFC  0E00               	movlw	low (__mediumconst shr (0+16))
  4806  001EFE  22F8               	addwfc	tblptru,f,c
  4807  001F00                     	endif
  4808  001F00  0009               	tblrd		*+
  4809  001F02  CFF5 F098          	movff	tablat,___flmul@a
  4810  001F06  0009               	tblrd		*+
  4811  001F08  CFF5 F099          	movff	tablat,___flmul@a+1
  4812  001F0C  0009               	tblrd		*+
  4813  001F0E  CFF5 F09A          	movff	tablat,___flmul@a+2
  4814  001F12  000A               	tblrd		*-
  4815  001F14  CFF5 F09B          	movff	tablat,___flmul@a+3
  4816  001F18  C0B5  F094         	movff	_fround$1898,___flmul@b
  4817  001F1C  C0B6  F095         	movff	_fround$1898+1,___flmul@b+1
  4818  001F20  C0B7  F096         	movff	_fround$1898+2,___flmul@b+2
  4819  001F24  C0B8  F097         	movff	_fround$1898+3,___flmul@b+3
  4820  001F28  EC85  F008         	call	___flmul	;wreg free
  4821  001F2C  C094  F0B1         	movff	?___flmul,_fround$1899
  4822  001F30  C095  F0B2         	movff	?___flmul+1,_fround$1899+1
  4823  001F34  C096  F0B3         	movff	?___flmul+2,_fround$1899+2
  4824  001F38  C097  F0B4         	movff	?___flmul+3,_fround$1899+3
  4825                           
  4826                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4827  001F3C  C0B1  F094         	movff	_fround$1899,___flmul@b
  4828  001F40  C0B2  F095         	movff	_fround$1899+1,___flmul@b+1
  4829  001F44  C0B3  F096         	movff	_fround$1899+2,___flmul@b+2
  4830  001F48  C0B4  F097         	movff	_fround$1899+3,___flmul@b+3
  4831  001F4C  0E00               	movlw	0
  4832  001F4E  0100               	movlb	0	; () banked
  4833  001F50  6F98               	movwf	___flmul@a& (0+255),b
  4834  001F52  0E00               	movlw	0
  4835  001F54  6F99               	movwf	(___flmul@a+1)& (0+255),b
  4836  001F56  0E00               	movlw	0
  4837  001F58  6F9A               	movwf	(___flmul@a+2)& (0+255),b
  4838  001F5A  0E3F               	movlw	63
  4839  001F5C  6F9B               	movwf	(___flmul@a+3)& (0+255),b
  4840  001F5E  EC85  F008         	call	___flmul	;wreg free
  4841  001F62  C094  F0AD         	movff	?___flmul,?_fround
  4842  001F66  C095  F0AE         	movff	?___flmul+1,?_fround+1
  4843  001F6A  C096  F0AF         	movff	?___flmul+2,?_fround+2
  4844  001F6E  C097  F0B0         	movff	?___flmul+3,?_fround+3
  4845  001F72  0012               	return	
  4846  001F74                     l377:
  4847                           
  4848                           ;doprnt.c: 415: else if(prec > 10)
  4849  001F74  0E0A               	movlw	10
  4850  001F76  0100               	movlb	0	; () banked
  4851  001F78  65B9               	cpfsgt	fround@prec& (0+255),b
  4852  001F7A  D074               	goto	l380
  4853                           
  4854                           ; BSR set to: 0
  4855                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  4856  001F7C  0E00               	movlw	0
  4857  001F7E  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  4858  001F80  0E0A               	movlw	10
  4859  001F82  6F82               	movwf	___awmod@divisor& (0+255),b
  4860  001F84  C0B9  F080         	movff	fround@prec,___awmod@dividend
  4861  001F88  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  4862  001F8A  ECDA  F018         	call	___awmod	;wreg free
  4863  001F8E  0100               	movlb	0	; () banked
  4864  001F90  90D8               	bcf	status,0,c
  4865  001F92  3780               	rlcf	?___awmod& (0+255),f,b
  4866  001F94  3781               	rlcf	(?___awmod+1)& (0+255),f,b
  4867  001F96  90D8               	bcf	status,0,c
  4868  001F98  3780               	rlcf	?___awmod& (0+255),f,b
  4869  001F9A  3781               	rlcf	(?___awmod+1)& (0+255),f,b
  4870  001F9C  0E2B               	movlw	low __npowers_
  4871  001F9E  2580               	addwf	?___awmod& (0+255),w,b
  4872  001FA0  6EF6               	movwf	tblptrl,c
  4873  001FA2  0EFF               	movlw	high __npowers_
  4874  001FA4  2181               	addwfc	(?___awmod+1)& (0+255),w,b
  4875  001FA6  6EF7               	movwf	tblptrh,c
  4876  001FA8                     	if	1	;There are 3 active tblptr bytes
  4877  001FA8  6AF8               	clrf	tblptru,c
  4878  001FAA  0E00               	movlw	low (__mediumconst shr (0+16))
  4879  001FAC  22F8               	addwfc	tblptru,f,c
  4880  001FAE                     	endif
  4881  001FAE  0009               	tblrd		*+
  4882  001FB0  CFF5 F098          	movff	tablat,___flmul@a
  4883  001FB4  0009               	tblrd		*+
  4884  001FB6  CFF5 F099          	movff	tablat,___flmul@a+1
  4885  001FBA  0009               	tblrd		*+
  4886  001FBC  CFF5 F09A          	movff	tablat,___flmul@a+2
  4887  001FC0  000A               	tblrd		*-
  4888  001FC2  CFF5 F09B          	movff	tablat,___flmul@a+3
  4889  001FC6  0E00               	movlw	0
  4890  001FC8  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  4891  001FCA  0E0A               	movlw	10
  4892  001FCC  6F88               	movwf	___awdiv@divisor& (0+255),b
  4893  001FCE  C0B9  F086         	movff	fround@prec,___awdiv@dividend
  4894  001FD2  6B87               	clrf	(___awdiv@dividend+1)& (0+255),b
  4895  001FD4  EC55  F018         	call	___awdiv	;wreg free
  4896  001FD8  0100               	movlb	0	; () banked
  4897  001FDA  90D8               	bcf	status,0,c
  4898  001FDC  3786               	rlcf	?___awdiv& (0+255),f,b
  4899  001FDE  3787               	rlcf	(?___awdiv+1)& (0+255),f,b
  4900  001FE0  90D8               	bcf	status,0,c
  4901  001FE2  3786               	rlcf	?___awdiv& (0+255),f,b
  4902  001FE4  3787               	rlcf	(?___awdiv+1)& (0+255),f,b
  4903  001FE6  0E24               	movlw	36
  4904  001FE8  2786               	addwf	?___awdiv& (0+255),f,b
  4905  001FEA  0E00               	movlw	0
  4906  001FEC  2387               	addwfc	(?___awdiv+1)& (0+255),f,b
  4907  001FEE  0E2B               	movlw	low __npowers_
  4908  001FF0  2586               	addwf	?___awdiv& (0+255),w,b
  4909  001FF2  6EF6               	movwf	tblptrl,c
  4910  001FF4  0EFF               	movlw	high __npowers_
  4911  001FF6  2187               	addwfc	(?___awdiv+1)& (0+255),w,b
  4912  001FF8  6EF7               	movwf	tblptrh,c
  4913  001FFA                     	if	1	;There are 3 active tblptr bytes
  4914  001FFA  6AF8               	clrf	tblptru,c
  4915  001FFC  0E00               	movlw	low (__mediumconst shr (0+16))
  4916  001FFE  22F8               	addwfc	tblptru,f,c
  4917  002000                     	endif
  4918  002000  0009               	tblrd		*+
  4919  002002  CFF5 F094          	movff	tablat,___flmul@b
  4920  002006  0009               	tblrd		*+
  4921  002008  CFF5 F095          	movff	tablat,___flmul@b+1
  4922  00200C  0009               	tblrd		*+
  4923  00200E  CFF5 F096          	movff	tablat,___flmul@b+2
  4924  002012  000A               	tblrd		*-
  4925  002014  CFF5 F097          	movff	tablat,___flmul@b+3
  4926  002018  EC85  F008         	call	___flmul	;wreg free
  4927  00201C  C094  F0B5         	movff	?___flmul,_fround$1898
  4928  002020  C095  F0B6         	movff	?___flmul+1,_fround$1898+1
  4929  002024  C096  F0B7         	movff	?___flmul+2,_fround$1898+2
  4930  002028  C097  F0B8         	movff	?___flmul+3,_fround$1898+3
  4931                           
  4932                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  4933  00202C  C0B5  F094         	movff	_fround$1898,___flmul@b
  4934  002030  C0B6  F095         	movff	_fround$1898+1,___flmul@b+1
  4935  002034  C0B7  F096         	movff	_fround$1898+2,___flmul@b+2
  4936  002038  C0B8  F097         	movff	_fround$1898+3,___flmul@b+3
  4937  00203C  0E00               	movlw	0
  4938  00203E  0100               	movlb	0	; () banked
  4939  002040  6F98               	movwf	___flmul@a& (0+255),b
  4940  002042  0E00               	movlw	0
  4941  002044  6F99               	movwf	(___flmul@a+1)& (0+255),b
  4942  002046  0E00               	movlw	0
  4943  002048  6F9A               	movwf	(___flmul@a+2)& (0+255),b
  4944  00204A  0E3F               	movlw	63
  4945  00204C  6F9B               	movwf	(___flmul@a+3)& (0+255),b
  4946  00204E  EC85  F008         	call	___flmul	;wreg free
  4947  002052  C094  F0AD         	movff	?___flmul,?_fround
  4948  002056  C095  F0AE         	movff	?___flmul+1,?_fround+1
  4949  00205A  C096  F0AF         	movff	?___flmul+2,?_fround+2
  4950  00205E  C097  F0B0         	movff	?___flmul+3,?_fround+3
  4951  002062  0012               	return	
  4952  002064                     l380:
  4953                           
  4954                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  4955  002064  0100               	movlb	0	; () banked
  4956  002066  51B9               	movf	fround@prec& (0+255),w,b
  4957  002068  0D04               	mullw	4
  4958  00206A  0E2B               	movlw	low __npowers_
  4959  00206C  24F3               	addwf	prodl,w,c
  4960  00206E  6EF6               	movwf	tblptrl,c
  4961  002070  0EFF               	movlw	high __npowers_
  4962  002072  20F4               	addwfc	prodh,w,c
  4963  002074  6EF7               	movwf	tblptrh,c
  4964  002076                     	if	1	;There are 3 active tblptr bytes
  4965  002076  6AF8               	clrf	tblptru,c
  4966  002078  0E00               	movlw	low (__mediumconst shr (0+16))
  4967  00207A  22F8               	addwfc	tblptru,f,c
  4968  00207C                     	endif
  4969  00207C  0009               	tblrd		*+
  4970  00207E  CFF5 F094          	movff	tablat,___flmul@b
  4971  002082  0009               	tblrd		*+
  4972  002084  CFF5 F095          	movff	tablat,___flmul@b+1
  4973  002088  0009               	tblrd		*+
  4974  00208A  CFF5 F096          	movff	tablat,___flmul@b+2
  4975  00208E  000A               	tblrd		*-
  4976  002090  CFF5 F097          	movff	tablat,___flmul@b+3
  4977  002094  0E00               	movlw	0
  4978  002096  6F98               	movwf	___flmul@a& (0+255),b
  4979  002098  0E00               	movlw	0
  4980  00209A  6F99               	movwf	(___flmul@a+1)& (0+255),b
  4981  00209C  0E00               	movlw	0
  4982  00209E  6F9A               	movwf	(___flmul@a+2)& (0+255),b
  4983  0020A0  0E3F               	movlw	63
  4984  0020A2  6F9B               	movwf	(___flmul@a+3)& (0+255),b
  4985  0020A4  EC85  F008         	call	___flmul	;wreg free
  4986  0020A8  C094  F0AD         	movff	?___flmul,?_fround
  4987  0020AC  C095  F0AE         	movff	?___flmul+1,?_fround+1
  4988  0020B0  C096  F0AF         	movff	?___flmul+2,?_fround+2
  4989  0020B4  C097  F0B0         	movff	?___flmul+3,?_fround+3
  4990  0020B8  0012               	return	
  4991  0020BA                     __end_of_fround:
  4992                           	opt stack 0
  4993                           tblptru	equ	0xFF8
  4994                           tblptrh	equ	0xFF7
  4995                           tblptrl	equ	0xFF6
  4996                           tablat	equ	0xFF5
  4997                           prodh	equ	0xFF4
  4998                           prodl	equ	0xFF3
  4999                           indf0	equ	0xFEF
  5000                           postinc0	equ	0xFEE
  5001                           fsr0h	equ	0xFEA
  5002                           fsr0l	equ	0xFE9
  5003                           wreg	equ	0xFE8
  5004                           postdec1	equ	0xFE5
  5005                           fsr1l	equ	0xFE1
  5006                           indf2	equ	0xFDF
  5007                           postinc2	equ	0xFDE
  5008                           postdec2	equ	0xFDD
  5009                           fsr2h	equ	0xFDA
  5010                           fsr2l	equ	0xFD9
  5011                           status	equ	0xFD8
  5012                           
  5013 ;; *************** function ___awmod *****************
  5014 ;; Defined at:
  5015 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awmod.c"
  5016 ;; Parameters:    Size  Location     Type
  5017 ;;  dividend        2    0[BANK0 ] int 
  5018 ;;  divisor         2    2[BANK0 ] int 
  5019 ;; Auto vars:     Size  Location     Type
  5020 ;;  sign            1    5[BANK0 ] unsigned char 
  5021 ;;  counter         1    4[BANK0 ] unsigned char 
  5022 ;; Return value:  Size  Location     Type
  5023 ;;                  2    0[BANK0 ] int 
  5024 ;; Registers used:
  5025 ;;		wreg, status,2, status,0
  5026 ;; Tracked objects:
  5027 ;;		On entry : 0/0
  5028 ;;		On exit  : 0/0
  5029 ;;		Unchanged: 0/0
  5030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5031 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5032 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5034 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5035 ;;Total ram usage:        6 bytes
  5036 ;; Hardware stack levels used:    1
  5037 ;; Hardware stack levels required when called:    3
  5038 ;; This function calls:
  5039 ;;		Nothing
  5040 ;; This function is called by:
  5041 ;;		_fround
  5042 ;;		_scale
  5043 ;; This function uses a non-reentrant model
  5044 ;;
  5045                           
  5046                           	psect	text6
  5047  0031B4                     __ptext6:
  5048                           	opt stack 0
  5049  0031B4                     ___awmod:
  5050                           	opt stack 24
  5051                           
  5052                           ;incstack = 0
  5053  0031B4  0E00               	movlw	0
  5054  0031B6  0100               	movlb	0	; () banked
  5055  0031B8  6F85               	movwf	___awmod@sign& (0+255),b
  5056                           
  5057                           ; BSR set to: 0
  5058  0031BA  AF81               	btfss	(___awmod@dividend+1)& (0+255),7,b
  5059  0031BC  D006               	goto	l674
  5060                           
  5061                           ; BSR set to: 0
  5062  0031BE  6D80               	negf	___awmod@dividend& (0+255),b
  5063  0031C0  1F81               	comf	(___awmod@dividend+1)& (0+255),f,b
  5064  0031C2  B0D8               	btfsc	status,0,c
  5065  0031C4  2B81               	incf	(___awmod@dividend+1)& (0+255),f,b
  5066                           
  5067                           ; BSR set to: 0
  5068  0031C6  0E01               	movlw	1
  5069  0031C8  6F85               	movwf	___awmod@sign& (0+255),b
  5070  0031CA                     l674:
  5071                           
  5072                           ; BSR set to: 0
  5073                           
  5074                           ; BSR set to: 0
  5075  0031CA  AF83               	btfss	(___awmod@divisor+1)& (0+255),7,b
  5076  0031CC  D004               	goto	l675
  5077                           
  5078                           ; BSR set to: 0
  5079  0031CE  6D82               	negf	___awmod@divisor& (0+255),b
  5080  0031D0  1F83               	comf	(___awmod@divisor+1)& (0+255),f,b
  5081  0031D2  B0D8               	btfsc	status,0,c
  5082  0031D4  2B83               	incf	(___awmod@divisor+1)& (0+255),f,b
  5083  0031D6                     l675:
  5084                           
  5085                           ; BSR set to: 0
  5086                           
  5087                           ; BSR set to: 0
  5088  0031D6  5182               	movf	___awmod@divisor& (0+255),w,b
  5089  0031D8  1183               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  5090  0031DA  B4D8               	btfsc	status,2,c
  5091  0031DC  D018               	goto	l682
  5092                           
  5093                           ; BSR set to: 0
  5094  0031DE  0E01               	movlw	1
  5095  0031E0  6F84               	movwf	___awmod@counter& (0+255),b
  5096  0031E2  D004               	goto	l677
  5097  0031E4                     
  5098                           ; BSR set to: 0
  5099                           
  5100                           ; BSR set to: 0
  5101  0031E4  90D8               	bcf	status,0,c
  5102  0031E6  3782               	rlcf	___awmod@divisor& (0+255),f,b
  5103  0031E8  3783               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  5104  0031EA  2B84               	incf	___awmod@counter& (0+255),f,b
  5105  0031EC                     l677:
  5106                           
  5107                           ; BSR set to: 0
  5108                           
  5109                           ; BSR set to: 0
  5110  0031EC  AF83               	btfss	(___awmod@divisor+1)& (0+255),7,b
  5111  0031EE  D7FA               	goto	l678
  5112  0031F0                     u3670:
  5113                           
  5114                           ; BSR set to: 0
  5115                           
  5116                           ; BSR set to: 0
  5117                           
  5118                           ; BSR set to: 0
  5119  0031F0  5182               	movf	___awmod@divisor& (0+255),w,b
  5120  0031F2  5D80               	subwf	___awmod@dividend& (0+255),w,b
  5121  0031F4  5183               	movf	(___awmod@divisor+1)& (0+255),w,b
  5122  0031F6  5981               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  5123  0031F8  A0D8               	btfss	status,0,c
  5124  0031FA  D004               	goto	l681
  5125                           
  5126                           ; BSR set to: 0
  5127  0031FC  5182               	movf	___awmod@divisor& (0+255),w,b
  5128  0031FE  5F80               	subwf	___awmod@dividend& (0+255),f,b
  5129  003200  5183               	movf	(___awmod@divisor+1)& (0+255),w,b
  5130  003202  5B81               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  5131  003204                     l681:
  5132                           
  5133                           ; BSR set to: 0
  5134                           
  5135                           ; BSR set to: 0
  5136  003204  90D8               	bcf	status,0,c
  5137  003206  3383               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  5138  003208  3382               	rrcf	___awmod@divisor& (0+255),f,b
  5139                           
  5140                           ; BSR set to: 0
  5141  00320A  2F84               	decfsz	___awmod@counter& (0+255),f,b
  5142  00320C  D7F1               	goto	u3670
  5143  00320E                     l682:
  5144                           
  5145                           ; BSR set to: 0
  5146                           
  5147                           ; BSR set to: 0
  5148                           
  5149                           ; BSR set to: 0
  5150  00320E  5185               	movf	___awmod@sign& (0+255),w,b
  5151  003210  B4D8               	btfsc	status,2,c
  5152  003212  D004               	goto	l683
  5153                           
  5154                           ; BSR set to: 0
  5155  003214  6D80               	negf	___awmod@dividend& (0+255),b
  5156  003216  1F81               	comf	(___awmod@dividend+1)& (0+255),f,b
  5157  003218  B0D8               	btfsc	status,0,c
  5158  00321A  2B81               	incf	(___awmod@dividend+1)& (0+255),f,b
  5159  00321C                     l683:
  5160                           
  5161                           ; BSR set to: 0
  5162                           
  5163                           ; BSR set to: 0
  5164  00321C  C080  F080         	movff	___awmod@dividend,?___awmod
  5165  003220  C081  F081         	movff	___awmod@dividend+1,?___awmod+1
  5166  003224  0012               	return	
  5167  003226                     __end_of___awmod:
  5168                           	opt stack 0
  5169                           tblptru	equ	0xFF8
  5170                           tblptrh	equ	0xFF7
  5171                           tblptrl	equ	0xFF6
  5172                           tablat	equ	0xFF5
  5173                           prodh	equ	0xFF4
  5174                           prodl	equ	0xFF3
  5175                           indf0	equ	0xFEF
  5176                           postinc0	equ	0xFEE
  5177                           fsr0h	equ	0xFEA
  5178                           fsr0l	equ	0xFE9
  5179                           wreg	equ	0xFE8
  5180                           postdec1	equ	0xFE5
  5181                           fsr1l	equ	0xFE1
  5182                           indf2	equ	0xFDF
  5183                           postinc2	equ	0xFDE
  5184                           postdec2	equ	0xFDD
  5185                           fsr2h	equ	0xFDA
  5186                           fsr2l	equ	0xFD9
  5187                           status	equ	0xFD8
  5188                           
  5189 ;; *************** function ___awdiv *****************
  5190 ;; Defined at:
  5191 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/awdiv.c"
  5192 ;; Parameters:    Size  Location     Type
  5193 ;;  dividend        2    6[BANK0 ] int 
  5194 ;;  divisor         2    8[BANK0 ] int 
  5195 ;; Auto vars:     Size  Location     Type
  5196 ;;  quotient        2   12[BANK0 ] int 
  5197 ;;  sign            1   11[BANK0 ] unsigned char 
  5198 ;;  counter         1   10[BANK0 ] unsigned char 
  5199 ;; Return value:  Size  Location     Type
  5200 ;;                  2    6[BANK0 ] int 
  5201 ;; Registers used:
  5202 ;;		wreg, status,2, status,0
  5203 ;; Tracked objects:
  5204 ;;		On entry : 0/0
  5205 ;;		On exit  : 0/0
  5206 ;;		Unchanged: 0/0
  5207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5208 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5209 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5211 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5212 ;;Total ram usage:        8 bytes
  5213 ;; Hardware stack levels used:    1
  5214 ;; Hardware stack levels required when called:    3
  5215 ;; This function calls:
  5216 ;;		Nothing
  5217 ;; This function is called by:
  5218 ;;		_fround
  5219 ;;		_scale
  5220 ;;		_sprintf
  5221 ;; This function uses a non-reentrant model
  5222 ;;
  5223                           
  5224                           	psect	text7
  5225  0030AA                     __ptext7:
  5226                           	opt stack 0
  5227  0030AA                     ___awdiv:
  5228                           	opt stack 24
  5229                           
  5230                           ; BSR set to: 0
  5231                           ;incstack = 0
  5232  0030AA  0E00               	movlw	0
  5233  0030AC  0100               	movlb	0	; () banked
  5234  0030AE  6F8B               	movwf	___awdiv@sign& (0+255),b
  5235                           
  5236                           ; BSR set to: 0
  5237  0030B0  AF89               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  5238  0030B2  D006               	goto	l661
  5239                           
  5240                           ; BSR set to: 0
  5241  0030B4  6D88               	negf	___awdiv@divisor& (0+255),b
  5242  0030B6  1F89               	comf	(___awdiv@divisor+1)& (0+255),f,b
  5243  0030B8  B0D8               	btfsc	status,0,c
  5244  0030BA  2B89               	incf	(___awdiv@divisor+1)& (0+255),f,b
  5245                           
  5246                           ; BSR set to: 0
  5247  0030BC  0E01               	movlw	1
  5248  0030BE  6F8B               	movwf	___awdiv@sign& (0+255),b
  5249  0030C0                     l661:
  5250                           
  5251                           ; BSR set to: 0
  5252                           
  5253                           ; BSR set to: 0
  5254  0030C0  AF87               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  5255  0030C2  D006               	goto	l662
  5256                           
  5257                           ; BSR set to: 0
  5258  0030C4  6D86               	negf	___awdiv@dividend& (0+255),b
  5259  0030C6  1F87               	comf	(___awdiv@dividend+1)& (0+255),f,b
  5260  0030C8  B0D8               	btfsc	status,0,c
  5261  0030CA  2B87               	incf	(___awdiv@dividend+1)& (0+255),f,b
  5262                           
  5263                           ; BSR set to: 0
  5264  0030CC  0E01               	movlw	1
  5265  0030CE  1B8B               	xorwf	___awdiv@sign& (0+255),f,b
  5266  0030D0                     l662:
  5267                           
  5268                           ; BSR set to: 0
  5269                           
  5270                           ; BSR set to: 0
  5271  0030D0  0E00               	movlw	0
  5272  0030D2  6F8D               	movwf	(___awdiv@quotient+1)& (0+255),b
  5273  0030D4  0E00               	movlw	0
  5274  0030D6  6F8C               	movwf	___awdiv@quotient& (0+255),b
  5275                           
  5276                           ; BSR set to: 0
  5277  0030D8  5188               	movf	___awdiv@divisor& (0+255),w,b
  5278  0030DA  1189               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  5279  0030DC  B4D8               	btfsc	status,2,c
  5280  0030DE  D01C               	goto	l669
  5281                           
  5282                           ; BSR set to: 0
  5283  0030E0  0E01               	movlw	1
  5284  0030E2  6F8A               	movwf	___awdiv@counter& (0+255),b
  5285  0030E4  D004               	goto	l664
  5286  0030E6                     
  5287                           ; BSR set to: 0
  5288                           
  5289                           ; BSR set to: 0
  5290  0030E6  90D8               	bcf	status,0,c
  5291  0030E8  3788               	rlcf	___awdiv@divisor& (0+255),f,b
  5292  0030EA  3789               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  5293  0030EC  2B8A               	incf	___awdiv@counter& (0+255),f,b
  5294  0030EE                     l664:
  5295                           
  5296                           ; BSR set to: 0
  5297                           
  5298                           ; BSR set to: 0
  5299  0030EE  AF89               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  5300  0030F0  D7FA               	goto	l665
  5301  0030F2                     u3610:
  5302                           
  5303                           ; BSR set to: 0
  5304                           
  5305                           ; BSR set to: 0
  5306                           
  5307                           ; BSR set to: 0
  5308  0030F2  90D8               	bcf	status,0,c
  5309  0030F4  378C               	rlcf	___awdiv@quotient& (0+255),f,b
  5310  0030F6  378D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  5311                           
  5312                           ; BSR set to: 0
  5313  0030F8  5188               	movf	___awdiv@divisor& (0+255),w,b
  5314  0030FA  5D86               	subwf	___awdiv@dividend& (0+255),w,b
  5315  0030FC  5189               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5316  0030FE  5987               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  5317  003100  A0D8               	btfss	status,0,c
  5318  003102  D005               	goto	l668
  5319                           
  5320                           ; BSR set to: 0
  5321  003104  5188               	movf	___awdiv@divisor& (0+255),w,b
  5322  003106  5F86               	subwf	___awdiv@dividend& (0+255),f,b
  5323  003108  5189               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5324  00310A  5B87               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  5325                           
  5326                           ; BSR set to: 0
  5327  00310C  818C               	bsf	___awdiv@quotient& (0+255),0,b
  5328  00310E                     l668:
  5329                           
  5330                           ; BSR set to: 0
  5331                           
  5332                           ; BSR set to: 0
  5333  00310E  90D8               	bcf	status,0,c
  5334  003110  3389               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  5335  003112  3388               	rrcf	___awdiv@divisor& (0+255),f,b
  5336                           
  5337                           ; BSR set to: 0
  5338  003114  2F8A               	decfsz	___awdiv@counter& (0+255),f,b
  5339  003116  D7ED               	goto	u3610
  5340  003118                     l669:
  5341                           
  5342                           ; BSR set to: 0
  5343                           
  5344                           ; BSR set to: 0
  5345                           
  5346                           ; BSR set to: 0
  5347  003118  518B               	movf	___awdiv@sign& (0+255),w,b
  5348  00311A  B4D8               	btfsc	status,2,c
  5349  00311C  D004               	goto	l670
  5350                           
  5351                           ; BSR set to: 0
  5352  00311E  6D8C               	negf	___awdiv@quotient& (0+255),b
  5353  003120  1F8D               	comf	(___awdiv@quotient+1)& (0+255),f,b
  5354  003122  B0D8               	btfsc	status,0,c
  5355  003124  2B8D               	incf	(___awdiv@quotient+1)& (0+255),f,b
  5356  003126                     l670:
  5357                           
  5358                           ; BSR set to: 0
  5359                           
  5360                           ; BSR set to: 0
  5361  003126  C08C  F086         	movff	___awdiv@quotient,?___awdiv
  5362  00312A  C08D  F087         	movff	___awdiv@quotient+1,?___awdiv+1
  5363  00312E  0012               	return	
  5364  003130                     __end_of___awdiv:
  5365                           	opt stack 0
  5366                           tblptru	equ	0xFF8
  5367                           tblptrh	equ	0xFF7
  5368                           tblptrl	equ	0xFF6
  5369                           tablat	equ	0xFF5
  5370                           prodh	equ	0xFF4
  5371                           prodl	equ	0xFF3
  5372                           indf0	equ	0xFEF
  5373                           postinc0	equ	0xFEE
  5374                           fsr0h	equ	0xFEA
  5375                           fsr0l	equ	0xFE9
  5376                           wreg	equ	0xFE8
  5377                           postdec1	equ	0xFE5
  5378                           fsr1l	equ	0xFE1
  5379                           indf2	equ	0xFDF
  5380                           postinc2	equ	0xFDE
  5381                           postdec2	equ	0xFDD
  5382                           fsr2h	equ	0xFDA
  5383                           fsr2l	equ	0xFD9
  5384                           status	equ	0xFD8
  5385                           
  5386 ;; *************** function __tdiv_to_l_ *****************
  5387 ;; Defined at:
  5388 ;;		line 60 in file "/opt/microchip/xc8/v1.45/sources/common/ftdivl.c"
  5389 ;; Parameters:    Size  Location     Type
  5390 ;;  f1              4    0[BANK0 ] float 
  5391 ;;  f2              4    4[BANK0 ] float 
  5392 ;; Auto vars:     Size  Location     Type
  5393 ;;  quot            4   11[BANK0 ] unsigned long 
  5394 ;;  exp1            1   16[BANK0 ] unsigned char 
  5395 ;;  cntr            1   15[BANK0 ] unsigned char 
  5396 ;; Return value:  Size  Location     Type
  5397 ;;                  4    0[BANK0 ] unsigned long 
  5398 ;; Registers used:
  5399 ;;		wreg, status,2, status,0
  5400 ;; Tracked objects:
  5401 ;;		On entry : 0/0
  5402 ;;		On exit  : 0/0
  5403 ;;		Unchanged: 0/0
  5404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5405 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5406 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5407 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5408 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5409 ;;Total ram usage:       17 bytes
  5410 ;; Hardware stack levels used:    1
  5411 ;; Hardware stack levels required when called:    3
  5412 ;; This function calls:
  5413 ;;		Nothing
  5414 ;; This function is called by:
  5415 ;;		_sprintf
  5416 ;; This function uses a non-reentrant model
  5417 ;;
  5418                           
  5419                           	psect	text8
  5420  0028AE                     __ptext8:
  5421                           	opt stack 0
  5422  0028AE                     __tdiv_to_l_:
  5423                           	opt stack 25
  5424                           
  5425                           ; BSR set to: 0
  5426                           ;incstack = 0
  5427  0028AE  C082  F088         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  5428  0028B2  0100               	movlb	0	; () banked
  5429  0028B4  6B89               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  5430  0028B6  6B8A               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  5431  0028B8  3581               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
  5432  0028BA  3788               	rlcf	??__tdiv_to_l_& (0+255),f,b
  5433  0028BC  E301               	bnc	u3791
  5434  0028BE  8189               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  5435  0028C0                     u3791:
  5436  0028C0  5188               	movf	??__tdiv_to_l_& (0+255),w,b
  5437  0028C2  6F90               	movwf	__tdiv_to_l_@exp1& (0+255),b
  5438  0028C4  5190               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  5439  0028C6  A4D8               	btfss	status,2,c
  5440  0028C8  D009               	goto	l797
  5441                           
  5442                           ; BSR set to: 0
  5443  0028CA  0E00               	movlw	0
  5444  0028CC  6F80               	movwf	?__tdiv_to_l_& (0+255),b
  5445  0028CE  0E00               	movlw	0
  5446  0028D0  6F81               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  5447  0028D2  0E00               	movlw	0
  5448  0028D4  6F82               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  5449  0028D6  0E00               	movlw	0
  5450  0028D8  6F83               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  5451                           
  5452                           ; BSR set to: 0
  5453  0028DA  0012               	return	
  5454  0028DC                     l797:
  5455                           
  5456                           ; BSR set to: 0
  5457                           
  5458                           ; BSR set to: 0
  5459  0028DC  C086  F088         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  5460  0028E0  6B89               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  5461  0028E2  6B8A               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  5462  0028E4  3585               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  5463  0028E6  3788               	rlcf	??__tdiv_to_l_& (0+255),f,b
  5464  0028E8  E301               	bnc	u3811
  5465  0028EA  8189               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  5466  0028EC                     u3811:
  5467  0028EC  5188               	movf	??__tdiv_to_l_& (0+255),w,b
  5468  0028EE  6F8F               	movwf	__tdiv_to_l_@cntr& (0+255),b
  5469  0028F0  518F               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  5470  0028F2  A4D8               	btfss	status,2,c
  5471  0028F4  D009               	goto	l799
  5472                           
  5473                           ; BSR set to: 0
  5474  0028F6  0E00               	movlw	0
  5475  0028F8  6F80               	movwf	?__tdiv_to_l_& (0+255),b
  5476  0028FA  0E00               	movlw	0
  5477  0028FC  6F81               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  5478  0028FE  0E00               	movlw	0
  5479  002900  6F82               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  5480  002902  0E00               	movlw	0
  5481  002904  6F83               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  5482                           
  5483                           ; BSR set to: 0
  5484  002906  0012               	return	
  5485  002908                     l799:
  5486                           
  5487                           ; BSR set to: 0
  5488                           
  5489                           ; BSR set to: 0
  5490  002908  8F81               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  5491                           
  5492                           ; BSR set to: 0
  5493  00290A  0EFF               	movlw	255
  5494  00290C  1780               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  5495  00290E  0EFF               	movlw	255
  5496  002910  1781               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  5497  002912  0E00               	movlw	0
  5498  002914  1782               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  5499  002916  8F85               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  5500                           
  5501                           ; BSR set to: 0
  5502  002918  0EFF               	movlw	255
  5503  00291A  1784               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  5504  00291C  0EFF               	movlw	255
  5505  00291E  1785               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  5506  002920  0E00               	movlw	0
  5507  002922  1786               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  5508                           
  5509                           ; BSR set to: 0
  5510  002924  0E00               	movlw	0
  5511  002926  6F8B               	movwf	__tdiv_to_l_@quot& (0+255),b
  5512  002928  0E00               	movlw	0
  5513  00292A  6F8C               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  5514  00292C  0E00               	movlw	0
  5515  00292E  6F8D               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  5516  002930  0E00               	movlw	0
  5517  002932  6F8E               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  5518                           
  5519                           ; BSR set to: 0
  5520  002934  0E7F               	movlw	127
  5521  002936  5F90               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  5522                           
  5523                           ; BSR set to: 0
  5524  002938  518F               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  5525  00293A  0F98               	addlw	152
  5526  00293C  5F90               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  5527                           
  5528                           ; BSR set to: 0
  5529  00293E  0E18               	movlw	24
  5530  002940  6F8F               	movwf	__tdiv_to_l_@cntr& (0+255),b
  5531  002942                     l800:
  5532                           
  5533                           ; BSR set to: 0
  5534  002942  90D8               	bcf	status,0,c
  5535  002944  378B               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  5536  002946  378C               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  5537  002948  378D               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  5538  00294A  378E               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  5539                           
  5540                           ; BSR set to: 0
  5541  00294C  5184               	movf	__tdiv_to_l_@f2& (0+255),w,b
  5542  00294E  5D80               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  5543  002950  5185               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  5544  002952  5981               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
  5545  002954  5186               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  5546  002956  5982               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
  5547  002958  A0D8               	btfss	status,0,c
  5548  00295A  D007               	goto	l801
  5549                           
  5550                           ; BSR set to: 0
  5551  00295C  5184               	movf	__tdiv_to_l_@f2& (0+255),w,b
  5552  00295E  5F80               	subwf	__tdiv_to_l_@f1& (0+255),f,b
  5553  002960  5185               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  5554  002962  5B81               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
  5555  002964  5186               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  5556  002966  5B82               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
  5557                           
  5558                           ; BSR set to: 0
  5559  002968  818B               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  5560  00296A                     l801:
  5561                           
  5562                           ; BSR set to: 0
  5563  00296A  90D8               	bcf	status,0,c
  5564  00296C  3780               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
  5565  00296E  3781               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  5566  002970  3782               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  5567                           
  5568                           ; BSR set to: 0
  5569  002972  2F8F               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  5570  002974  D7E6               	goto	l800
  5571                           
  5572                           ; BSR set to: 0
  5573                           
  5574                           ; BSR set to: 0
  5575  002976  AF90               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  5576  002978  D016               	goto	l803
  5577                           
  5578                           ; BSR set to: 0
  5579  00297A  5190               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  5580  00297C  0A80               	xorlw	128
  5581  00297E  0F97               	addlw	151
  5582  002980  B0D8               	btfsc	status,0,c
  5583  002982  D009               	goto	l804
  5584                           
  5585                           ; BSR set to: 0
  5586  002984  0E00               	movlw	0
  5587  002986  6F80               	movwf	?__tdiv_to_l_& (0+255),b
  5588  002988  0E00               	movlw	0
  5589  00298A  6F81               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  5590  00298C  0E00               	movlw	0
  5591  00298E  6F82               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  5592  002990  0E00               	movlw	0
  5593  002992  6F83               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  5594                           
  5595                           ; BSR set to: 0
  5596  002994  0012               	return	
  5597  002996                     l804:
  5598                           
  5599                           ; BSR set to: 0
  5600                           
  5601                           ; BSR set to: 0
  5602                           
  5603                           ; BSR set to: 0
  5604  002996  90D8               	bcf	status,0,c
  5605  002998  338E               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  5606  00299A  338D               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  5607  00299C  338C               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  5608  00299E  338B               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  5609                           
  5610                           ; BSR set to: 0
  5611  0029A0  3F90               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  5612  0029A2  D7F9               	goto	l804
  5613                           
  5614                           ; BSR set to: 0
  5615  0029A4  D015               	goto	u3870
  5616  0029A6                     l803:
  5617                           
  5618                           ; BSR set to: 0
  5619                           
  5620                           ; BSR set to: 0
  5621  0029A6  0E17               	movlw	23
  5622  0029A8  6590               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  5623  0029AA  D00F               	goto	l809
  5624                           
  5625                           ; BSR set to: 0
  5626  0029AC  0E00               	movlw	0
  5627  0029AE  6F80               	movwf	?__tdiv_to_l_& (0+255),b
  5628  0029B0  0E00               	movlw	0
  5629  0029B2  6F81               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  5630  0029B4  0E00               	movlw	0
  5631  0029B6  6F82               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  5632  0029B8  0E00               	movlw	0
  5633  0029BA  6F83               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  5634                           
  5635                           ; BSR set to: 0
  5636  0029BC  0012               	return	
  5637  0029BE                     
  5638                           ; BSR set to: 0
  5639                           
  5640                           ; BSR set to: 0
  5641  0029BE  90D8               	bcf	status,0,c
  5642  0029C0  378B               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  5643  0029C2  378C               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  5644  0029C4  378D               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  5645  0029C6  378E               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  5646  0029C8  0790               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  5647  0029CA                     l809:
  5648                           
  5649                           ; BSR set to: 0
  5650                           
  5651                           ; BSR set to: 0
  5652  0029CA  5190               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  5653  0029CC  A4D8               	btfss	status,2,c
  5654  0029CE  D7F7               	goto	l810
  5655  0029D0                     u3870:
  5656                           
  5657                           ; BSR set to: 0
  5658                           
  5659                           ; BSR set to: 0
  5660  0029D0  C08B  F080         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  5661  0029D4  C08C  F081         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  5662  0029D8  C08D  F082         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  5663  0029DC  C08E  F083         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  5664                           
  5665                           ; BSR set to: 0
  5666  0029E0  0012               	return		;funcret
  5667  0029E2                     __end_of__tdiv_to_l_:
  5668                           	opt stack 0
  5669                           tblptru	equ	0xFF8
  5670                           tblptrh	equ	0xFF7
  5671                           tblptrl	equ	0xFF6
  5672                           tablat	equ	0xFF5
  5673                           prodh	equ	0xFF4
  5674                           prodl	equ	0xFF3
  5675                           indf0	equ	0xFEF
  5676                           postinc0	equ	0xFEE
  5677                           fsr0h	equ	0xFEA
  5678                           fsr0l	equ	0xFE9
  5679                           wreg	equ	0xFE8
  5680                           postdec1	equ	0xFE5
  5681                           fsr1l	equ	0xFE1
  5682                           indf2	equ	0xFDF
  5683                           postinc2	equ	0xFDE
  5684                           postdec2	equ	0xFDD
  5685                           fsr2h	equ	0xFDA
  5686                           fsr2l	equ	0xFD9
  5687                           status	equ	0xFD8
  5688                           
  5689 ;; *************** function __div_to_l_ *****************
  5690 ;; Defined at:
  5691 ;;		line 60 in file "/opt/microchip/xc8/v1.45/sources/common/fldivl.c"
  5692 ;; Parameters:    Size  Location     Type
  5693 ;;  f1              4    0[BANK0 ] unsigned long 
  5694 ;;  f2              4    4[BANK0 ] unsigned long 
  5695 ;; Auto vars:     Size  Location     Type
  5696 ;;  quot            4    8[BANK0 ] unsigned long 
  5697 ;;  exp1            1   13[BANK0 ] unsigned char 
  5698 ;;  cntr            1   12[BANK0 ] unsigned char 
  5699 ;; Return value:  Size  Location     Type
  5700 ;;                  4    0[BANK0 ] unsigned long 
  5701 ;; Registers used:
  5702 ;;		wreg, status,2, status,0
  5703 ;; Tracked objects:
  5704 ;;		On entry : 0/0
  5705 ;;		On exit  : 0/0
  5706 ;;		Unchanged: 0/0
  5707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5708 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5709 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5711 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5712 ;;Total ram usage:       14 bytes
  5713 ;; Hardware stack levels used:    1
  5714 ;; Hardware stack levels required when called:    3
  5715 ;; This function calls:
  5716 ;;		Nothing
  5717 ;; This function is called by:
  5718 ;;		_sprintf
  5719 ;; This function uses a non-reentrant model
  5720 ;;
  5721                           
  5722                           	psect	text9
  5723  0029E2                     __ptext9:
  5724                           	opt stack 0
  5725  0029E2                     __div_to_l_:
  5726                           	opt stack 25
  5727                           
  5728                           ; BSR set to: 0
  5729                           ;incstack = 0
  5730  0029E2  0100               	movlb	0	; () banked
  5731  0029E4  3582               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
  5732  0029E6  3583               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
  5733  0029E8  6F8D               	movwf	__div_to_l_@exp1& (0+255),b
  5734  0029EA  518D               	movf	__div_to_l_@exp1& (0+255),w,b
  5735  0029EC  A4D8               	btfss	status,2,c
  5736  0029EE  D009               	goto	l693
  5737                           
  5738                           ; BSR set to: 0
  5739  0029F0  0E00               	movlw	0
  5740  0029F2  6F80               	movwf	?__div_to_l_& (0+255),b
  5741  0029F4  0E00               	movlw	0
  5742  0029F6  6F81               	movwf	(?__div_to_l_+1)& (0+255),b
  5743  0029F8  0E00               	movlw	0
  5744  0029FA  6F82               	movwf	(?__div_to_l_+2)& (0+255),b
  5745  0029FC  0E00               	movlw	0
  5746  0029FE  6F83               	movwf	(?__div_to_l_+3)& (0+255),b
  5747                           
  5748                           ; BSR set to: 0
  5749  002A00  0012               	return	
  5750  002A02                     l693:
  5751                           
  5752                           ; BSR set to: 0
  5753                           
  5754                           ; BSR set to: 0
  5755  002A02  3586               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
  5756  002A04  3587               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
  5757  002A06  6F8C               	movwf	__div_to_l_@cntr& (0+255),b
  5758  002A08  518C               	movf	__div_to_l_@cntr& (0+255),w,b
  5759  002A0A  A4D8               	btfss	status,2,c
  5760  002A0C  D009               	goto	l695
  5761                           
  5762                           ; BSR set to: 0
  5763  002A0E  0E00               	movlw	0
  5764  002A10  6F80               	movwf	?__div_to_l_& (0+255),b
  5765  002A12  0E00               	movlw	0
  5766  002A14  6F81               	movwf	(?__div_to_l_+1)& (0+255),b
  5767  002A16  0E00               	movlw	0
  5768  002A18  6F82               	movwf	(?__div_to_l_+2)& (0+255),b
  5769  002A1A  0E00               	movlw	0
  5770  002A1C  6F83               	movwf	(?__div_to_l_+3)& (0+255),b
  5771                           
  5772                           ; BSR set to: 0
  5773  002A1E  0012               	return	
  5774  002A20                     l695:
  5775                           
  5776                           ; BSR set to: 0
  5777                           
  5778                           ; BSR set to: 0
  5779  002A20  8F82               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
  5780                           
  5781                           ; BSR set to: 0
  5782  002A22  0EFF               	movlw	255
  5783  002A24  1780               	andwf	__div_to_l_@f1& (0+255),f,b
  5784  002A26  0EFF               	movlw	255
  5785  002A28  1781               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
  5786  002A2A  0EFF               	movlw	255
  5787  002A2C  1782               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
  5788  002A2E  0E00               	movlw	0
  5789  002A30  1783               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
  5790                           
  5791                           ; BSR set to: 0
  5792  002A32  8F86               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
  5793  002A34  0EFF               	movlw	255
  5794  002A36  1784               	andwf	__div_to_l_@f2& (0+255),f,b
  5795  002A38  0EFF               	movlw	255
  5796  002A3A  1785               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
  5797  002A3C  0EFF               	movlw	255
  5798  002A3E  1786               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
  5799  002A40  0E00               	movlw	0
  5800  002A42  1787               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
  5801                           
  5802                           ; BSR set to: 0
  5803  002A44  0E00               	movlw	0
  5804  002A46  6F88               	movwf	__div_to_l_@quot& (0+255),b
  5805  002A48  0E00               	movlw	0
  5806  002A4A  6F89               	movwf	(__div_to_l_@quot+1)& (0+255),b
  5807  002A4C  0E00               	movlw	0
  5808  002A4E  6F8A               	movwf	(__div_to_l_@quot+2)& (0+255),b
  5809  002A50  0E00               	movlw	0
  5810  002A52  6F8B               	movwf	(__div_to_l_@quot+3)& (0+255),b
  5811                           
  5812                           ; BSR set to: 0
  5813  002A54  0E7F               	movlw	127
  5814  002A56  5F8D               	subwf	__div_to_l_@exp1& (0+255),f,b
  5815                           
  5816                           ; BSR set to: 0
  5817  002A58  518C               	movf	__div_to_l_@cntr& (0+255),w,b
  5818  002A5A  0FA0               	addlw	160
  5819  002A5C  5F8D               	subwf	__div_to_l_@exp1& (0+255),f,b
  5820                           
  5821                           ; BSR set to: 0
  5822  002A5E  0E20               	movlw	32
  5823  002A60  6F8C               	movwf	__div_to_l_@cntr& (0+255),b
  5824  002A62                     
  5825                           ; BSR set to: 0
  5826                           
  5827                           ; BSR set to: 0
  5828  002A62  90D8               	bcf	status,0,c
  5829  002A64  3788               	rlcf	__div_to_l_@quot& (0+255),f,b
  5830  002A66  3789               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  5831  002A68  378A               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  5832  002A6A  378B               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  5833                           
  5834                           ; BSR set to: 0
  5835  002A6C  5184               	movf	__div_to_l_@f2& (0+255),w,b
  5836  002A6E  5D80               	subwf	__div_to_l_@f1& (0+255),w,b
  5837  002A70  5185               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  5838  002A72  5981               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
  5839  002A74  5186               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  5840  002A76  5982               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
  5841  002A78  5187               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  5842  002A7A  5983               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
  5843  002A7C  A0D8               	btfss	status,0,c
  5844  002A7E  D009               	goto	l697
  5845                           
  5846                           ; BSR set to: 0
  5847  002A80  5184               	movf	__div_to_l_@f2& (0+255),w,b
  5848  002A82  5F80               	subwf	__div_to_l_@f1& (0+255),f,b
  5849  002A84  5185               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  5850  002A86  5B81               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
  5851  002A88  5186               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  5852  002A8A  5B82               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
  5853  002A8C  5187               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  5854  002A8E  5B83               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
  5855                           
  5856                           ; BSR set to: 0
  5857  002A90  8188               	bsf	__div_to_l_@quot& (0+255),0,b
  5858  002A92                     l697:
  5859                           
  5860                           ; BSR set to: 0
  5861                           
  5862                           ; BSR set to: 0
  5863  002A92  90D8               	bcf	status,0,c
  5864  002A94  3780               	rlcf	__div_to_l_@f1& (0+255),f,b
  5865  002A96  3781               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
  5866  002A98  3782               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
  5867  002A9A  3783               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
  5868                           
  5869                           ; BSR set to: 0
  5870  002A9C  2F8C               	decfsz	__div_to_l_@cntr& (0+255),f,b
  5871  002A9E  D7E1               	goto	l696
  5872                           
  5873                           ; BSR set to: 0
  5874                           
  5875                           ; BSR set to: 0
  5876  002AA0  AF8D               	btfss	__div_to_l_@exp1& (0+255),7,b
  5877  002AA2  D016               	goto	l699
  5878                           
  5879                           ; BSR set to: 0
  5880  002AA4  518D               	movf	__div_to_l_@exp1& (0+255),w,b
  5881  002AA6  0A80               	xorlw	128
  5882  002AA8  0F9F               	addlw	159
  5883  002AAA  B0D8               	btfsc	status,0,c
  5884  002AAC  D009               	goto	l700
  5885                           
  5886                           ; BSR set to: 0
  5887  002AAE  0E00               	movlw	0
  5888  002AB0  6F80               	movwf	?__div_to_l_& (0+255),b
  5889  002AB2  0E00               	movlw	0
  5890  002AB4  6F81               	movwf	(?__div_to_l_+1)& (0+255),b
  5891  002AB6  0E00               	movlw	0
  5892  002AB8  6F82               	movwf	(?__div_to_l_+2)& (0+255),b
  5893  002ABA  0E00               	movlw	0
  5894  002ABC  6F83               	movwf	(?__div_to_l_+3)& (0+255),b
  5895                           
  5896                           ; BSR set to: 0
  5897  002ABE  0012               	return	
  5898  002AC0                     l700:
  5899                           
  5900                           ; BSR set to: 0
  5901                           
  5902                           ; BSR set to: 0
  5903                           
  5904                           ; BSR set to: 0
  5905  002AC0  90D8               	bcf	status,0,c
  5906  002AC2  338B               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
  5907  002AC4  338A               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
  5908  002AC6  3389               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
  5909  002AC8  3388               	rrcf	__div_to_l_@quot& (0+255),f,b
  5910                           
  5911                           ; BSR set to: 0
  5912  002ACA  3F8D               	incfsz	__div_to_l_@exp1& (0+255),f,b
  5913  002ACC  D7F9               	goto	l700
  5914                           
  5915                           ; BSR set to: 0
  5916  002ACE  D015               	goto	u3940
  5917  002AD0                     l699:
  5918                           
  5919                           ; BSR set to: 0
  5920                           
  5921                           ; BSR set to: 0
  5922  002AD0  0E1F               	movlw	31
  5923  002AD2  658D               	cpfsgt	__div_to_l_@exp1& (0+255),b
  5924  002AD4  D00F               	goto	l705
  5925                           
  5926                           ; BSR set to: 0
  5927  002AD6  0E00               	movlw	0
  5928  002AD8  6F80               	movwf	?__div_to_l_& (0+255),b
  5929  002ADA  0E00               	movlw	0
  5930  002ADC  6F81               	movwf	(?__div_to_l_+1)& (0+255),b
  5931  002ADE  0E00               	movlw	0
  5932  002AE0  6F82               	movwf	(?__div_to_l_+2)& (0+255),b
  5933  002AE2  0E00               	movlw	0
  5934  002AE4  6F83               	movwf	(?__div_to_l_+3)& (0+255),b
  5935                           
  5936                           ; BSR set to: 0
  5937  002AE6  0012               	return	
  5938  002AE8                     
  5939                           ; BSR set to: 0
  5940                           
  5941                           ; BSR set to: 0
  5942  002AE8  90D8               	bcf	status,0,c
  5943  002AEA  3788               	rlcf	__div_to_l_@quot& (0+255),f,b
  5944  002AEC  3789               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  5945  002AEE  378A               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  5946  002AF0  378B               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  5947  002AF2  078D               	decf	__div_to_l_@exp1& (0+255),f,b
  5948  002AF4                     l705:
  5949                           
  5950                           ; BSR set to: 0
  5951                           
  5952                           ; BSR set to: 0
  5953  002AF4  518D               	movf	__div_to_l_@exp1& (0+255),w,b
  5954  002AF6  A4D8               	btfss	status,2,c
  5955  002AF8  D7F7               	goto	l706
  5956  002AFA                     u3940:
  5957                           
  5958                           ; BSR set to: 0
  5959                           
  5960                           ; BSR set to: 0
  5961  002AFA  C088  F080         	movff	__div_to_l_@quot,?__div_to_l_
  5962  002AFE  C089  F081         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  5963  002B02  C08A  F082         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  5964  002B06  C08B  F083         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  5965                           
  5966                           ; BSR set to: 0
  5967  002B0A  0012               	return		;funcret
  5968  002B0C                     __end_of__div_to_l_:
  5969                           	opt stack 0
  5970                           tblptru	equ	0xFF8
  5971                           tblptrh	equ	0xFF7
  5972                           tblptrl	equ	0xFF6
  5973                           tablat	equ	0xFF5
  5974                           prodh	equ	0xFF4
  5975                           prodl	equ	0xFF3
  5976                           indf0	equ	0xFEF
  5977                           postinc0	equ	0xFEE
  5978                           fsr0h	equ	0xFEA
  5979                           fsr0l	equ	0xFE9
  5980                           wreg	equ	0xFE8
  5981                           postdec1	equ	0xFE5
  5982                           fsr1l	equ	0xFE1
  5983                           indf2	equ	0xFDF
  5984                           postinc2	equ	0xFDE
  5985                           postdec2	equ	0xFDD
  5986                           fsr2h	equ	0xFDA
  5987                           fsr2l	equ	0xFD9
  5988                           status	equ	0xFD8
  5989                           
  5990 ;; *************** function ___llmod *****************
  5991 ;; Defined at:
  5992 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/llmod.c"
  5993 ;; Parameters:    Size  Location     Type
  5994 ;;  dividend        4   13[BANK0 ] unsigned long 
  5995 ;;  divisor         4   17[BANK0 ] unsigned long 
  5996 ;; Auto vars:     Size  Location     Type
  5997 ;;  counter         1   21[BANK0 ] unsigned char 
  5998 ;; Return value:  Size  Location     Type
  5999 ;;                  4   13[BANK0 ] unsigned long 
  6000 ;; Registers used:
  6001 ;;		wreg, status,2, status,0
  6002 ;; Tracked objects:
  6003 ;;		On entry : 0/0
  6004 ;;		On exit  : 0/0
  6005 ;;		Unchanged: 0/0
  6006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6007 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6008 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6010 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6011 ;;Total ram usage:        9 bytes
  6012 ;; Hardware stack levels used:    1
  6013 ;; Hardware stack levels required when called:    3
  6014 ;; This function calls:
  6015 ;;		Nothing
  6016 ;; This function is called by:
  6017 ;;		_sprintf
  6018 ;; This function uses a non-reentrant model
  6019 ;;
  6020                           
  6021                           	psect	text10
  6022  003294                     __ptext10:
  6023                           	opt stack 0
  6024  003294                     ___llmod:
  6025                           	opt stack 25
  6026                           
  6027                           ; BSR set to: 0
  6028                           ;incstack = 0
  6029  003294  0100               	movlb	0	; () banked
  6030  003296  5191               	movf	___llmod@divisor& (0+255),w,b
  6031  003298  1192               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  6032  00329A  1193               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  6033  00329C  1194               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  6034  00329E  B4D8               	btfsc	status,2,c
  6035  0032A0  D024               	goto	l898
  6036                           
  6037                           ; BSR set to: 0
  6038  0032A2  0E01               	movlw	1
  6039  0032A4  6F95               	movwf	___llmod@counter& (0+255),b
  6040  0032A6  D006               	goto	l893
  6041  0032A8                     
  6042                           ; BSR set to: 0
  6043                           
  6044                           ; BSR set to: 0
  6045  0032A8  90D8               	bcf	status,0,c
  6046  0032AA  3791               	rlcf	___llmod@divisor& (0+255),f,b
  6047  0032AC  3792               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  6048  0032AE  3793               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  6049  0032B0  3794               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  6050  0032B2  2B95               	incf	___llmod@counter& (0+255),f,b
  6051  0032B4                     l893:
  6052                           
  6053                           ; BSR set to: 0
  6054                           
  6055                           ; BSR set to: 0
  6056  0032B4  AF94               	btfss	(___llmod@divisor+3)& (0+255),7,b
  6057  0032B6  D7F8               	goto	l894
  6058  0032B8                     u4120:
  6059                           
  6060                           ; BSR set to: 0
  6061                           
  6062                           ; BSR set to: 0
  6063                           
  6064                           ; BSR set to: 0
  6065  0032B8  5191               	movf	___llmod@divisor& (0+255),w,b
  6066  0032BA  5D8D               	subwf	___llmod@dividend& (0+255),w,b
  6067  0032BC  5192               	movf	(___llmod@divisor+1)& (0+255),w,b
  6068  0032BE  598E               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  6069  0032C0  5193               	movf	(___llmod@divisor+2)& (0+255),w,b
  6070  0032C2  598F               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  6071  0032C4  5194               	movf	(___llmod@divisor+3)& (0+255),w,b
  6072  0032C6  5990               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  6073  0032C8  A0D8               	btfss	status,0,c
  6074  0032CA  D008               	goto	l897
  6075                           
  6076                           ; BSR set to: 0
  6077  0032CC  5191               	movf	___llmod@divisor& (0+255),w,b
  6078  0032CE  5F8D               	subwf	___llmod@dividend& (0+255),f,b
  6079  0032D0  5192               	movf	(___llmod@divisor+1)& (0+255),w,b
  6080  0032D2  5B8E               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  6081  0032D4  5193               	movf	(___llmod@divisor+2)& (0+255),w,b
  6082  0032D6  5B8F               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  6083  0032D8  5194               	movf	(___llmod@divisor+3)& (0+255),w,b
  6084  0032DA  5B90               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  6085  0032DC                     l897:
  6086                           
  6087                           ; BSR set to: 0
  6088                           
  6089                           ; BSR set to: 0
  6090  0032DC  90D8               	bcf	status,0,c
  6091  0032DE  3394               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  6092  0032E0  3393               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  6093  0032E2  3392               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  6094  0032E4  3391               	rrcf	___llmod@divisor& (0+255),f,b
  6095                           
  6096                           ; BSR set to: 0
  6097  0032E6  2F95               	decfsz	___llmod@counter& (0+255),f,b
  6098  0032E8  D7E7               	goto	u4120
  6099  0032EA                     l898:
  6100                           
  6101                           ; BSR set to: 0
  6102                           
  6103                           ; BSR set to: 0
  6104  0032EA  C08D  F08D         	movff	___llmod@dividend,?___llmod
  6105  0032EE  C08E  F08E         	movff	___llmod@dividend+1,?___llmod+1
  6106  0032F2  C08F  F08F         	movff	___llmod@dividend+2,?___llmod+2
  6107  0032F6  C090  F090         	movff	___llmod@dividend+3,?___llmod+3
  6108                           
  6109                           ; BSR set to: 0
  6110  0032FA  0012               	return		;funcret
  6111  0032FC                     __end_of___llmod:
  6112                           	opt stack 0
  6113                           tblptru	equ	0xFF8
  6114                           tblptrh	equ	0xFF7
  6115                           tblptrl	equ	0xFF6
  6116                           tablat	equ	0xFF5
  6117                           prodh	equ	0xFF4
  6118                           prodl	equ	0xFF3
  6119                           indf0	equ	0xFEF
  6120                           postinc0	equ	0xFEE
  6121                           fsr0h	equ	0xFEA
  6122                           fsr0l	equ	0xFE9
  6123                           wreg	equ	0xFE8
  6124                           postdec1	equ	0xFE5
  6125                           fsr1l	equ	0xFE1
  6126                           indf2	equ	0xFDF
  6127                           postinc2	equ	0xFDE
  6128                           postdec2	equ	0xFDD
  6129                           fsr2h	equ	0xFDA
  6130                           fsr2l	equ	0xFD9
  6131                           status	equ	0xFD8
  6132                           
  6133 ;; *************** function ___lldiv *****************
  6134 ;; Defined at:
  6135 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lldiv.c"
  6136 ;; Parameters:    Size  Location     Type
  6137 ;;  dividend        4    0[BANK0 ] unsigned long 
  6138 ;;  divisor         4    4[BANK0 ] unsigned long 
  6139 ;; Auto vars:     Size  Location     Type
  6140 ;;  quotient        4    8[BANK0 ] unsigned long 
  6141 ;;  counter         1   12[BANK0 ] unsigned char 
  6142 ;; Return value:  Size  Location     Type
  6143 ;;                  4    0[BANK0 ] unsigned long 
  6144 ;; Registers used:
  6145 ;;		wreg, status,2, status,0
  6146 ;; Tracked objects:
  6147 ;;		On entry : 0/0
  6148 ;;		On exit  : 0/0
  6149 ;;		Unchanged: 0/0
  6150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6151 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6152 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6154 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6155 ;;Total ram usage:       13 bytes
  6156 ;; Hardware stack levels used:    1
  6157 ;; Hardware stack levels required when called:    3
  6158 ;; This function calls:
  6159 ;;		Nothing
  6160 ;; This function is called by:
  6161 ;;		_sprintf
  6162 ;; This function uses a non-reentrant model
  6163 ;;
  6164                           
  6165                           	psect	text11
  6166  003130                     __ptext11:
  6167                           	opt stack 0
  6168  003130                     ___lldiv:
  6169                           	opt stack 25
  6170                           
  6171                           ; BSR set to: 0
  6172                           ;incstack = 0
  6173  003130  0E00               	movlw	0
  6174  003132  0100               	movlb	0	; () banked
  6175  003134  6F88               	movwf	___lldiv@quotient& (0+255),b
  6176  003136  0E00               	movlw	0
  6177  003138  6F89               	movwf	(___lldiv@quotient+1)& (0+255),b
  6178  00313A  0E00               	movlw	0
  6179  00313C  6F8A               	movwf	(___lldiv@quotient+2)& (0+255),b
  6180  00313E  0E00               	movlw	0
  6181  003140  6F8B               	movwf	(___lldiv@quotient+3)& (0+255),b
  6182                           
  6183                           ; BSR set to: 0
  6184  003142  5184               	movf	___lldiv@divisor& (0+255),w,b
  6185  003144  1185               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  6186  003146  1186               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  6187  003148  1187               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  6188  00314A  B4D8               	btfsc	status,2,c
  6189  00314C  D02A               	goto	l888
  6190                           
  6191                           ; BSR set to: 0
  6192  00314E  0E01               	movlw	1
  6193  003150  6F8C               	movwf	___lldiv@counter& (0+255),b
  6194  003152  D006               	goto	l883
  6195  003154                     
  6196                           ; BSR set to: 0
  6197                           
  6198                           ; BSR set to: 0
  6199  003154  90D8               	bcf	status,0,c
  6200  003156  3784               	rlcf	___lldiv@divisor& (0+255),f,b
  6201  003158  3785               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  6202  00315A  3786               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  6203  00315C  3787               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  6204  00315E  2B8C               	incf	___lldiv@counter& (0+255),f,b
  6205  003160                     l883:
  6206                           
  6207                           ; BSR set to: 0
  6208                           
  6209                           ; BSR set to: 0
  6210  003160  AF87               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  6211  003162  D7F8               	goto	l884
  6212  003164                     u4090:
  6213                           
  6214                           ; BSR set to: 0
  6215                           
  6216                           ; BSR set to: 0
  6217                           
  6218                           ; BSR set to: 0
  6219  003164  90D8               	bcf	status,0,c
  6220  003166  3788               	rlcf	___lldiv@quotient& (0+255),f,b
  6221  003168  3789               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  6222  00316A  378A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  6223  00316C  378B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  6224                           
  6225                           ; BSR set to: 0
  6226  00316E  5184               	movf	___lldiv@divisor& (0+255),w,b
  6227  003170  5D80               	subwf	___lldiv@dividend& (0+255),w,b
  6228  003172  5185               	movf	(___lldiv@divisor+1)& (0+255),w,b
  6229  003174  5981               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  6230  003176  5186               	movf	(___lldiv@divisor+2)& (0+255),w,b
  6231  003178  5982               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  6232  00317A  5187               	movf	(___lldiv@divisor+3)& (0+255),w,b
  6233  00317C  5983               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  6234  00317E  A0D8               	btfss	status,0,c
  6235  003180  D009               	goto	l887
  6236                           
  6237                           ; BSR set to: 0
  6238  003182  5184               	movf	___lldiv@divisor& (0+255),w,b
  6239  003184  5F80               	subwf	___lldiv@dividend& (0+255),f,b
  6240  003186  5185               	movf	(___lldiv@divisor+1)& (0+255),w,b
  6241  003188  5B81               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  6242  00318A  5186               	movf	(___lldiv@divisor+2)& (0+255),w,b
  6243  00318C  5B82               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  6244  00318E  5187               	movf	(___lldiv@divisor+3)& (0+255),w,b
  6245  003190  5B83               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  6246                           
  6247                           ; BSR set to: 0
  6248  003192  8188               	bsf	___lldiv@quotient& (0+255),0,b
  6249  003194                     l887:
  6250                           
  6251                           ; BSR set to: 0
  6252                           
  6253                           ; BSR set to: 0
  6254  003194  90D8               	bcf	status,0,c
  6255  003196  3387               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  6256  003198  3386               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  6257  00319A  3385               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  6258  00319C  3384               	rrcf	___lldiv@divisor& (0+255),f,b
  6259                           
  6260                           ; BSR set to: 0
  6261  00319E  2F8C               	decfsz	___lldiv@counter& (0+255),f,b
  6262  0031A0  D7E1               	goto	u4090
  6263  0031A2                     l888:
  6264                           
  6265                           ; BSR set to: 0
  6266                           
  6267                           ; BSR set to: 0
  6268  0031A2  C088  F080         	movff	___lldiv@quotient,?___lldiv
  6269  0031A6  C089  F081         	movff	___lldiv@quotient+1,?___lldiv+1
  6270  0031AA  C08A  F082         	movff	___lldiv@quotient+2,?___lldiv+2
  6271  0031AE  C08B  F083         	movff	___lldiv@quotient+3,?___lldiv+3
  6272                           
  6273                           ; BSR set to: 0
  6274  0031B2  0012               	return		;funcret
  6275  0031B4                     __end_of___lldiv:
  6276                           	opt stack 0
  6277                           tblptru	equ	0xFF8
  6278                           tblptrh	equ	0xFF7
  6279                           tblptrl	equ	0xFF6
  6280                           tablat	equ	0xFF5
  6281                           prodh	equ	0xFF4
  6282                           prodl	equ	0xFF3
  6283                           indf0	equ	0xFEF
  6284                           postinc0	equ	0xFEE
  6285                           fsr0h	equ	0xFEA
  6286                           fsr0l	equ	0xFE9
  6287                           wreg	equ	0xFE8
  6288                           postdec1	equ	0xFE5
  6289                           fsr1l	equ	0xFE1
  6290                           indf2	equ	0xFDF
  6291                           postinc2	equ	0xFDE
  6292                           postdec2	equ	0xFDD
  6293                           fsr2h	equ	0xFDA
  6294                           fsr2l	equ	0xFD9
  6295                           status	equ	0xFD8
  6296                           
  6297 ;; *************** function ___flsub *****************
  6298 ;; Defined at:
  6299 ;;		line 245 in file "/opt/microchip/xc8/v1.45/sources/common/sprcadd.c"
  6300 ;; Parameters:    Size  Location     Type
  6301 ;;  b               4   78[BANK0 ] unsigned long 
  6302 ;;  a               4   82[BANK0 ] unsigned long 
  6303 ;; Auto vars:     Size  Location     Type
  6304 ;;		None
  6305 ;; Return value:  Size  Location     Type
  6306 ;;                  4   78[BANK0 ] unsigned long 
  6307 ;; Registers used:
  6308 ;;		wreg, status,2, status,0, cstack
  6309 ;; Tracked objects:
  6310 ;;		On entry : 0/0
  6311 ;;		On exit  : 0/0
  6312 ;;		Unchanged: 0/0
  6313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6314 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6317 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6318 ;;Total ram usage:        8 bytes
  6319 ;; Hardware stack levels used:    1
  6320 ;; Hardware stack levels required when called:    4
  6321 ;; This function calls:
  6322 ;;		___fladd
  6323 ;; This function is called by:
  6324 ;;		_sprintf
  6325 ;; This function uses a non-reentrant model
  6326 ;;
  6327                           
  6328                           	psect	text12
  6329  003462                     __ptext12:
  6330                           	opt stack 0
  6331  003462                     ___flsub:
  6332                           	opt stack 24
  6333                           
  6334                           ; BSR set to: 0
  6335                           ;incstack = 0
  6336  003462  0E00               	movlw	0
  6337  003464  0100               	movlb	0	; () banked
  6338  003466  1BD2               	xorwf	___flsub@a& (0+255),f,b
  6339  003468  0E00               	movlw	0
  6340  00346A  1BD3               	xorwf	(___flsub@a+1)& (0+255),f,b
  6341  00346C  0E00               	movlw	0
  6342  00346E  1BD4               	xorwf	(___flsub@a+2)& (0+255),f,b
  6343  003470  0E80               	movlw	128
  6344  003472  1BD5               	xorwf	(___flsub@a+3)& (0+255),f,b
  6345                           
  6346                           ; BSR set to: 0
  6347  003474  C0CE  F0BA         	movff	___flsub@b,___fladd@b
  6348  003478  C0CF  F0BB         	movff	___flsub@b+1,___fladd@b+1
  6349  00347C  C0D0  F0BC         	movff	___flsub@b+2,___fladd@b+2
  6350  003480  C0D1  F0BD         	movff	___flsub@b+3,___fladd@b+3
  6351  003484  C0D2  F0BE         	movff	___flsub@a,___fladd@a
  6352  003488  C0D3  F0BF         	movff	___flsub@a+1,___fladd@a+1
  6353  00348C  C0D4  F0C0         	movff	___flsub@a+2,___fladd@a+2
  6354  003490  C0D5  F0C1         	movff	___flsub@a+3,___fladd@a+3
  6355  003494  EC2E  F00A         	call	___fladd	;wreg free
  6356  003498  C0BA  F0CE         	movff	?___fladd,?___flsub
  6357  00349C  C0BB  F0CF         	movff	?___fladd+1,?___flsub+1
  6358  0034A0  C0BC  F0D0         	movff	?___fladd+2,?___flsub+2
  6359  0034A4  C0BD  F0D1         	movff	?___fladd+3,?___flsub+3
  6360  0034A8  0012               	return	
  6361  0034AA                     __end_of___flsub:
  6362                           	opt stack 0
  6363                           tblptru	equ	0xFF8
  6364                           tblptrh	equ	0xFF7
  6365                           tblptrl	equ	0xFF6
  6366                           tablat	equ	0xFF5
  6367                           prodh	equ	0xFF4
  6368                           prodl	equ	0xFF3
  6369                           indf0	equ	0xFEF
  6370                           postinc0	equ	0xFEE
  6371                           fsr0h	equ	0xFEA
  6372                           fsr0l	equ	0xFE9
  6373                           wreg	equ	0xFE8
  6374                           postdec1	equ	0xFE5
  6375                           fsr1l	equ	0xFE1
  6376                           indf2	equ	0xFDF
  6377                           postinc2	equ	0xFDE
  6378                           postdec2	equ	0xFDD
  6379                           fsr2h	equ	0xFDA
  6380                           fsr2l	equ	0xFD9
  6381                           status	equ	0xFD8
  6382                           
  6383 ;; *************** function ___flneg *****************
  6384 ;; Defined at:
  6385 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/flneg.c"
  6386 ;; Parameters:    Size  Location     Type
  6387 ;;  f1              4   20[BANK0 ] unsigned long 
  6388 ;; Auto vars:     Size  Location     Type
  6389 ;;		None
  6390 ;; Return value:  Size  Location     Type
  6391 ;;                  4   20[BANK0 ] unsigned long 
  6392 ;; Registers used:
  6393 ;;		wreg, status,2, status,0
  6394 ;; Tracked objects:
  6395 ;;		On entry : 0/0
  6396 ;;		On exit  : 0/0
  6397 ;;		Unchanged: 0/0
  6398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6399 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6402 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6403 ;;Total ram usage:        4 bytes
  6404 ;; Hardware stack levels used:    1
  6405 ;; Hardware stack levels required when called:    3
  6406 ;; This function calls:
  6407 ;;		Nothing
  6408 ;; This function is called by:
  6409 ;;		_main
  6410 ;;		_sprintf
  6411 ;;		_set_pwm1_general
  6412 ;; This function uses a non-reentrant model
  6413 ;;
  6414                           
  6415                           	psect	text13
  6416  0035A2                     __ptext13:
  6417                           	opt stack 0
  6418  0035A2                     ___flneg:
  6419                           	opt stack 25
  6420                           
  6421                           ;incstack = 0
  6422  0035A2  0100               	movlb	0	; () banked
  6423  0035A4  5194               	movf	___flneg@f1& (0+255),w,b
  6424  0035A6  1195               	iorwf	(___flneg@f1+1)& (0+255),w,b
  6425  0035A8  1196               	iorwf	(___flneg@f1+2)& (0+255),w,b
  6426  0035AA  1197               	iorwf	(___flneg@f1+3)& (0+255),w,b
  6427  0035AC  B4D8               	btfsc	status,2,c
  6428  0035AE  D008               	goto	l717
  6429                           
  6430                           ; BSR set to: 0
  6431  0035B0  0E00               	movlw	0
  6432  0035B2  1B94               	xorwf	___flneg@f1& (0+255),f,b
  6433  0035B4  0E00               	movlw	0
  6434  0035B6  1B95               	xorwf	(___flneg@f1+1)& (0+255),f,b
  6435  0035B8  0E00               	movlw	0
  6436  0035BA  1B96               	xorwf	(___flneg@f1+2)& (0+255),f,b
  6437  0035BC  0E80               	movlw	128
  6438  0035BE  1B97               	xorwf	(___flneg@f1+3)& (0+255),f,b
  6439  0035C0                     l717:
  6440                           
  6441                           ; BSR set to: 0
  6442                           
  6443                           ; BSR set to: 0
  6444  0035C0  C094  F094         	movff	___flneg@f1,?___flneg
  6445  0035C4  C095  F095         	movff	___flneg@f1+1,?___flneg+1
  6446  0035C8  C096  F096         	movff	___flneg@f1+2,?___flneg+2
  6447  0035CC  C097  F097         	movff	___flneg@f1+3,?___flneg+3
  6448  0035D0  0012               	return	
  6449  0035D2                     __end_of___flneg:
  6450                           	opt stack 0
  6451                           tblptru	equ	0xFF8
  6452                           tblptrh	equ	0xFF7
  6453                           tblptrl	equ	0xFF6
  6454                           tablat	equ	0xFF5
  6455                           prodh	equ	0xFF4
  6456                           prodl	equ	0xFF3
  6457                           indf0	equ	0xFEF
  6458                           postinc0	equ	0xFEE
  6459                           fsr0h	equ	0xFEA
  6460                           fsr0l	equ	0xFE9
  6461                           wreg	equ	0xFE8
  6462                           postdec1	equ	0xFE5
  6463                           fsr1l	equ	0xFE1
  6464                           indf2	equ	0xFDF
  6465                           postinc2	equ	0xFDE
  6466                           postdec2	equ	0xFDD
  6467                           fsr2h	equ	0xFDA
  6468                           fsr2l	equ	0xFD9
  6469                           status	equ	0xFD8
  6470                           
  6471 ;; *************** function ___flge *****************
  6472 ;; Defined at:
  6473 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/flge.c"
  6474 ;; Parameters:    Size  Location     Type
  6475 ;;  ff1             4   78[BANK0 ] unsigned long 
  6476 ;;  ff2             4   82[BANK0 ] unsigned long 
  6477 ;; Auto vars:     Size  Location     Type
  6478 ;;		None
  6479 ;; Return value:  Size  Location     Type
  6480 ;;		None               void
  6481 ;; Registers used:
  6482 ;;		wreg, status,2, status,0
  6483 ;; Tracked objects:
  6484 ;;		On entry : 0/0
  6485 ;;		On exit  : 0/0
  6486 ;;		Unchanged: 0/0
  6487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6488 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6490 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6491 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6492 ;;Total ram usage:       12 bytes
  6493 ;; Hardware stack levels used:    1
  6494 ;; Hardware stack levels required when called:    3
  6495 ;; This function calls:
  6496 ;;		Nothing
  6497 ;; This function is called by:
  6498 ;;		_main
  6499 ;;		_sprintf
  6500 ;; This function uses a non-reentrant model
  6501 ;;
  6502                           
  6503                           	psect	text14
  6504  002B0C                     __ptext14:
  6505                           	opt stack 0
  6506  002B0C                     ___flge:
  6507                           	opt stack 25
  6508                           
  6509                           ; BSR set to: 0
  6510                           ;incstack = 0
  6511  002B0C  0E00               	movlw	0
  6512  002B0E  0100               	movlb	0	; () banked
  6513  002B10  15CE               	andwf	___flge@ff1& (0+255),w,b
  6514  002B12  6FD6               	movwf	??___flge& (0+255),b
  6515  002B14  0E00               	movlw	0
  6516  002B16  15CF               	andwf	(___flge@ff1+1)& (0+255),w,b
  6517  002B18  6FD7               	movwf	(??___flge+1)& (0+255),b
  6518  002B1A  0E80               	movlw	128
  6519  002B1C  15D0               	andwf	(___flge@ff1+2)& (0+255),w,b
  6520  002B1E  6FD8               	movwf	(??___flge+2)& (0+255),b
  6521  002B20  0E7F               	movlw	127
  6522  002B22  15D1               	andwf	(___flge@ff1+3)& (0+255),w,b
  6523  002B24  6FD9               	movwf	(??___flge+3)& (0+255),b
  6524  002B26  51D6               	movf	??___flge& (0+255),w,b
  6525  002B28  11D7               	iorwf	(??___flge+1)& (0+255),w,b
  6526  002B2A  11D8               	iorwf	(??___flge+2)& (0+255),w,b
  6527  002B2C  11D9               	iorwf	(??___flge+3)& (0+255),w,b
  6528  002B2E  A4D8               	btfss	status,2,c
  6529  002B30  D008               	goto	l710
  6530                           
  6531                           ; BSR set to: 0
  6532  002B32  0E00               	movlw	0
  6533  002B34  6FCE               	movwf	___flge@ff1& (0+255),b
  6534  002B36  0E00               	movlw	0
  6535  002B38  6FCF               	movwf	(___flge@ff1+1)& (0+255),b
  6536  002B3A  0E00               	movlw	0
  6537  002B3C  6FD0               	movwf	(___flge@ff1+2)& (0+255),b
  6538  002B3E  0E00               	movlw	0
  6539  002B40  6FD1               	movwf	(___flge@ff1+3)& (0+255),b
  6540  002B42                     l710:
  6541                           
  6542                           ; BSR set to: 0
  6543                           
  6544                           ; BSR set to: 0
  6545  002B42  0E00               	movlw	0
  6546  002B44  15D2               	andwf	___flge@ff2& (0+255),w,b
  6547  002B46  6FD6               	movwf	??___flge& (0+255),b
  6548  002B48  0E00               	movlw	0
  6549  002B4A  15D3               	andwf	(___flge@ff2+1)& (0+255),w,b
  6550  002B4C  6FD7               	movwf	(??___flge+1)& (0+255),b
  6551  002B4E  0E80               	movlw	128
  6552  002B50  15D4               	andwf	(___flge@ff2+2)& (0+255),w,b
  6553  002B52  6FD8               	movwf	(??___flge+2)& (0+255),b
  6554  002B54  0E7F               	movlw	127
  6555  002B56  15D5               	andwf	(___flge@ff2+3)& (0+255),w,b
  6556  002B58  6FD9               	movwf	(??___flge+3)& (0+255),b
  6557  002B5A  51D6               	movf	??___flge& (0+255),w,b
  6558  002B5C  11D7               	iorwf	(??___flge+1)& (0+255),w,b
  6559  002B5E  11D8               	iorwf	(??___flge+2)& (0+255),w,b
  6560  002B60  11D9               	iorwf	(??___flge+3)& (0+255),w,b
  6561  002B62  A4D8               	btfss	status,2,c
  6562  002B64  D008               	goto	l711
  6563                           
  6564                           ; BSR set to: 0
  6565  002B66  0E00               	movlw	0
  6566  002B68  6FD2               	movwf	___flge@ff2& (0+255),b
  6567  002B6A  0E00               	movlw	0
  6568  002B6C  6FD3               	movwf	(___flge@ff2+1)& (0+255),b
  6569  002B6E  0E00               	movlw	0
  6570  002B70  6FD4               	movwf	(___flge@ff2+2)& (0+255),b
  6571  002B72  0E00               	movlw	0
  6572  002B74  6FD5               	movwf	(___flge@ff2+3)& (0+255),b
  6573  002B76                     l711:
  6574                           
  6575                           ; BSR set to: 0
  6576                           
  6577                           ; BSR set to: 0
  6578  002B76  AFD1               	btfss	(___flge@ff1+3)& (0+255),7,b
  6579  002B78  D01D               	goto	l712
  6580                           
  6581                           ; BSR set to: 0
  6582  002B7A  C0CE  F0D6         	movff	___flge@ff1,??___flge
  6583  002B7E  C0CF  F0D7         	movff	___flge@ff1+1,??___flge+1
  6584  002B82  C0D0  F0D8         	movff	___flge@ff1+2,??___flge+2
  6585  002B86  C0D1  F0D9         	movff	___flge@ff1+3,??___flge+3
  6586  002B8A  1FD6               	comf	??___flge& (0+255),f,b
  6587  002B8C  1FD7               	comf	(??___flge+1)& (0+255),f,b
  6588  002B8E  1FD8               	comf	(??___flge+2)& (0+255),f,b
  6589  002B90  1FD9               	comf	(??___flge+3)& (0+255),f,b
  6590  002B92  2BD6               	incf	??___flge& (0+255),f,b
  6591  002B94  0E00               	movlw	0
  6592  002B96  23D7               	addwfc	(??___flge+1)& (0+255),f,b
  6593  002B98  23D8               	addwfc	(??___flge+2)& (0+255),f,b
  6594  002B9A  23D9               	addwfc	(??___flge+3)& (0+255),f,b
  6595  002B9C  0E00               	movlw	0
  6596  002B9E  25D6               	addwf	??___flge& (0+255),w,b
  6597  002BA0  6FCE               	movwf	___flge@ff1& (0+255),b
  6598  002BA2  0E00               	movlw	0
  6599  002BA4  21D7               	addwfc	(??___flge+1)& (0+255),w,b
  6600  002BA6  6FCF               	movwf	(___flge@ff1+1)& (0+255),b
  6601  002BA8  0E00               	movlw	0
  6602  002BAA  21D8               	addwfc	(??___flge+2)& (0+255),w,b
  6603  002BAC  6FD0               	movwf	(___flge@ff1+2)& (0+255),b
  6604  002BAE  0E80               	movlw	128
  6605  002BB0  21D9               	addwfc	(??___flge+3)& (0+255),w,b
  6606  002BB2  6FD1               	movwf	(___flge@ff1+3)& (0+255),b
  6607  002BB4                     l712:
  6608                           
  6609                           ; BSR set to: 0
  6610                           
  6611                           ; BSR set to: 0
  6612  002BB4  AFD5               	btfss	(___flge@ff2+3)& (0+255),7,b
  6613  002BB6  D01D               	goto	l713
  6614                           
  6615                           ; BSR set to: 0
  6616  002BB8  C0D2  F0D6         	movff	___flge@ff2,??___flge
  6617  002BBC  C0D3  F0D7         	movff	___flge@ff2+1,??___flge+1
  6618  002BC0  C0D4  F0D8         	movff	___flge@ff2+2,??___flge+2
  6619  002BC4  C0D5  F0D9         	movff	___flge@ff2+3,??___flge+3
  6620  002BC8  1FD6               	comf	??___flge& (0+255),f,b
  6621  002BCA  1FD7               	comf	(??___flge+1)& (0+255),f,b
  6622  002BCC  1FD8               	comf	(??___flge+2)& (0+255),f,b
  6623  002BCE  1FD9               	comf	(??___flge+3)& (0+255),f,b
  6624  002BD0  2BD6               	incf	??___flge& (0+255),f,b
  6625  002BD2  0E00               	movlw	0
  6626  002BD4  23D7               	addwfc	(??___flge+1)& (0+255),f,b
  6627  002BD6  23D8               	addwfc	(??___flge+2)& (0+255),f,b
  6628  002BD8  23D9               	addwfc	(??___flge+3)& (0+255),f,b
  6629  002BDA  0E00               	movlw	0
  6630  002BDC  25D6               	addwf	??___flge& (0+255),w,b
  6631  002BDE  6FD2               	movwf	___flge@ff2& (0+255),b
  6632  002BE0  0E00               	movlw	0
  6633  002BE2  21D7               	addwfc	(??___flge+1)& (0+255),w,b
  6634  002BE4  6FD3               	movwf	(___flge@ff2+1)& (0+255),b
  6635  002BE6  0E00               	movlw	0
  6636  002BE8  21D8               	addwfc	(??___flge+2)& (0+255),w,b
  6637  002BEA  6FD4               	movwf	(___flge@ff2+2)& (0+255),b
  6638  002BEC  0E80               	movlw	128
  6639  002BEE  21D9               	addwfc	(??___flge+3)& (0+255),w,b
  6640  002BF0  6FD5               	movwf	(___flge@ff2+3)& (0+255),b
  6641  002BF2                     l713:
  6642                           
  6643                           ; BSR set to: 0
  6644  002BF2  0E00               	movlw	0
  6645  002BF4  1BCE               	xorwf	___flge@ff1& (0+255),f,b
  6646  002BF6  0E00               	movlw	0
  6647  002BF8  1BCF               	xorwf	(___flge@ff1+1)& (0+255),f,b
  6648  002BFA  0E00               	movlw	0
  6649  002BFC  1BD0               	xorwf	(___flge@ff1+2)& (0+255),f,b
  6650  002BFE  0E80               	movlw	128
  6651  002C00  1BD1               	xorwf	(___flge@ff1+3)& (0+255),f,b
  6652  002C02  0E00               	movlw	0
  6653  002C04  1BD2               	xorwf	___flge@ff2& (0+255),f,b
  6654  002C06  0E00               	movlw	0
  6655  002C08  1BD3               	xorwf	(___flge@ff2+1)& (0+255),f,b
  6656  002C0A  0E00               	movlw	0
  6657  002C0C  1BD4               	xorwf	(___flge@ff2+2)& (0+255),f,b
  6658  002C0E  0E80               	movlw	128
  6659  002C10  1BD5               	xorwf	(___flge@ff2+3)& (0+255),f,b
  6660  002C12  51D2               	movf	___flge@ff2& (0+255),w,b
  6661  002C14  5DCE               	subwf	___flge@ff1& (0+255),w,b
  6662  002C16  51D3               	movf	(___flge@ff2+1)& (0+255),w,b
  6663  002C18  59CF               	subwfb	(___flge@ff1+1)& (0+255),w,b
  6664  002C1A  51D4               	movf	(___flge@ff2+2)& (0+255),w,b
  6665  002C1C  59D0               	subwfb	(___flge@ff1+2)& (0+255),w,b
  6666  002C1E  51D5               	movf	(___flge@ff2+3)& (0+255),w,b
  6667  002C20  59D1               	subwfb	(___flge@ff1+3)& (0+255),w,b
  6668  002C22  B0D8               	btfsc	status,0,c
  6669  002C24  D002               	goto	l3226
  6670                           
  6671                           ; BSR set to: 0
  6672  002C26  90D8               	bcf	status,0,c
  6673  002C28  0012               	return	
  6674  002C2A                     l3226:
  6675                           
  6676                           ; BSR set to: 0
  6677                           
  6678                           ; BSR set to: 0
  6679  002C2A  80D8               	bsf	status,0,c
  6680                           
  6681                           ; BSR set to: 0
  6682  002C2C  0012               	return	
  6683  002C2E                     __end_of___flge:
  6684                           	opt stack 0
  6685                           tblptru	equ	0xFF8
  6686                           tblptrh	equ	0xFF7
  6687                           tblptrl	equ	0xFF6
  6688                           tablat	equ	0xFF5
  6689                           prodh	equ	0xFF4
  6690                           prodl	equ	0xFF3
  6691                           indf0	equ	0xFEF
  6692                           postinc0	equ	0xFEE
  6693                           fsr0h	equ	0xFEA
  6694                           fsr0l	equ	0xFE9
  6695                           wreg	equ	0xFE8
  6696                           postdec1	equ	0xFE5
  6697                           fsr1l	equ	0xFE1
  6698                           indf2	equ	0xFDF
  6699                           postinc2	equ	0xFDE
  6700                           postdec2	equ	0xFDD
  6701                           fsr2h	equ	0xFDA
  6702                           fsr2l	equ	0xFD9
  6703                           status	equ	0xFD8
  6704                           
  6705 ;; *************** function _lcd_puts *****************
  6706 ;; Defined at:
  6707 ;;		line 120 in file "lcd_x8.c"
  6708 ;; Parameters:    Size  Location     Type
  6709 ;;  s               2   14[BANK0 ] PTR unsigned char 
  6710 ;;		 -> updateLCD@Buffer(32), 
  6711 ;; Auto vars:     Size  Location     Type
  6712 ;;		None
  6713 ;; Return value:  Size  Location     Type
  6714 ;;                  1    wreg      void 
  6715 ;; Registers used:
  6716 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6717 ;; Tracked objects:
  6718 ;;		On entry : 0/0
  6719 ;;		On exit  : 0/0
  6720 ;;		Unchanged: 0/0
  6721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6722 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6725 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6726 ;;Total ram usage:        2 bytes
  6727 ;; Hardware stack levels used:    1
  6728 ;; Hardware stack levels required when called:    8
  6729 ;; This function calls:
  6730 ;;		_lcd_putc
  6731 ;; This function is called by:
  6732 ;;		_updateLCD
  6733 ;; This function uses a non-reentrant model
  6734 ;;
  6735                           
  6736                           	psect	text15
  6737  0036D8                     __ptext15:
  6738                           	opt stack 0
  6739  0036D8                     _lcd_puts:
  6740                           	opt stack 21
  6741                           
  6742                           ;lcd_x8.c: 121: while (*s) {
  6743                           
  6744                           ; BSR set to: 0
  6745                           ;incstack = 0
  6746  0036D8  D00A               	goto	l248
  6747  0036DA                     
  6748                           ;lcd_x8.c: 122: lcd_putc(*s);
  6749  0036DA  C08E  FFD9         	movff	lcd_puts@s,fsr2l
  6750  0036DE  C08F  FFDA         	movff	lcd_puts@s+1,fsr2h
  6751  0036E2  50DF               	movf	indf2,w,c
  6752  0036E4  EC7E  F019         	call	_lcd_putc
  6753                           
  6754                           ;lcd_x8.c: 123: s++;
  6755  0036E8  0100               	movlb	0	; () banked
  6756  0036EA  4B8E               	infsnz	lcd_puts@s& (0+255),f,b
  6757  0036EC  2B8F               	incf	(lcd_puts@s+1)& (0+255),f,b
  6758  0036EE                     l248:
  6759                           
  6760                           ; BSR set to: 0
  6761  0036EE  C08E  FFD9         	movff	lcd_puts@s,fsr2l
  6762  0036F2  C08F  FFDA         	movff	lcd_puts@s+1,fsr2h
  6763  0036F6  50DF               	movf	indf2,w,c
  6764  0036F8  B4D8               	btfsc	status,2,c
  6765  0036FA  0012               	return	
  6766  0036FC  D7EE               	goto	l249
  6767  0036FE                     __end_of_lcd_puts:
  6768                           	opt stack 0
  6769                           tblptru	equ	0xFF8
  6770                           tblptrh	equ	0xFF7
  6771                           tblptrl	equ	0xFF6
  6772                           tablat	equ	0xFF5
  6773                           prodh	equ	0xFF4
  6774                           prodl	equ	0xFF3
  6775                           indf0	equ	0xFEF
  6776                           postinc0	equ	0xFEE
  6777                           fsr0h	equ	0xFEA
  6778                           fsr0l	equ	0xFE9
  6779                           wreg	equ	0xFE8
  6780                           postdec1	equ	0xFE5
  6781                           fsr1l	equ	0xFE1
  6782                           indf2	equ	0xFDF
  6783                           postinc2	equ	0xFDE
  6784                           postdec2	equ	0xFDD
  6785                           fsr2h	equ	0xFDA
  6786                           fsr2l	equ	0xFD9
  6787                           status	equ	0xFD8
  6788                           
  6789 ;; *************** function _lcd_putc *****************
  6790 ;; Defined at:
  6791 ;;		line 106 in file "lcd_x8.c"
  6792 ;; Parameters:    Size  Location     Type
  6793 ;;  c               1    wreg     unsigned char 
  6794 ;; Auto vars:     Size  Location     Type
  6795 ;;  c               1   13[BANK0 ] unsigned char 
  6796 ;; Return value:  Size  Location     Type
  6797 ;;                  1    wreg      void 
  6798 ;; Registers used:
  6799 ;;		wreg, status,2, status,0, cstack
  6800 ;; Tracked objects:
  6801 ;;		On entry : 0/0
  6802 ;;		On exit  : 0/0
  6803 ;;		Unchanged: 0/0
  6804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6806 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6808 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6809 ;;Total ram usage:        1 bytes
  6810 ;; Hardware stack levels used:    1
  6811 ;; Hardware stack levels required when called:    7
  6812 ;; This function calls:
  6813 ;;		_delay_ms
  6814 ;;		_lcd_gotoxy
  6815 ;;		_lcd_send_byte
  6816 ;; This function is called by:
  6817 ;;		_main
  6818 ;;		_lcd_puts
  6819 ;; This function uses a non-reentrant model
  6820 ;;
  6821                           
  6822                           	psect	text16
  6823  0032FC                     __ptext16:
  6824                           	opt stack 0
  6825  0032FC                     _lcd_putc:
  6826                           	opt stack 21
  6827                           
  6828                           ;incstack = 0
  6829                           ;lcd_putc@c stored from wreg
  6830  0032FC  0100               	movlb	0	; () banked
  6831  0032FE  6F8D               	movwf	lcd_putc@c& (0+255),b
  6832                           
  6833                           ;lcd_x8.c: 107: switch (c) {
  6834  003300  D022               	goto	l239
  6835  003302  0E01               	movlw	1
  6836  003304  0100               	movlb	0	; () banked
  6837  003306  6F88               	movwf	lcd_send_byte@n& (0+255),b
  6838  003308  0E00               	movlw	0
  6839  00330A  ECE0  F019         	call	_lcd_send_byte
  6840                           
  6841                           ;lcd_x8.c: 109: delay_ms(2);
  6842  00330E  0E00               	movlw	0
  6843  003310  0100               	movlb	0	; () banked
  6844  003312  6F81               	movwf	(delay_ms@n+1)& (0+255),b
  6845  003314  0E02               	movlw	2
  6846  003316  6F80               	movwf	delay_ms@n& (0+255),b
  6847  003318  EC43  F01B         	call	_delay_ms	;wreg free
  6848                           
  6849                           ;lcd_x8.c: 110: break;
  6850  00331C  0012               	return	
  6851  00331E  0E02               	movlw	2
  6852  003320  0100               	movlb	0	; () banked
  6853  003322  6F8A               	movwf	lcd_gotoxy@y& (0+255),b
  6854  003324  0E01               	movlw	1
  6855  003326  EC55  F01A         	call	_lcd_gotoxy
  6856                           
  6857                           ;lcd_x8.c: 112: break;
  6858  00332A  0012               	return	
  6859  00332C  0E10               	movlw	16
  6860  00332E  0100               	movlb	0	; () banked
  6861  003330  6F88               	movwf	lcd_send_byte@n& (0+255),b
  6862  003332  0E00               	movlw	0
  6863  003334  ECE0  F019         	call	_lcd_send_byte
  6864                           
  6865                           ;lcd_x8.c: 114: break;
  6866  003338  0012               	return	
  6867  00333A  C08D  F088         	movff	lcd_putc@c,lcd_send_byte@n
  6868  00333E  0E01               	movlw	1
  6869  003340  ECE0  F019         	call	_lcd_send_byte
  6870                           
  6871                           ;lcd_x8.c: 117: }
  6872                           
  6873                           ;lcd_x8.c: 116: break;
  6874  003344  0012               	return	
  6875  003346                     l239:
  6876  003346  0100               	movlb	0	; () banked
  6877  003348  518D               	movf	lcd_putc@c& (0+255),w,b
  6878                           
  6879                           ; Switch size 1, requested type "space"
  6880                           ; Number of cases is 3, Range of values is 8 to 12
  6881                           ; switch strategies available:
  6882                           ; Name         Instructions Cycles
  6883                           ; simple_byte           10     6 (average)
  6884                           ;	Chosen strategy is simple_byte
  6885  00334A  0A08               	xorlw	8	; case 8
  6886  00334C  B4D8               	btfsc	status,2,c
  6887  00334E  D7EE               	goto	l243
  6888  003350  0A02               	xorlw	2	; case 10
  6889  003352  B4D8               	btfsc	status,2,c
  6890  003354  D7E4               	goto	l242
  6891  003356  0A06               	xorlw	6	; case 12
  6892  003358  B4D8               	btfsc	status,2,c
  6893  00335A  D7D3               	goto	l240
  6894  00335C  D7EE               	goto	l244
  6895  00335E                     __end_of_lcd_putc:
  6896                           	opt stack 0
  6897                           tblptru	equ	0xFF8
  6898                           tblptrh	equ	0xFF7
  6899                           tblptrl	equ	0xFF6
  6900                           tablat	equ	0xFF5
  6901                           prodh	equ	0xFF4
  6902                           prodl	equ	0xFF3
  6903                           indf0	equ	0xFEF
  6904                           postinc0	equ	0xFEE
  6905                           fsr0h	equ	0xFEA
  6906                           fsr0l	equ	0xFE9
  6907                           wreg	equ	0xFE8
  6908                           postdec1	equ	0xFE5
  6909                           fsr1l	equ	0xFE1
  6910                           indf2	equ	0xFDF
  6911                           postinc2	equ	0xFDE
  6912                           postdec2	equ	0xFDD
  6913                           fsr2h	equ	0xFDA
  6914                           fsr2l	equ	0xFD9
  6915                           status	equ	0xFD8
  6916                           
  6917 ;; *************** function _lcd_gotoxy *****************
  6918 ;; Defined at:
  6919 ;;		line 89 in file "lcd_x8.c"
  6920 ;; Parameters:    Size  Location     Type
  6921 ;;  x               1    wreg     unsigned char 
  6922 ;;  y               1   10[BANK0 ] unsigned char 
  6923 ;; Auto vars:     Size  Location     Type
  6924 ;;  x               1   11[BANK0 ] unsigned char 
  6925 ;;  address         1   12[BANK0 ] unsigned char 
  6926 ;; Return value:  Size  Location     Type
  6927 ;;                  1    wreg      void 
  6928 ;; Registers used:
  6929 ;;		wreg, status,2, status,0, cstack
  6930 ;; Tracked objects:
  6931 ;;		On entry : 0/0
  6932 ;;		On exit  : 0/0
  6933 ;;		Unchanged: 0/0
  6934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6935 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6936 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6938 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6939 ;;Total ram usage:        3 bytes
  6940 ;; Hardware stack levels used:    1
  6941 ;; Hardware stack levels required when called:    6
  6942 ;; This function calls:
  6943 ;;		_lcd_send_byte
  6944 ;; This function is called by:
  6945 ;;		_updateLCD
  6946 ;;		_lcd_putc
  6947 ;; This function uses a non-reentrant model
  6948 ;;
  6949                           
  6950                           	psect	text17
  6951  0034AA                     __ptext17:
  6952                           	opt stack 0
  6953  0034AA                     _lcd_gotoxy:
  6954                           	opt stack 21
  6955                           
  6956                           ;incstack = 0
  6957                           ;lcd_gotoxy@x stored from wreg
  6958  0034AA  0100               	movlb	0	; () banked
  6959  0034AC  6F8B               	movwf	lcd_gotoxy@x& (0+255),b
  6960                           
  6961                           ;lcd_x8.c: 90: unsigned char address;
  6962                           ;lcd_x8.c: 92: switch (y) {
  6963  0034AE  D00A               	goto	l230
  6964  0034B0  0E80               	movlw	128
  6965  0034B2  0100               	movlb	0	; () banked
  6966  0034B4  D005               	goto	L8
  6967  0034B6                     
  6968                           ; BSR set to: 0
  6969                           
  6970                           ; BSR set to: 0
  6971  0034B6  0EC0               	movlw	192
  6972  0034B8  D003               	goto	L8
  6973  0034BA                     
  6974                           ; BSR set to: 0
  6975                           
  6976                           ; BSR set to: 0
  6977  0034BA  0E90               	movlw	144
  6978  0034BC  D001               	goto	L8
  6979  0034BE                     
  6980                           ; BSR set to: 0
  6981                           
  6982                           ; BSR set to: 0
  6983  0034BE  0ED0               	movlw	208
  6984  0034C0                     L8:
  6985  0034C0  6F8C               	movwf	lcd_gotoxy@address& (0+255),b
  6986                           
  6987                           ; BSR set to: 0
  6988                           ;lcd_x8.c: 101: }
  6989                           
  6990                           ;lcd_x8.c: 100: break;
  6991  0034C2  D00E               	goto	l232
  6992  0034C4                     l230:
  6993                           
  6994                           ; BSR set to: 0
  6995  0034C4  0100               	movlb	0	; () banked
  6996  0034C6  518A               	movf	lcd_gotoxy@y& (0+255),w,b
  6997                           
  6998                           ; Switch size 1, requested type "space"
  6999                           ; Number of cases is 4, Range of values is 1 to 4
  7000                           ; switch strategies available:
  7001                           ; Name         Instructions Cycles
  7002                           ; simple_byte           13     7 (average)
  7003                           ;	Chosen strategy is simple_byte
  7004  0034C8  0A01               	xorlw	1	; case 1
  7005  0034CA  B4D8               	btfsc	status,2,c
  7006  0034CC  D7F1               	goto	l231
  7007  0034CE  0A03               	xorlw	3	; case 2
  7008  0034D0  B4D8               	btfsc	status,2,c
  7009  0034D2  D7F1               	goto	l233
  7010  0034D4  0A01               	xorlw	1	; case 3
  7011  0034D6  B4D8               	btfsc	status,2,c
  7012  0034D8  D7F0               	goto	l234
  7013  0034DA  0A07               	xorlw	7	; case 4
  7014  0034DC  B4D8               	btfsc	status,2,c
  7015  0034DE  D7EF               	goto	l235
  7016  0034E0                     l232:
  7017                           
  7018                           ; BSR set to: 0
  7019                           ;lcd_x8.c: 102: address += x - 1;
  7020                           
  7021                           ; BSR set to: 0
  7022  0034E0  058B               	decf	lcd_gotoxy@x& (0+255),w,b
  7023  0034E2  278C               	addwf	lcd_gotoxy@address& (0+255),f,b
  7024                           
  7025                           ; BSR set to: 0
  7026                           ;lcd_x8.c: 103: lcd_send_byte(0, (unsigned char) (0x80 | address));
  7027  0034E4  518C               	movf	lcd_gotoxy@address& (0+255),w,b
  7028  0034E6  0980               	iorlw	128
  7029  0034E8  6F88               	movwf	lcd_send_byte@n& (0+255),b
  7030  0034EA  0E00               	movlw	0
  7031  0034EC  ECE0  F019         	call	_lcd_send_byte
  7032  0034F0  0012               	return		;funcret
  7033  0034F2                     __end_of_lcd_gotoxy:
  7034                           	opt stack 0
  7035                           tblptru	equ	0xFF8
  7036                           tblptrh	equ	0xFF7
  7037                           tblptrl	equ	0xFF6
  7038                           tablat	equ	0xFF5
  7039                           prodh	equ	0xFF4
  7040                           prodl	equ	0xFF3
  7041                           indf0	equ	0xFEF
  7042                           postinc0	equ	0xFEE
  7043                           fsr0h	equ	0xFEA
  7044                           fsr0l	equ	0xFE9
  7045                           wreg	equ	0xFE8
  7046                           postdec1	equ	0xFE5
  7047                           fsr1l	equ	0xFE1
  7048                           indf2	equ	0xFDF
  7049                           postinc2	equ	0xFDE
  7050                           postdec2	equ	0xFDD
  7051                           fsr2h	equ	0xFDA
  7052                           fsr2l	equ	0xFD9
  7053                           status	equ	0xFD8
  7054                           
  7055 ;; *************** function _getMode *****************
  7056 ;; Defined at:
  7057 ;;		line 230 in file "pwm_asl.c"
  7058 ;; Parameters:    Size  Location     Type
  7059 ;;		None
  7060 ;; Auto vars:     Size  Location     Type
  7061 ;;		None
  7062 ;; Return value:  Size  Location     Type
  7063 ;;                  2    0[BANK0 ] PTR unsigned char 
  7064 ;; Registers used:
  7065 ;;		wreg, status,2, status,0
  7066 ;; Tracked objects:
  7067 ;;		On entry : 0/0
  7068 ;;		On exit  : 0/0
  7069 ;;		Unchanged: 0/0
  7070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7071 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7073 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7074 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7075 ;;Total ram usage:        4 bytes
  7076 ;; Hardware stack levels used:    1
  7077 ;; Hardware stack levels required when called:    3
  7078 ;; This function calls:
  7079 ;;		Nothing
  7080 ;; This function is called by:
  7081 ;;		_updateLCD
  7082 ;; This function uses a non-reentrant model
  7083 ;;
  7084                           
  7085                           	psect	text18
  7086  00335E                     __ptext18:
  7087                           	opt stack 0
  7088  00335E                     _getMode:
  7089                           	opt stack 26
  7090                           
  7091                           ;pwm_asl.c: 231: switch (selectedMode){
  7092                           
  7093                           ;incstack = 0
  7094  00335E  D015               	goto	l137
  7095  003360  0ECB               	movlw	low STR_1
  7096  003362  0100               	movlb	0	; () banked
  7097  003364  6F80               	movwf	?_getMode& (0+255),b
  7098  003366  0EFF               	movlw	high STR_1
  7099  003368  6F81               	movwf	(?_getMode+1)& (0+255),b
  7100                           
  7101                           ; BSR set to: 0
  7102  00336A  0012               	return	
  7103  00336C                     
  7104                           ; BSR set to: 0
  7105                           
  7106                           ; BSR set to: 0
  7107  00336C  0EBD               	movlw	low STR_2
  7108  00336E  6F80               	movwf	?_getMode& (0+255),b
  7109  003370  0EFF               	movlw	high STR_2
  7110  003372  6F81               	movwf	(?_getMode+1)& (0+255),b
  7111                           
  7112                           ; BSR set to: 0
  7113  003374  0012               	return	
  7114  003376                     
  7115                           ; BSR set to: 0
  7116                           
  7117                           ; BSR set to: 0
  7118  003376  0ED8               	movlw	low STR_3
  7119  003378  6F80               	movwf	?_getMode& (0+255),b
  7120  00337A  0EFF               	movlw	high STR_3
  7121  00337C  6F81               	movwf	(?_getMode+1)& (0+255),b
  7122                           
  7123                           ; BSR set to: 0
  7124  00337E  0012               	return	
  7125  003380                     
  7126                           ; BSR set to: 0
  7127                           
  7128                           ; BSR set to: 0
  7129  003380  0EAD               	movlw	low STR_4
  7130  003382  6F80               	movwf	?_getMode& (0+255),b
  7131  003384  0EFF               	movlw	high STR_4
  7132  003386  6F81               	movwf	(?_getMode+1)& (0+255),b
  7133                           
  7134                           ; BSR set to: 0
  7135  003388  0012               	return	
  7136  00338A                     l137:
  7137                           
  7138                           ; BSR set to: 0
  7139  00338A  C049  F082         	movff	_selectedMode,??_getMode
  7140  00338E  C04A  F083         	movff	_selectedMode+1,??_getMode+1
  7141                           
  7142                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7143                           ; Switch size 1, requested type "space"
  7144                           ; Number of cases is 1, Range of values is 0 to 0
  7145                           ; switch strategies available:
  7146                           ; Name         Instructions Cycles
  7147                           ; simple_byte            4     3 (average)
  7148                           ;	Chosen strategy is simple_byte
  7149  003392  0100               	movlb	0	; () banked
  7150  003394  5183               	movf	(??_getMode+1)& (0+255),w,b
  7151  003396  0A00               	xorlw	0	; case 0
  7152  003398  A4D8               	btfss	status,2,c
  7153  00339A  D00D               	goto	l143
  7154                           
  7155                           ; BSR set to: 0
  7156                           ; Switch size 1, requested type "space"
  7157                           ; Number of cases is 4, Range of values is 0 to 3
  7158                           ; switch strategies available:
  7159                           ; Name         Instructions Cycles
  7160                           ; simple_byte           13     7 (average)
  7161                           ;	Chosen strategy is simple_byte
  7162  00339C  5182               	movf	??_getMode& (0+255),w,b
  7163  00339E  0A00               	xorlw	0	; case 0
  7164  0033A0  B4D8               	btfsc	status,2,c
  7165  0033A2  D7DE               	goto	l138
  7166  0033A4  0A01               	xorlw	1	; case 1
  7167  0033A6  B4D8               	btfsc	status,2,c
  7168  0033A8  D7E1               	goto	l140
  7169  0033AA  0A03               	xorlw	3	; case 2
  7170  0033AC  B4D8               	btfsc	status,2,c
  7171  0033AE  D7E3               	goto	l141
  7172  0033B0  0A01               	xorlw	1	; case 3
  7173  0033B2  B4D8               	btfsc	status,2,c
  7174  0033B4  D7E5               	goto	l142
  7175  0033B6                     l143:
  7176                           
  7177                           ; BSR set to: 0
  7178                           ;pwm_asl.c: 237: return "OFF";
  7179                           
  7180                           ; BSR set to: 0
  7181  0033B6  0EFB               	movlw	low STR_5
  7182  0033B8  6F80               	movwf	?_getMode& (0+255),b
  7183  0033BA  0EFF               	movlw	high STR_5
  7184  0033BC  6F81               	movwf	(?_getMode+1)& (0+255),b
  7185  0033BE  0012               	return	
  7186  0033C0                     __end_of_getMode:
  7187                           	opt stack 0
  7188                           tblptru	equ	0xFF8
  7189                           tblptrh	equ	0xFF7
  7190                           tblptrl	equ	0xFF6
  7191                           tablat	equ	0xFF5
  7192                           prodh	equ	0xFF4
  7193                           prodl	equ	0xFF3
  7194                           indf0	equ	0xFEF
  7195                           postinc0	equ	0xFEE
  7196                           fsr0h	equ	0xFEA
  7197                           fsr0l	equ	0xFE9
  7198                           wreg	equ	0xFE8
  7199                           postdec1	equ	0xFE5
  7200                           fsr1l	equ	0xFE1
  7201                           indf2	equ	0xFDF
  7202                           postinc2	equ	0xFDE
  7203                           postdec2	equ	0xFDD
  7204                           fsr2h	equ	0xFDA
  7205                           fsr2l	equ	0xFD9
  7206                           status	equ	0xFD8
  7207                           
  7208 ;; *************** function _turnONHeater *****************
  7209 ;; Defined at:
  7210 ;;		line 279 in file "pwm_asl.c"
  7211 ;; Parameters:    Size  Location     Type
  7212 ;;		None
  7213 ;; Auto vars:     Size  Location     Type
  7214 ;;		None
  7215 ;; Return value:  Size  Location     Type
  7216 ;;                  1    wreg      void 
  7217 ;; Registers used:
  7218 ;;		None
  7219 ;; Tracked objects:
  7220 ;;		On entry : 0/0
  7221 ;;		On exit  : 0/0
  7222 ;;		Unchanged: 0/0
  7223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7228 ;;Total ram usage:        0 bytes
  7229 ;; Hardware stack levels used:    1
  7230 ;; Hardware stack levels required when called:    3
  7231 ;; This function calls:
  7232 ;;		Nothing
  7233 ;; This function is called by:
  7234 ;;		_main
  7235 ;; This function uses a non-reentrant model
  7236 ;;
  7237                           
  7238                           	psect	text19
  7239  00377E                     __ptext19:
  7240                           	opt stack 0
  7241  00377E                     _turnONHeater:
  7242                           	opt stack 27
  7243                           
  7244                           ;pwm_asl.c: 280: PORTCbits.RC5 =1;
  7245                           
  7246                           ; BSR set to: 0
  7247                           ;incstack = 0
  7248  00377E  8A82               	bsf	3970,5,c	;volatile
  7249  003780  0012               	return		;funcret
  7250  003782                     __end_of_turnONHeater:
  7251                           	opt stack 0
  7252                           tblptru	equ	0xFF8
  7253                           tblptrh	equ	0xFF7
  7254                           tblptrl	equ	0xFF6
  7255                           tablat	equ	0xFF5
  7256                           prodh	equ	0xFF4
  7257                           prodl	equ	0xFF3
  7258                           indf0	equ	0xFEF
  7259                           postinc0	equ	0xFEE
  7260                           fsr0h	equ	0xFEA
  7261                           fsr0l	equ	0xFE9
  7262                           wreg	equ	0xFE8
  7263                           postdec1	equ	0xFE5
  7264                           fsr1l	equ	0xFE1
  7265                           indf2	equ	0xFDF
  7266                           postinc2	equ	0xFDE
  7267                           postdec2	equ	0xFDD
  7268                           fsr2h	equ	0xFDA
  7269                           fsr2l	equ	0xFD9
  7270                           status	equ	0xFD8
  7271                           
  7272 ;; *************** function _turnONCooler *****************
  7273 ;; Defined at:
  7274 ;;		line 276 in file "pwm_asl.c"
  7275 ;; Parameters:    Size  Location     Type
  7276 ;;		None
  7277 ;; Auto vars:     Size  Location     Type
  7278 ;;		None
  7279 ;; Return value:  Size  Location     Type
  7280 ;;                  1    wreg      void 
  7281 ;; Registers used:
  7282 ;;		None
  7283 ;; Tracked objects:
  7284 ;;		On entry : 0/0
  7285 ;;		On exit  : 0/0
  7286 ;;		Unchanged: 0/0
  7287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7292 ;;Total ram usage:        0 bytes
  7293 ;; Hardware stack levels used:    1
  7294 ;; Hardware stack levels required when called:    3
  7295 ;; This function calls:
  7296 ;;		Nothing
  7297 ;; This function is called by:
  7298 ;;		_main
  7299 ;; This function uses a non-reentrant model
  7300 ;;
  7301                           
  7302                           	psect	text20
  7303  003782                     __ptext20:
  7304                           	opt stack 0
  7305  003782                     _turnONCooler:
  7306                           	opt stack 27
  7307                           
  7308                           ;pwm_asl.c: 277: PORTCbits.RC2 =1 ;
  7309                           
  7310                           ;incstack = 0
  7311  003782  8482               	bsf	3970,2,c	;volatile
  7312  003784  0012               	return		;funcret
  7313  003786                     __end_of_turnONCooler:
  7314                           	opt stack 0
  7315                           tblptru	equ	0xFF8
  7316                           tblptrh	equ	0xFF7
  7317                           tblptrl	equ	0xFF6
  7318                           tablat	equ	0xFF5
  7319                           prodh	equ	0xFF4
  7320                           prodl	equ	0xFF3
  7321                           indf0	equ	0xFEF
  7322                           postinc0	equ	0xFEE
  7323                           fsr0h	equ	0xFEA
  7324                           fsr0l	equ	0xFE9
  7325                           wreg	equ	0xFE8
  7326                           postdec1	equ	0xFE5
  7327                           fsr1l	equ	0xFE1
  7328                           indf2	equ	0xFDF
  7329                           postinc2	equ	0xFDE
  7330                           postdec2	equ	0xFDD
  7331                           fsr2h	equ	0xFDA
  7332                           fsr2l	equ	0xFD9
  7333                           status	equ	0xFD8
  7334                           
  7335 ;; *************** function _turnOFFHeater *****************
  7336 ;; Defined at:
  7337 ;;		line 272 in file "pwm_asl.c"
  7338 ;; Parameters:    Size  Location     Type
  7339 ;;		None
  7340 ;; Auto vars:     Size  Location     Type
  7341 ;;		None
  7342 ;; Return value:  Size  Location     Type
  7343 ;;                  1    wreg      void 
  7344 ;; Registers used:
  7345 ;;		None
  7346 ;; Tracked objects:
  7347 ;;		On entry : 0/0
  7348 ;;		On exit  : 0/0
  7349 ;;		Unchanged: 0/0
  7350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7355 ;;Total ram usage:        0 bytes
  7356 ;; Hardware stack levels used:    1
  7357 ;; Hardware stack levels required when called:    3
  7358 ;; This function calls:
  7359 ;;		Nothing
  7360 ;; This function is called by:
  7361 ;;		_main
  7362 ;; This function uses a non-reentrant model
  7363 ;;
  7364                           
  7365                           	psect	text21
  7366  003786                     __ptext21:
  7367                           	opt stack 0
  7368  003786                     _turnOFFHeater:
  7369                           	opt stack 27
  7370                           
  7371                           ;pwm_asl.c: 273: PORTCbits.RC5 =0;
  7372                           
  7373                           ;incstack = 0
  7374  003786  9A82               	bcf	3970,5,c	;volatile
  7375  003788  0012               	return		;funcret
  7376  00378A                     __end_of_turnOFFHeater:
  7377                           	opt stack 0
  7378                           tblptru	equ	0xFF8
  7379                           tblptrh	equ	0xFF7
  7380                           tblptrl	equ	0xFF6
  7381                           tablat	equ	0xFF5
  7382                           prodh	equ	0xFF4
  7383                           prodl	equ	0xFF3
  7384                           indf0	equ	0xFEF
  7385                           postinc0	equ	0xFEE
  7386                           fsr0h	equ	0xFEA
  7387                           fsr0l	equ	0xFE9
  7388                           wreg	equ	0xFE8
  7389                           postdec1	equ	0xFE5
  7390                           fsr1l	equ	0xFE1
  7391                           indf2	equ	0xFDF
  7392                           postinc2	equ	0xFDE
  7393                           postdec2	equ	0xFDD
  7394                           fsr2h	equ	0xFDA
  7395                           fsr2l	equ	0xFD9
  7396                           status	equ	0xFD8
  7397                           
  7398 ;; *************** function _turnOFFCooler *****************
  7399 ;; Defined at:
  7400 ;;		line 267 in file "pwm_asl.c"
  7401 ;; Parameters:    Size  Location     Type
  7402 ;;		None
  7403 ;; Auto vars:     Size  Location     Type
  7404 ;;		None
  7405 ;; Return value:  Size  Location     Type
  7406 ;;                  1    wreg      void 
  7407 ;; Registers used:
  7408 ;;		wreg, status,2, status,0, cstack
  7409 ;; Tracked objects:
  7410 ;;		On entry : 0/0
  7411 ;;		On exit  : 0/0
  7412 ;;		Unchanged: 0/0
  7413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7418 ;;Total ram usage:        0 bytes
  7419 ;; Hardware stack levels used:    1
  7420 ;; Hardware stack levels required when called:    4
  7421 ;; This function calls:
  7422 ;;		_set_pwm1_raw
  7423 ;; This function is called by:
  7424 ;;		_main
  7425 ;; This function uses a non-reentrant model
  7426 ;;
  7427                           
  7428                           	psect	text22
  7429  003746                     __ptext22:
  7430                           	opt stack 0
  7431  003746                     _turnOFFCooler:
  7432                           	opt stack 26
  7433                           
  7434                           ;pwm_asl.c: 268: PORTCbits.RC2 =0 ;
  7435                           
  7436                           ;incstack = 0
  7437  003746  9482               	bcf	3970,2,c	;volatile
  7438                           
  7439                           ;pwm_asl.c: 269: set_pwm1_raw(0);
  7440  003748  0E00               	movlw	0
  7441  00374A  0100               	movlb	0	; () banked
  7442  00374C  6FDC               	movwf	(set_pwm1_raw@raw_value+1)& (0+255),b
  7443  00374E  0E00               	movlw	0
  7444  003750  6FDB               	movwf	set_pwm1_raw@raw_value& (0+255),b
  7445  003752  ECE9  F01A         	call	_set_pwm1_raw	;wreg free
  7446  003756  0012               	return		;funcret
  7447  003758                     __end_of_turnOFFCooler:
  7448                           	opt stack 0
  7449                           tblptru	equ	0xFF8
  7450                           tblptrh	equ	0xFF7
  7451                           tblptrl	equ	0xFF6
  7452                           tablat	equ	0xFF5
  7453                           prodh	equ	0xFF4
  7454                           prodl	equ	0xFF3
  7455                           indf0	equ	0xFEF
  7456                           postinc0	equ	0xFEE
  7457                           fsr0h	equ	0xFEA
  7458                           fsr0l	equ	0xFE9
  7459                           wreg	equ	0xFE8
  7460                           postdec1	equ	0xFE5
  7461                           fsr1l	equ	0xFE1
  7462                           indf2	equ	0xFDF
  7463                           postinc2	equ	0xFDE
  7464                           postdec2	equ	0xFDD
  7465                           fsr2h	equ	0xFDA
  7466                           fsr2l	equ	0xFD9
  7467                           status	equ	0xFD8
  7468                           
  7469 ;; *************** function _setupPorts3 *****************
  7470 ;; Defined at:
  7471 ;;		line 351 in file "pwm_asl.c"
  7472 ;; Parameters:    Size  Location     Type
  7473 ;;		None
  7474 ;; Auto vars:     Size  Location     Type
  7475 ;;		None
  7476 ;; Return value:  Size  Location     Type
  7477 ;;                  1    wreg      void 
  7478 ;; Registers used:
  7479 ;;		wreg, status,2
  7480 ;; Tracked objects:
  7481 ;;		On entry : 0/0
  7482 ;;		On exit  : 0/0
  7483 ;;		Unchanged: 0/0
  7484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7489 ;;Total ram usage:        0 bytes
  7490 ;; Hardware stack levels used:    1
  7491 ;; Hardware stack levels required when called:    3
  7492 ;; This function calls:
  7493 ;;		Nothing
  7494 ;; This function is called by:
  7495 ;;		_main
  7496 ;; This function uses a non-reentrant model
  7497 ;;
  7498                           
  7499                           	psect	text23
  7500  003532                     __ptext23:
  7501                           	opt stack 0
  7502  003532                     _setupPorts3:
  7503                           	opt stack 27
  7504                           
  7505                           ;pwm_asl.c: 353: OSCCONbits.IRCF = 0b1110;
  7506                           
  7507                           ;incstack = 0
  7508  003532  50D3               	movf	4051,w,c	;volatile
  7509  003534  0B8F               	andlw	-113
  7510  003536  0960               	iorlw	96
  7511  003538  6ED3               	movwf	4051,c	;volatile
  7512                           
  7513                           ;pwm_asl.c: 356: T3CONbits.TMR3CS = 0;
  7514  00353A  92B1               	bcf	4017,1,c	;volatile
  7515                           
  7516                           ;pwm_asl.c: 358: T3CONbits.nT3SYNC = 1;
  7517  00353C  84B1               	bsf	4017,2,c	;volatile
  7518                           
  7519                           ;pwm_asl.c: 359: T3CONbits.TMR3ON = 1;
  7520  00353E  80B1               	bsf	4017,0,c	;volatile
  7521                           
  7522                           ;pwm_asl.c: 362: TMR3 = 0;
  7523  003540  0E00               	movlw	0
  7524  003542  6EB3               	movwf	4019,c	;volatile
  7525  003544  0E00               	movlw	0
  7526  003546  6EB2               	movwf	4018,c	;volatile
  7527                           
  7528                           ;pwm_asl.c: 365: TRISCbits.TRISC5 = 0;
  7529  003548  9A94               	bcf	3988,5,c	;volatile
  7530                           
  7531                           ;pwm_asl.c: 368: INTCONbits.GIE = 1;
  7532  00354A  8EF2               	bsf	intcon,7,c	;volatile
  7533                           
  7534                           ;pwm_asl.c: 376: TMR3H = 6249 >> 8;
  7535  00354C  0E18               	movlw	24
  7536  00354E  6EB3               	movwf	4019,c	;volatile
  7537                           
  7538                           ;pwm_asl.c: 377: TMR3L = 6249 & 0xFF;
  7539  003550  0E69               	movlw	105
  7540  003552  6EB2               	movwf	4018,c	;volatile
  7541                           
  7542                           ;pwm_asl.c: 378: T3CONbits.T3CKPS = 0b01;
  7543  003554  50B1               	movf	4017,w,c	;volatile
  7544  003556  0BCF               	andlw	-49
  7545  003558  0910               	iorlw	16
  7546  00355A  6EB1               	movwf	4017,c	;volatile
  7547                           
  7548                           ;pwm_asl.c: 382: T3CONbits.T3CKPS = 0b01;
  7549  00355C  50B1               	movf	4017,w,c	;volatile
  7550  00355E  0BCF               	andlw	-49
  7551  003560  0910               	iorlw	16
  7552  003562  6EB1               	movwf	4017,c	;volatile
  7553                           
  7554                           ;pwm_asl.c: 386: TMR3H = 6249 >> 8;
  7555  003564  0E18               	movlw	24
  7556  003566  6EB3               	movwf	4019,c	;volatile
  7557                           
  7558                           ;pwm_asl.c: 387: TMR3L = 6249 & 0xFF;
  7559  003568  0E69               	movlw	105
  7560  00356A  6EB2               	movwf	4018,c	;volatile
  7561  00356C  0012               	return		;funcret
  7562  00356E                     __end_of_setupPorts3:
  7563                           	opt stack 0
  7564                           tblptru	equ	0xFF8
  7565                           tblptrh	equ	0xFF7
  7566                           tblptrl	equ	0xFF6
  7567                           tablat	equ	0xFF5
  7568                           prodh	equ	0xFF4
  7569                           prodl	equ	0xFF3
  7570                           intcon	equ	0xFF2
  7571                           indf0	equ	0xFEF
  7572                           postinc0	equ	0xFEE
  7573                           fsr0h	equ	0xFEA
  7574                           fsr0l	equ	0xFE9
  7575                           wreg	equ	0xFE8
  7576                           postdec1	equ	0xFE5
  7577                           fsr1l	equ	0xFE1
  7578                           indf2	equ	0xFDF
  7579                           postinc2	equ	0xFDE
  7580                           postdec2	equ	0xFDD
  7581                           fsr2h	equ	0xFDA
  7582                           fsr2l	equ	0xFD9
  7583                           status	equ	0xFD8
  7584                           
  7585 ;; *************** function _setupPorts *****************
  7586 ;; Defined at:
  7587 ;;		line 308 in file "pwm_asl.c"
  7588 ;; Parameters:    Size  Location     Type
  7589 ;;		None
  7590 ;; Auto vars:     Size  Location     Type
  7591 ;;		None
  7592 ;; Return value:  Size  Location     Type
  7593 ;;                  1    wreg      void 
  7594 ;; Registers used:
  7595 ;;		wreg, status,2
  7596 ;; Tracked objects:
  7597 ;;		On entry : 0/0
  7598 ;;		On exit  : 0/0
  7599 ;;		Unchanged: 0/0
  7600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7605 ;;Total ram usage:        0 bytes
  7606 ;; Hardware stack levels used:    1
  7607 ;; Hardware stack levels required when called:    3
  7608 ;; This function calls:
  7609 ;;		Nothing
  7610 ;; This function is called by:
  7611 ;;		_main
  7612 ;; This function uses a non-reentrant model
  7613 ;;
  7614                           
  7615                           	psect	text24
  7616  00365C                     __ptext24:
  7617                           	opt stack 0
  7618  00365C                     _setupPorts:
  7619                           	opt stack 27
  7620                           
  7621                           ;pwm_asl.c: 309: ADCON0 = 0;
  7622                           
  7623                           ;incstack = 0
  7624  00365C  0E00               	movlw	0
  7625  00365E  6EC2               	movwf	4034,c	;volatile
  7626                           
  7627                           ;pwm_asl.c: 310: ADCON1 = 0b00001100;
  7628  003660  0E0C               	movlw	12
  7629  003662  6EC1               	movwf	4033,c	;volatile
  7630                           
  7631                           ;pwm_asl.c: 312: TRISB = 0xFF;
  7632  003664  6893               	setf	3987,c	;volatile
  7633                           
  7634                           ;pwm_asl.c: 313: TRISC = 0x80;
  7635  003666  0E80               	movlw	128
  7636  003668  6E94               	movwf	3988,c	;volatile
  7637                           
  7638                           ;pwm_asl.c: 314: TRISA = 0xFF;
  7639  00366A  6892               	setf	3986,c	;volatile
  7640                           
  7641                           ;pwm_asl.c: 315: TRISD = 0x00;
  7642  00366C  0E00               	movlw	0
  7643  00366E  6E95               	movwf	3989,c	;volatile
  7644                           
  7645                           ;pwm_asl.c: 316: TRISE = 0x00;
  7646  003670  0E00               	movlw	0
  7647  003672  6E96               	movwf	3990,c	;volatile
  7648                           
  7649                           ;pwm_asl.c: 318: HS = 0;
  7650  003674  0E00               	movlw	0
  7651  003676  6E4C               	movwf	_HS+1,c
  7652  003678  0E00               	movlw	0
  7653  00367A  6E4B               	movwf	_HS,c
  7654                           
  7655                           ;pwm_asl.c: 319: selectedMode = 0;
  7656  00367C  0E00               	movlw	0
  7657  00367E  6E4A               	movwf	_selectedMode+1,c
  7658  003680  0E00               	movlw	0
  7659  003682  6E49               	movwf	_selectedMode,c
  7660  003684  0012               	return		;funcret
  7661  003686                     __end_of_setupPorts:
  7662                           	opt stack 0
  7663                           tblptru	equ	0xFF8
  7664                           tblptrh	equ	0xFF7
  7665                           tblptrl	equ	0xFF6
  7666                           tablat	equ	0xFF5
  7667                           prodh	equ	0xFF4
  7668                           prodl	equ	0xFF3
  7669                           intcon	equ	0xFF2
  7670                           indf0	equ	0xFEF
  7671                           postinc0	equ	0xFEE
  7672                           fsr0h	equ	0xFEA
  7673                           fsr0l	equ	0xFE9
  7674                           wreg	equ	0xFE8
  7675                           postdec1	equ	0xFE5
  7676                           fsr1l	equ	0xFE1
  7677                           indf2	equ	0xFDF
  7678                           postinc2	equ	0xFDE
  7679                           postdec2	equ	0xFDD
  7680                           fsr2h	equ	0xFDA
  7681                           fsr2l	equ	0xFD9
  7682                           status	equ	0xFD8
  7683                           
  7684 ;; *************** function _set_pwm1_percent *****************
  7685 ;; Defined at:
  7686 ;;		line 22 in file "my_pwm.c"
  7687 ;; Parameters:    Size  Location     Type
  7688 ;;  value           4   95[BANK0 ] float 
  7689 ;; Auto vars:     Size  Location     Type
  7690 ;;  tmp             4   99[BANK0 ] float 
  7691 ;;  raw_val         2  103[BANK0 ] int 
  7692 ;; Return value:  Size  Location     Type
  7693 ;;                  1    wreg      void 
  7694 ;; Registers used:
  7695 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7696 ;; Tracked objects:
  7697 ;;		On entry : 0/0
  7698 ;;		On exit  : 0/0
  7699 ;;		Unchanged: 0/0
  7700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7701 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7702 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7704 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7705 ;;Total ram usage:       10 bytes
  7706 ;; Hardware stack levels used:    1
  7707 ;; Hardware stack levels required when called:    4
  7708 ;; This function calls:
  7709 ;;		___fladd
  7710 ;;		___fldiv
  7711 ;;		___flmul
  7712 ;;		___fltol
  7713 ;;		_set_pwm1_raw
  7714 ;; This function is called by:
  7715 ;;		_main
  7716 ;; This function uses a non-reentrant model
  7717 ;;
  7718                           
  7719                           	psect	text25
  7720  002FEA                     __ptext25:
  7721                           	opt stack 0
  7722  002FEA                     _set_pwm1_percent:
  7723                           	opt stack 26
  7724                           
  7725                           ;my_pwm.c: 24: float tmp = value*1023.0/100.0;
  7726                           
  7727                           ;incstack = 0
  7728  002FEA  0E00               	movlw	0
  7729  002FEC  0100               	movlb	0	; () banked
  7730  002FEE  6F98               	movwf	___flmul@a& (0+255),b
  7731  002FF0  0EC0               	movlw	192
  7732  002FF2  6F99               	movwf	(___flmul@a+1)& (0+255),b
  7733  002FF4  0E7F               	movlw	127
  7734  002FF6  6F9A               	movwf	(___flmul@a+2)& (0+255),b
  7735  002FF8  0E44               	movlw	68
  7736  002FFA  6F9B               	movwf	(___flmul@a+3)& (0+255),b
  7737  002FFC  C0DF  F094         	movff	set_pwm1_percent@value,___flmul@b
  7738  003000  C0E0  F095         	movff	set_pwm1_percent@value+1,___flmul@b+1
  7739  003004  C0E1  F096         	movff	set_pwm1_percent@value+2,___flmul@b+2
  7740  003008  C0E2  F097         	movff	set_pwm1_percent@value+3,___flmul@b+3
  7741  00300C  EC85  F008         	call	___flmul	;wreg free
  7742  003010  C094  F0AD         	movff	?___flmul,___fldiv@b
  7743  003014  C095  F0AE         	movff	?___flmul+1,___fldiv@b+1
  7744  003018  C096  F0AF         	movff	?___flmul+2,___fldiv@b+2
  7745  00301C  C097  F0B0         	movff	?___flmul+3,___fldiv@b+3
  7746  003020  0E00               	movlw	0
  7747  003022  0100               	movlb	0	; () banked
  7748  003024  6FB1               	movwf	___fldiv@a& (0+255),b
  7749  003026  0E00               	movlw	0
  7750  003028  6FB2               	movwf	(___fldiv@a+1)& (0+255),b
  7751  00302A  0EC8               	movlw	200
  7752  00302C  6FB3               	movwf	(___fldiv@a+2)& (0+255),b
  7753  00302E  0E42               	movlw	66
  7754  003030  6FB4               	movwf	(___fldiv@a+3)& (0+255),b
  7755  003032  EC5D  F010         	call	___fldiv	;wreg free
  7756  003036  C0AD  F0E3         	movff	?___fldiv,set_pwm1_percent@tmp
  7757  00303A  C0AE  F0E4         	movff	?___fldiv+1,set_pwm1_percent@tmp+1
  7758  00303E  C0AF  F0E5         	movff	?___fldiv+2,set_pwm1_percent@tmp+2
  7759  003042  C0B0  F0E6         	movff	?___fldiv+3,set_pwm1_percent@tmp+3
  7760                           
  7761                           ;my_pwm.c: 25: int raw_val = (int)(tmp +0.5);
  7762  003046  0E00               	movlw	0
  7763  003048  0100               	movlb	0	; () banked
  7764  00304A  6FBE               	movwf	___fladd@a& (0+255),b
  7765  00304C  0E00               	movlw	0
  7766  00304E  6FBF               	movwf	(___fladd@a+1)& (0+255),b
  7767  003050  0E00               	movlw	0
  7768  003052  6FC0               	movwf	(___fladd@a+2)& (0+255),b
  7769  003054  0E3F               	movlw	63
  7770  003056  6FC1               	movwf	(___fladd@a+3)& (0+255),b
  7771  003058  C0E3  F0BA         	movff	set_pwm1_percent@tmp,___fladd@b
  7772  00305C  C0E4  F0BB         	movff	set_pwm1_percent@tmp+1,___fladd@b+1
  7773  003060  C0E5  F0BC         	movff	set_pwm1_percent@tmp+2,___fladd@b+2
  7774  003064  C0E6  F0BD         	movff	set_pwm1_percent@tmp+3,___fladd@b+3
  7775  003068  EC2E  F00A         	call	___fladd	;wreg free
  7776  00306C  C0BA  F0D1         	movff	?___fladd,___fltol@f1
  7777  003070  C0BB  F0D2         	movff	?___fladd+1,___fltol@f1+1
  7778  003074  C0BC  F0D3         	movff	?___fladd+2,___fltol@f1+2
  7779  003078  C0BD  F0D4         	movff	?___fladd+3,___fltol@f1+3
  7780  00307C  EC21  F017         	call	___fltol	;wreg free
  7781  003080  C0D1  F0E7         	movff	?___fltol,set_pwm1_percent@raw_val
  7782  003084  C0D2  F0E8         	movff	?___fltol+1,set_pwm1_percent@raw_val+1
  7783                           
  7784                           ;my_pwm.c: 26: if ( raw_val> 1023) raw_val = 1023;
  7785  003088  0100               	movlb	0	; () banked
  7786  00308A  BFE8               	btfsc	(set_pwm1_percent@raw_val+1)& (0+255),7,b
  7787  00308C  D007               	goto	l303
  7788  00308E  0E04               	movlw	4
  7789  003090  5DE8               	subwf	(set_pwm1_percent@raw_val+1)& (0+255),w,b
  7790  003092  A0D8               	btfss	status,0,c
  7791  003094  D003               	goto	l303
  7792                           
  7793                           ; BSR set to: 0
  7794  003096  0E03               	movlw	3
  7795  003098  6FE8               	movwf	(set_pwm1_percent@raw_val+1)& (0+255),b
  7796  00309A  69E7               	setf	set_pwm1_percent@raw_val& (0+255),b
  7797  00309C                     l303:
  7798                           
  7799                           ; BSR set to: 0
  7800                           ;my_pwm.c: 27: set_pwm1_raw(raw_val);
  7801                           
  7802                           ; BSR set to: 0
  7803  00309C  C0E7  F0DB         	movff	set_pwm1_percent@raw_val,set_pwm1_raw@raw_value
  7804  0030A0  C0E8  F0DC         	movff	set_pwm1_percent@raw_val+1,set_pwm1_raw@raw_value+1
  7805  0030A4  ECE9  F01A         	call	_set_pwm1_raw	;wreg free
  7806  0030A8  0012               	return		;funcret
  7807  0030AA                     __end_of_set_pwm1_percent:
  7808                           	opt stack 0
  7809                           tblptru	equ	0xFF8
  7810                           tblptrh	equ	0xFF7
  7811                           tblptrl	equ	0xFF6
  7812                           tablat	equ	0xFF5
  7813                           prodh	equ	0xFF4
  7814                           prodl	equ	0xFF3
  7815                           intcon	equ	0xFF2
  7816                           indf0	equ	0xFEF
  7817                           postinc0	equ	0xFEE
  7818                           fsr0h	equ	0xFEA
  7819                           fsr0l	equ	0xFE9
  7820                           wreg	equ	0xFE8
  7821                           postdec1	equ	0xFE5
  7822                           fsr1l	equ	0xFE1
  7823                           indf2	equ	0xFDF
  7824                           postinc2	equ	0xFDE
  7825                           postdec2	equ	0xFDD
  7826                           fsr2h	equ	0xFDA
  7827                           fsr2l	equ	0xFD9
  7828                           status	equ	0xFD8
  7829                           
  7830 ;; *************** function _set_pwm1_raw *****************
  7831 ;; Defined at:
  7832 ;;		line 14 in file "my_pwm.c"
  7833 ;; Parameters:    Size  Location     Type
  7834 ;;  raw_value       2   91[BANK0 ] unsigned int 
  7835 ;; Auto vars:     Size  Location     Type
  7836 ;;		None
  7837 ;; Return value:  Size  Location     Type
  7838 ;;                  1    wreg      void 
  7839 ;; Registers used:
  7840 ;;		wreg, status,2, status,0
  7841 ;; Tracked objects:
  7842 ;;		On entry : 0/0
  7843 ;;		On exit  : 0/0
  7844 ;;		Unchanged: 0/0
  7845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7846 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7848 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7849 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7850 ;;Total ram usage:        4 bytes
  7851 ;; Hardware stack levels used:    1
  7852 ;; Hardware stack levels required when called:    3
  7853 ;; This function calls:
  7854 ;;		Nothing
  7855 ;; This function is called by:
  7856 ;;		_main
  7857 ;;		_turnOFFCooler
  7858 ;;		_set_pwm1_percent
  7859 ;;		_set_pwm1_voltage
  7860 ;;		_set_pwm1_general
  7861 ;; This function uses a non-reentrant model
  7862 ;;
  7863                           
  7864                           	psect	text26
  7865  0035D2                     __ptext26:
  7866                           	opt stack 0
  7867  0035D2                     _set_pwm1_raw:
  7868                           	opt stack 26
  7869                           
  7870                           ;my_pwm.c: 16: CCPR1L = (raw_value >> 2) & 0x00FF;
  7871                           
  7872                           ;incstack = 0
  7873  0035D2  C0DB  F0DD         	movff	set_pwm1_raw@raw_value,??_set_pwm1_raw
  7874  0035D6  C0DC  F0DE         	movff	set_pwm1_raw@raw_value+1,??_set_pwm1_raw+1
  7875  0035DA  0100               	movlb	0	; () banked
  7876  0035DC  90D8               	bcf	status,0,c
  7877  0035DE  33DE               	rrcf	(??_set_pwm1_raw+1)& (0+255),f,b
  7878  0035E0  33DD               	rrcf	??_set_pwm1_raw& (0+255),f,b
  7879  0035E2  90D8               	bcf	status,0,c
  7880  0035E4  33DE               	rrcf	(??_set_pwm1_raw+1)& (0+255),f,b
  7881  0035E6  33DD               	rrcf	??_set_pwm1_raw& (0+255),f,b
  7882  0035E8  51DD               	movf	??_set_pwm1_raw& (0+255),w,b
  7883  0035EA  6EBE               	movwf	4030,c	;volatile
  7884                           
  7885                           ;my_pwm.c: 17: CCP1CONbits.DC1B = raw_value & 0x0003;
  7886  0035EC  C0DB  F0DD         	movff	set_pwm1_raw@raw_value,??_set_pwm1_raw
  7887  0035F0  0E03               	movlw	3
  7888  0035F2  17DD               	andwf	??_set_pwm1_raw& (0+255),f,b
  7889  0035F4  3BDD               	swapf	??_set_pwm1_raw& (0+255),f,b
  7890  0035F6  50BD               	movf	4029,w,c	;volatile
  7891  0035F8  19DD               	xorwf	??_set_pwm1_raw& (0+255),w,b
  7892  0035FA  0BCF               	andlw	-49
  7893  0035FC  19DD               	xorwf	??_set_pwm1_raw& (0+255),w,b
  7894  0035FE  6EBD               	movwf	4029,c	;volatile
  7895                           
  7896                           ; BSR set to: 0
  7897  003600  0012               	return		;funcret
  7898  003602                     __end_of_set_pwm1_raw:
  7899                           	opt stack 0
  7900                           tblptru	equ	0xFF8
  7901                           tblptrh	equ	0xFF7
  7902                           tblptrl	equ	0xFF6
  7903                           tablat	equ	0xFF5
  7904                           prodh	equ	0xFF4
  7905                           prodl	equ	0xFF3
  7906                           intcon	equ	0xFF2
  7907                           indf0	equ	0xFEF
  7908                           postinc0	equ	0xFEE
  7909                           fsr0h	equ	0xFEA
  7910                           fsr0l	equ	0xFE9
  7911                           wreg	equ	0xFE8
  7912                           postdec1	equ	0xFE5
  7913                           fsr1l	equ	0xFE1
  7914                           indf2	equ	0xFDF
  7915                           postinc2	equ	0xFDE
  7916                           postdec2	equ	0xFDD
  7917                           fsr2h	equ	0xFDA
  7918                           fsr2l	equ	0xFD9
  7919                           status	equ	0xFD8
  7920                           
  7921 ;; *************** function ___fltol *****************
  7922 ;; Defined at:
  7923 ;;		line 43 in file "/opt/microchip/xc8/v1.45/sources/common/fltol.c"
  7924 ;; Parameters:    Size  Location     Type
  7925 ;;  f1              4   81[BANK0 ] void 
  7926 ;; Auto vars:     Size  Location     Type
  7927 ;;  exp1            1   90[BANK0 ] unsigned char 
  7928 ;;  sign1           1   89[BANK0 ] unsigned char 
  7929 ;; Return value:  Size  Location     Type
  7930 ;;                  4   81[BANK0 ] long 
  7931 ;; Registers used:
  7932 ;;		wreg, status,2, status,0
  7933 ;; Tracked objects:
  7934 ;;		On entry : 0/0
  7935 ;;		On exit  : 0/0
  7936 ;;		Unchanged: 0/0
  7937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7938 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7939 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7940 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7941 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7942 ;;Total ram usage:       10 bytes
  7943 ;; Hardware stack levels used:    1
  7944 ;; Hardware stack levels required when called:    3
  7945 ;; This function calls:
  7946 ;;		Nothing
  7947 ;; This function is called by:
  7948 ;;		_main
  7949 ;;		_set_pwm1_percent
  7950 ;;		_sprintf
  7951 ;;		_set_pwm1_voltage
  7952 ;;		_set_pwm1_general
  7953 ;; This function uses a non-reentrant model
  7954 ;;
  7955                           
  7956                           	psect	text27
  7957  002E42                     __ptext27:
  7958                           	opt stack 0
  7959  002E42                     ___fltol:
  7960                           	opt stack 25
  7961                           
  7962                           ; BSR set to: 0
  7963                           ;incstack = 0
  7964  002E42  0100               	movlb	0	; () banked
  7965  002E44  35D3               	rlcf	(___fltol@f1+2)& (0+255),w,b
  7966  002E46  35D4               	rlcf	(___fltol@f1+3)& (0+255),w,b
  7967  002E48  6FDA               	movwf	___fltol@exp1& (0+255),b
  7968  002E4A  51DA               	movf	___fltol@exp1& (0+255),w,b
  7969  002E4C  A4D8               	btfss	status,2,c
  7970  002E4E  D009               	goto	l740
  7971                           
  7972                           ; BSR set to: 0
  7973  002E50  0E00               	movlw	0
  7974  002E52  6FD1               	movwf	?___fltol& (0+255),b
  7975  002E54  0E00               	movlw	0
  7976  002E56  6FD2               	movwf	(?___fltol+1)& (0+255),b
  7977  002E58  0E00               	movlw	0
  7978  002E5A  6FD3               	movwf	(?___fltol+2)& (0+255),b
  7979  002E5C  0E00               	movlw	0
  7980  002E5E  6FD4               	movwf	(?___fltol+3)& (0+255),b
  7981                           
  7982                           ; BSR set to: 0
  7983  002E60  0012               	return	
  7984  002E62                     l740:
  7985                           
  7986                           ; BSR set to: 0
  7987                           
  7988                           ; BSR set to: 0
  7989  002E62  C0D1  F0D5         	movff	___fltol@f1,??___fltol
  7990  002E66  C0D2  F0D6         	movff	___fltol@f1+1,??___fltol+1
  7991  002E6A  C0D3  F0D7         	movff	___fltol@f1+2,??___fltol+2
  7992  002E6E  C0D4  F0D8         	movff	___fltol@f1+3,??___fltol+3
  7993  002E72  0E20               	movlw	32
  7994  002E74  D005               	goto	u4020
  7995  002E76                     u4025:
  7996  002E76  90D8               	bcf	status,0,c
  7997  002E78  33D8               	rrcf	(??___fltol+3)& (0+255),f,b
  7998  002E7A  33D7               	rrcf	(??___fltol+2)& (0+255),f,b
  7999  002E7C  33D6               	rrcf	(??___fltol+1)& (0+255),f,b
  8000  002E7E  33D5               	rrcf	??___fltol& (0+255),f,b
  8001  002E80                     u4020:
  8002  002E80  2EE8               	decfsz	wreg,f,c
  8003  002E82  D7F9               	goto	u4025
  8004  002E84  51D5               	movf	??___fltol& (0+255),w,b
  8005  002E86  6FD9               	movwf	___fltol@sign1& (0+255),b
  8006                           
  8007                           ; BSR set to: 0
  8008  002E88  8FD3               	bsf	(___fltol@f1+2)& (0+255),7,b
  8009                           
  8010                           ; BSR set to: 0
  8011  002E8A  0EFF               	movlw	255
  8012  002E8C  17D1               	andwf	___fltol@f1& (0+255),f,b
  8013  002E8E  0EFF               	movlw	255
  8014  002E90  17D2               	andwf	(___fltol@f1+1)& (0+255),f,b
  8015  002E92  0EFF               	movlw	255
  8016  002E94  17D3               	andwf	(___fltol@f1+2)& (0+255),f,b
  8017  002E96  0E00               	movlw	0
  8018  002E98  17D4               	andwf	(___fltol@f1+3)& (0+255),f,b
  8019                           
  8020                           ; BSR set to: 0
  8021  002E9A  0E96               	movlw	150
  8022  002E9C  5FDA               	subwf	___fltol@exp1& (0+255),f,b
  8023                           
  8024                           ; BSR set to: 0
  8025  002E9E  AFDA               	btfss	___fltol@exp1& (0+255),7,b
  8026  002EA0  D016               	goto	l742
  8027                           
  8028                           ; BSR set to: 0
  8029  002EA2  51DA               	movf	___fltol@exp1& (0+255),w,b
  8030  002EA4  0A80               	xorlw	128
  8031  002EA6  0F97               	addlw	151
  8032  002EA8  B0D8               	btfsc	status,0,c
  8033  002EAA  D009               	goto	l743
  8034                           
  8035                           ; BSR set to: 0
  8036  002EAC  0E00               	movlw	0
  8037  002EAE  6FD1               	movwf	?___fltol& (0+255),b
  8038  002EB0  0E00               	movlw	0
  8039  002EB2  6FD2               	movwf	(?___fltol+1)& (0+255),b
  8040  002EB4  0E00               	movlw	0
  8041  002EB6  6FD3               	movwf	(?___fltol+2)& (0+255),b
  8042  002EB8  0E00               	movlw	0
  8043  002EBA  6FD4               	movwf	(?___fltol+3)& (0+255),b
  8044                           
  8045                           ; BSR set to: 0
  8046  002EBC  0012               	return	
  8047  002EBE                     l743:
  8048                           
  8049                           ; BSR set to: 0
  8050                           
  8051                           ; BSR set to: 0
  8052                           
  8053                           ; BSR set to: 0
  8054  002EBE  90D8               	bcf	status,0,c
  8055  002EC0  33D4               	rrcf	(___fltol@f1+3)& (0+255),f,b
  8056  002EC2  33D3               	rrcf	(___fltol@f1+2)& (0+255),f,b
  8057  002EC4  33D2               	rrcf	(___fltol@f1+1)& (0+255),f,b
  8058  002EC6  33D1               	rrcf	___fltol@f1& (0+255),f,b
  8059                           
  8060                           ; BSR set to: 0
  8061  002EC8  3FDA               	incfsz	___fltol@exp1& (0+255),f,b
  8062  002ECA  D7F9               	goto	l743
  8063                           
  8064                           ; BSR set to: 0
  8065  002ECC  D015               	goto	u4060
  8066  002ECE                     l742:
  8067                           
  8068                           ; BSR set to: 0
  8069                           
  8070                           ; BSR set to: 0
  8071  002ECE  0E1F               	movlw	31
  8072  002ED0  65DA               	cpfsgt	___fltol@exp1& (0+255),b
  8073  002ED2  D00F               	goto	l748
  8074                           
  8075                           ; BSR set to: 0
  8076  002ED4  0E00               	movlw	0
  8077  002ED6  6FD1               	movwf	?___fltol& (0+255),b
  8078  002ED8  0E00               	movlw	0
  8079  002EDA  6FD2               	movwf	(?___fltol+1)& (0+255),b
  8080  002EDC  0E00               	movlw	0
  8081  002EDE  6FD3               	movwf	(?___fltol+2)& (0+255),b
  8082  002EE0  0E00               	movlw	0
  8083  002EE2  6FD4               	movwf	(?___fltol+3)& (0+255),b
  8084                           
  8085                           ; BSR set to: 0
  8086  002EE4  0012               	return	
  8087  002EE6                     
  8088                           ; BSR set to: 0
  8089                           
  8090                           ; BSR set to: 0
  8091  002EE6  90D8               	bcf	status,0,c
  8092  002EE8  37D1               	rlcf	___fltol@f1& (0+255),f,b
  8093  002EEA  37D2               	rlcf	(___fltol@f1+1)& (0+255),f,b
  8094  002EEC  37D3               	rlcf	(___fltol@f1+2)& (0+255),f,b
  8095  002EEE  37D4               	rlcf	(___fltol@f1+3)& (0+255),f,b
  8096  002EF0  07DA               	decf	___fltol@exp1& (0+255),f,b
  8097  002EF2                     l748:
  8098                           
  8099                           ; BSR set to: 0
  8100                           
  8101                           ; BSR set to: 0
  8102  002EF2  51DA               	movf	___fltol@exp1& (0+255),w,b
  8103  002EF4  A4D8               	btfss	status,2,c
  8104  002EF6  D7F7               	goto	l749
  8105  002EF8                     u4060:
  8106                           
  8107                           ; BSR set to: 0
  8108                           
  8109                           ; BSR set to: 0
  8110                           
  8111                           ; BSR set to: 0
  8112  002EF8  51D9               	movf	___fltol@sign1& (0+255),w,b
  8113  002EFA  B4D8               	btfsc	status,2,c
  8114  002EFC  D008               	goto	l751
  8115                           
  8116                           ; BSR set to: 0
  8117  002EFE  1FD4               	comf	(___fltol@f1+3)& (0+255),f,b
  8118  002F00  1FD3               	comf	(___fltol@f1+2)& (0+255),f,b
  8119  002F02  1FD2               	comf	(___fltol@f1+1)& (0+255),f,b
  8120  002F04  6DD1               	negf	___fltol@f1& (0+255),b
  8121  002F06  0E00               	movlw	0
  8122  002F08  23D2               	addwfc	(___fltol@f1+1)& (0+255),f,b
  8123  002F0A  23D3               	addwfc	(___fltol@f1+2)& (0+255),f,b
  8124  002F0C  23D4               	addwfc	(___fltol@f1+3)& (0+255),f,b
  8125  002F0E                     l751:
  8126                           
  8127                           ; BSR set to: 0
  8128                           
  8129                           ; BSR set to: 0
  8130  002F0E  C0D1  F0D1         	movff	___fltol@f1,?___fltol
  8131  002F12  C0D2  F0D2         	movff	___fltol@f1+1,?___fltol+1
  8132  002F16  C0D3  F0D3         	movff	___fltol@f1+2,?___fltol+2
  8133  002F1A  C0D4  F0D4         	movff	___fltol@f1+3,?___fltol+3
  8134  002F1E  0012               	return	
  8135  002F20                     __end_of___fltol:
  8136                           	opt stack 0
  8137                           tblptru	equ	0xFF8
  8138                           tblptrh	equ	0xFF7
  8139                           tblptrl	equ	0xFF6
  8140                           tablat	equ	0xFF5
  8141                           prodh	equ	0xFF4
  8142                           prodl	equ	0xFF3
  8143                           intcon	equ	0xFF2
  8144                           indf0	equ	0xFEF
  8145                           postinc0	equ	0xFEE
  8146                           fsr0h	equ	0xFEA
  8147                           fsr0l	equ	0xFE9
  8148                           wreg	equ	0xFE8
  8149                           postdec1	equ	0xFE5
  8150                           fsr1l	equ	0xFE1
  8151                           indf2	equ	0xFDF
  8152                           postinc2	equ	0xFDE
  8153                           postdec2	equ	0xFDD
  8154                           fsr2h	equ	0xFDA
  8155                           fsr2l	equ	0xFD9
  8156                           status	equ	0xFD8
  8157                           
  8158 ;; *************** function ___fladd *****************
  8159 ;; Defined at:
  8160 ;;		line 10 in file "/opt/microchip/xc8/v1.45/sources/common/sprcadd.c"
  8161 ;; Parameters:    Size  Location     Type
  8162 ;;  b               4   58[BANK0 ] long 
  8163 ;;  a               4   62[BANK0 ] long 
  8164 ;; Auto vars:     Size  Location     Type
  8165 ;;  grs             1   77[BANK0 ] unsigned char 
  8166 ;;  bexp            1   76[BANK0 ] unsigned char 
  8167 ;;  aexp            1   75[BANK0 ] unsigned char 
  8168 ;;  signs           1   74[BANK0 ] unsigned char 
  8169 ;; Return value:  Size  Location     Type
  8170 ;;                  4   58[BANK0 ] unsigned char 
  8171 ;; Registers used:
  8172 ;;		wreg, status,2, status,0
  8173 ;; Tracked objects:
  8174 ;;		On entry : 0/0
  8175 ;;		On exit  : 0/0
  8176 ;;		Unchanged: 0/0
  8177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8178 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8179 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8180 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8181 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8182 ;;Total ram usage:       20 bytes
  8183 ;; Hardware stack levels used:    1
  8184 ;; Hardware stack levels required when called:    3
  8185 ;; This function calls:
  8186 ;;		Nothing
  8187 ;; This function is called by:
  8188 ;;		_main
  8189 ;;		_set_pwm1_percent
  8190 ;;		_sprintf
  8191 ;;		___flsub
  8192 ;;		_set_pwm1_voltage
  8193 ;;		_set_pwm1_general
  8194 ;; This function uses a non-reentrant model
  8195 ;;
  8196                           
  8197                           	psect	text28
  8198  00145C                     __ptext28:
  8199                           	opt stack 0
  8200  00145C                     ___fladd:
  8201                           	opt stack 24
  8202                           
  8203                           ; BSR set to: 0
  8204                           ;incstack = 0
  8205  00145C  0100               	movlb	0	; () banked
  8206  00145E  51BD               	movf	(___fladd@b+3)& (0+255),w,b
  8207  001460  0B80               	andlw	128
  8208  001462  6FCA               	movwf	___fladd@signs& (0+255),b
  8209  001464  51BD               	movf	(___fladd@b+3)& (0+255),w,b
  8210  001466  25BD               	addwf	(___fladd@b+3)& (0+255),w,b
  8211  001468  6FCC               	movwf	___fladd@bexp& (0+255),b
  8212                           
  8213                           ; BSR set to: 0
  8214  00146A  BFBC               	btfsc	(___fladd@b+2)& (0+255),7,b
  8215                           
  8216                           ; BSR set to: 0
  8217  00146C  81CC               	bsf	___fladd@bexp& (0+255),0,b
  8218                           
  8219                           ; BSR set to: 0
  8220                           
  8221                           ; BSR set to: 0
  8222  00146E  51CC               	movf	___fladd@bexp& (0+255),w,b
  8223  001470  B4D8               	btfsc	status,2,c
  8224  001472  D00D               	goto	l965
  8225                           
  8226                           ; BSR set to: 0
  8227  001474  29CC               	incf	___fladd@bexp& (0+255),w,b
  8228  001476  A4D8               	btfss	status,2,c
  8229  001478  D008               	goto	l966
  8230                           
  8231                           ; BSR set to: 0
  8232  00147A  0E00               	movlw	0
  8233  00147C  6FBA               	movwf	___fladd@b& (0+255),b
  8234  00147E  0E00               	movlw	0
  8235  001480  6FBB               	movwf	(___fladd@b+1)& (0+255),b
  8236  001482  0E00               	movlw	0
  8237  001484  6FBC               	movwf	(___fladd@b+2)& (0+255),b
  8238  001486  0E00               	movlw	0
  8239  001488  6FBD               	movwf	(___fladd@b+3)& (0+255),b
  8240  00148A                     l966:
  8241                           
  8242                           ; BSR set to: 0
  8243                           
  8244                           ; BSR set to: 0
  8245  00148A  8FBC               	bsf	(___fladd@b+2)& (0+255),7,b
  8246  00148C  D006               	goto	L9
  8247  00148E                     l965:
  8248                           
  8249                           ; BSR set to: 0
  8250                           
  8251                           ; BSR set to: 0
  8252  00148E  0E00               	movlw	0
  8253  001490  6FBA               	movwf	___fladd@b& (0+255),b
  8254  001492  0E00               	movlw	0
  8255  001494  6FBB               	movwf	(___fladd@b+1)& (0+255),b
  8256  001496  0E00               	movlw	0
  8257  001498  6FBC               	movwf	(___fladd@b+2)& (0+255),b
  8258  00149A                     L9:
  8259  00149A  0E00               	movlw	0
  8260  00149C  6FBD               	movwf	(___fladd@b+3)& (0+255),b
  8261                           
  8262                           ; BSR set to: 0
  8263                           
  8264                           ; BSR set to: 0
  8265  00149E  51C1               	movf	(___fladd@a+3)& (0+255),w,b
  8266  0014A0  0B80               	andlw	128
  8267  0014A2  6FCB               	movwf	___fladd@aexp& (0+255),b
  8268                           
  8269                           ; BSR set to: 0
  8270  0014A4  51CA               	movf	___fladd@signs& (0+255),w,b
  8271  0014A6  19CB               	xorwf	___fladd@aexp& (0+255),w,b
  8272  0014A8  A4D8               	btfss	status,2,c
  8273                           
  8274                           ; BSR set to: 0
  8275  0014AA  8DCA               	bsf	___fladd@signs& (0+255),6,b
  8276                           
  8277                           ; BSR set to: 0
  8278                           
  8279                           ; BSR set to: 0
  8280  0014AC  51C1               	movf	(___fladd@a+3)& (0+255),w,b
  8281  0014AE  25C1               	addwf	(___fladd@a+3)& (0+255),w,b
  8282  0014B0  6FCB               	movwf	___fladd@aexp& (0+255),b
  8283                           
  8284                           ; BSR set to: 0
  8285  0014B2  BFC0               	btfsc	(___fladd@a+2)& (0+255),7,b
  8286                           
  8287                           ; BSR set to: 0
  8288  0014B4  81CB               	bsf	___fladd@aexp& (0+255),0,b
  8289                           
  8290                           ; BSR set to: 0
  8291                           
  8292                           ; BSR set to: 0
  8293  0014B6  51CB               	movf	___fladd@aexp& (0+255),w,b
  8294  0014B8  B4D8               	btfsc	status,2,c
  8295  0014BA  D00D               	goto	l970
  8296                           
  8297                           ; BSR set to: 0
  8298  0014BC  29CB               	incf	___fladd@aexp& (0+255),w,b
  8299  0014BE  A4D8               	btfss	status,2,c
  8300  0014C0  D008               	goto	l971
  8301                           
  8302                           ; BSR set to: 0
  8303  0014C2  0E00               	movlw	0
  8304  0014C4  6FBE               	movwf	___fladd@a& (0+255),b
  8305  0014C6  0E00               	movlw	0
  8306  0014C8  6FBF               	movwf	(___fladd@a+1)& (0+255),b
  8307  0014CA  0E00               	movlw	0
  8308  0014CC  6FC0               	movwf	(___fladd@a+2)& (0+255),b
  8309  0014CE  0E00               	movlw	0
  8310  0014D0  6FC1               	movwf	(___fladd@a+3)& (0+255),b
  8311  0014D2                     l971:
  8312                           
  8313                           ; BSR set to: 0
  8314                           
  8315                           ; BSR set to: 0
  8316  0014D2  8FC0               	bsf	(___fladd@a+2)& (0+255),7,b
  8317  0014D4  D006               	goto	L10
  8318  0014D6                     l970:
  8319                           
  8320                           ; BSR set to: 0
  8321                           
  8322                           ; BSR set to: 0
  8323  0014D6  0E00               	movlw	0
  8324  0014D8  6FBE               	movwf	___fladd@a& (0+255),b
  8325  0014DA  0E00               	movlw	0
  8326  0014DC  6FBF               	movwf	(___fladd@a+1)& (0+255),b
  8327  0014DE  0E00               	movlw	0
  8328  0014E0  6FC0               	movwf	(___fladd@a+2)& (0+255),b
  8329  0014E2                     L10:
  8330  0014E2  0E00               	movlw	0
  8331  0014E4  6FC1               	movwf	(___fladd@a+3)& (0+255),b
  8332                           
  8333                           ; BSR set to: 0
  8334                           
  8335                           ; BSR set to: 0
  8336  0014E6  51CC               	movf	___fladd@bexp& (0+255),w,b
  8337  0014E8  5DCB               	subwf	___fladd@aexp& (0+255),w,b
  8338  0014EA  B0D8               	btfsc	status,0,c
  8339  0014EC  D022               	goto	l973
  8340                           
  8341                           ; BSR set to: 0
  8342  0014EE  ADCA               	btfss	___fladd@signs& (0+255),6,b
  8343  0014F0  D002               	goto	l974
  8344                           
  8345                           ; BSR set to: 0
  8346  0014F2  0E80               	movlw	128
  8347  0014F4  1BCA               	xorwf	___fladd@signs& (0+255),f,b
  8348  0014F6                     l974:
  8349                           
  8350                           ; BSR set to: 0
  8351                           
  8352                           ; BSR set to: 0
  8353  0014F6  C0CC  F0CD         	movff	___fladd@bexp,___fladd@grs
  8354                           
  8355                           ; BSR set to: 0
  8356  0014FA  C0CB  F0CC         	movff	___fladd@aexp,___fladd@bexp
  8357                           
  8358                           ; BSR set to: 0
  8359  0014FE  C0CD  F0CB         	movff	___fladd@grs,___fladd@aexp
  8360                           
  8361                           ; BSR set to: 0
  8362  001502  C0BA  F0CD         	movff	___fladd@b,___fladd@grs
  8363                           
  8364                           ; BSR set to: 0
  8365  001506  C0BE  F0BA         	movff	___fladd@a,___fladd@b
  8366                           
  8367                           ; BSR set to: 0
  8368  00150A  C0CD  F0BE         	movff	___fladd@grs,___fladd@a
  8369                           
  8370                           ; BSR set to: 0
  8371  00150E  C0BB  F0CD         	movff	___fladd@b+1,___fladd@grs
  8372                           
  8373                           ; BSR set to: 0
  8374  001512  C0BF  F0BB         	movff	___fladd@a+1,___fladd@b+1
  8375                           
  8376                           ; BSR set to: 0
  8377  001516  C0CD  F0BF         	movff	___fladd@grs,___fladd@a+1
  8378                           
  8379                           ; BSR set to: 0
  8380  00151A  C0BC  F0CD         	movff	___fladd@b+2,___fladd@grs
  8381                           
  8382                           ; BSR set to: 0
  8383  00151E  C0C0  F0BC         	movff	___fladd@a+2,___fladd@b+2
  8384                           
  8385                           ; BSR set to: 0
  8386  001522  C0CD  F0C0         	movff	___fladd@grs,___fladd@a+2
  8387                           
  8388                           ; BSR set to: 0
  8389  001526  C0BD  F0CD         	movff	___fladd@b+3,___fladd@grs
  8390                           
  8391                           ; BSR set to: 0
  8392  00152A  C0C1  F0BD         	movff	___fladd@a+3,___fladd@b+3
  8393                           
  8394                           ; BSR set to: 0
  8395  00152E  C0CD  F0C1         	movff	___fladd@grs,___fladd@a+3
  8396  001532                     l973:
  8397                           
  8398                           ; BSR set to: 0
  8399                           
  8400                           ; BSR set to: 0
  8401  001532  0E00               	movlw	0
  8402  001534  6FCD               	movwf	___fladd@grs& (0+255),b
  8403                           
  8404                           ; BSR set to: 0
  8405  001536  51CC               	movf	___fladd@bexp& (0+255),w,b
  8406  001538  6FC2               	movwf	??___fladd& (0+255),b
  8407  00153A  6BC3               	clrf	(??___fladd+1)& (0+255),b
  8408  00153C  1FC2               	comf	??___fladd& (0+255),f,b
  8409  00153E  1FC3               	comf	(??___fladd+1)& (0+255),f,b
  8410  001540  4BC2               	infsnz	??___fladd& (0+255),f,b
  8411  001542  2BC3               	incf	(??___fladd+1)& (0+255),f,b
  8412  001544  51CB               	movf	___fladd@aexp& (0+255),w,b
  8413  001546  6FC4               	movwf	(??___fladd+2)& (0+255),b
  8414  001548  6BC5               	clrf	(??___fladd+3)& (0+255),b
  8415  00154A  51C2               	movf	??___fladd& (0+255),w,b
  8416  00154C  27C4               	addwf	(??___fladd+2)& (0+255),f,b
  8417  00154E  51C3               	movf	(??___fladd+1)& (0+255),w,b
  8418  001550  23C5               	addwfc	(??___fladd+3)& (0+255),f,b
  8419  001552  BFC5               	btfsc	(??___fladd+3)& (0+255),7,b
  8420  001554  D02C               	goto	l977
  8421  001556  51C5               	movf	(??___fladd+3)& (0+255),w,b
  8422  001558  E104               	bnz	u3090
  8423  00155A  0E1A               	movlw	26
  8424  00155C  5DC4               	subwf	(??___fladd+2)& (0+255),w,b
  8425  00155E  A0D8               	btfss	status,0,c
  8426  001560  D026               	goto	l977
  8427  001562                     u3090:
  8428                           
  8429                           ; BSR set to: 0
  8430  001562  51BA               	movf	___fladd@b& (0+255),w,b
  8431  001564  11BB               	iorwf	(___fladd@b+1)& (0+255),w,b
  8432  001566  11BC               	iorwf	(___fladd@b+2)& (0+255),w,b
  8433  001568  11BD               	iorwf	(___fladd@b+3)& (0+255),w,b
  8434  00156A  B4D8               	btfsc	status,2,c
  8435  00156C  D002               	goto	u3100
  8436  00156E  0E01               	movlw	1
  8437  001570  D001               	goto	u3110
  8438  001572                     u3100:
  8439  001572  0E00               	movlw	0
  8440  001574                     u3110:
  8441  001574  6FCD               	movwf	___fladd@grs& (0+255),b
  8442                           
  8443                           ; BSR set to: 0
  8444  001576  0E00               	movlw	0
  8445  001578  6FBA               	movwf	___fladd@b& (0+255),b
  8446  00157A  0E00               	movlw	0
  8447  00157C  6FBB               	movwf	(___fladd@b+1)& (0+255),b
  8448  00157E  0E00               	movlw	0
  8449  001580  6FBC               	movwf	(___fladd@b+2)& (0+255),b
  8450  001582  0E00               	movlw	0
  8451  001584  6FBD               	movwf	(___fladd@b+3)& (0+255),b
  8452                           
  8453                           ; BSR set to: 0
  8454  001586  C0CB  F0CC         	movff	___fladd@aexp,___fladd@bexp
  8455  00158A  D015               	goto	u3140
  8456  00158C                     l978:
  8457                           
  8458                           ; BSR set to: 0
  8459  00158C  A1CD               	btfss	___fladd@grs& (0+255),0,b
  8460  00158E  D005               	goto	l979
  8461                           
  8462                           ; BSR set to: 0
  8463  001590  90D8               	bcf	status,0,c
  8464  001592  31CD               	rrcf	___fladd@grs& (0+255),w,b
  8465  001594  0901               	iorlw	1
  8466  001596  6FCD               	movwf	___fladd@grs& (0+255),b
  8467  001598  D002               	goto	l980
  8468  00159A                     l979:
  8469                           
  8470                           ; BSR set to: 0
  8471                           
  8472                           ; BSR set to: 0
  8473  00159A  90D8               	bcf	status,0,c
  8474  00159C  33CD               	rrcf	___fladd@grs& (0+255),f,b
  8475  00159E                     l980:
  8476                           
  8477                           ; BSR set to: 0
  8478                           
  8479                           ; BSR set to: 0
  8480  00159E  B1BA               	btfsc	___fladd@b& (0+255),0,b
  8481                           
  8482                           ; BSR set to: 0
  8483  0015A0  8FCD               	bsf	___fladd@grs& (0+255),7,b
  8484                           
  8485                           ; BSR set to: 0
  8486                           
  8487                           ; BSR set to: 0
  8488  0015A2  35BD               	rlcf	(___fladd@b+3)& (0+255),w,b
  8489  0015A4  33BD               	rrcf	(___fladd@b+3)& (0+255),f,b
  8490  0015A6  33BC               	rrcf	(___fladd@b+2)& (0+255),f,b
  8491  0015A8  33BB               	rrcf	(___fladd@b+1)& (0+255),f,b
  8492  0015AA  33BA               	rrcf	___fladd@b& (0+255),f,b
  8493                           
  8494                           ; BSR set to: 0
  8495  0015AC  2BCC               	incf	___fladd@bexp& (0+255),f,b
  8496  0015AE                     l977:
  8497                           
  8498                           ; BSR set to: 0
  8499  0015AE  51CB               	movf	___fladd@aexp& (0+255),w,b
  8500  0015B0  5DCC               	subwf	___fladd@bexp& (0+255),w,b
  8501  0015B2  A0D8               	btfss	status,0,c
  8502  0015B4  D7EB               	goto	l978
  8503  0015B6                     u3140:
  8504                           
  8505                           ; BSR set to: 0
  8506                           
  8507                           ; BSR set to: 0
  8508  0015B6  BDCA               	btfsc	___fladd@signs& (0+255),6,b
  8509  0015B8  D029               	goto	l983
  8510                           
  8511                           ; BSR set to: 0
  8512  0015BA  51CC               	movf	___fladd@bexp& (0+255),w,b
  8513  0015BC  A4D8               	btfss	status,2,c
  8514  0015BE  D009               	goto	l984
  8515                           
  8516                           ; BSR set to: 0
  8517  0015C0  0E00               	movlw	0
  8518  0015C2  6FBA               	movwf	?___fladd& (0+255),b
  8519  0015C4  0E00               	movlw	0
  8520  0015C6  6FBB               	movwf	(?___fladd+1)& (0+255),b
  8521  0015C8  0E00               	movlw	0
  8522  0015CA  6FBC               	movwf	(?___fladd+2)& (0+255),b
  8523  0015CC  0E00               	movlw	0
  8524  0015CE  6FBD               	movwf	(?___fladd+3)& (0+255),b
  8525                           
  8526                           ; BSR set to: 0
  8527  0015D0  0012               	return	
  8528  0015D2                     l984:
  8529                           
  8530                           ; BSR set to: 0
  8531                           
  8532                           ; BSR set to: 0
  8533  0015D2  51BE               	movf	___fladd@a& (0+255),w,b
  8534  0015D4  27BA               	addwf	___fladd@b& (0+255),f,b
  8535  0015D6  51BF               	movf	(___fladd@a+1)& (0+255),w,b
  8536  0015D8  23BB               	addwfc	(___fladd@b+1)& (0+255),f,b
  8537  0015DA  51C0               	movf	(___fladd@a+2)& (0+255),w,b
  8538  0015DC  23BC               	addwfc	(___fladd@b+2)& (0+255),f,b
  8539  0015DE  51C1               	movf	(___fladd@a+3)& (0+255),w,b
  8540  0015E0  23BD               	addwfc	(___fladd@b+3)& (0+255),f,b
  8541                           
  8542                           ; BSR set to: 0
  8543  0015E2  A1BD               	btfss	(___fladd@b+3)& (0+255),0,b
  8544  0015E4  D083               	goto	u3270
  8545                           
  8546                           ; BSR set to: 0
  8547  0015E6  A1CD               	btfss	___fladd@grs& (0+255),0,b
  8548  0015E8  D006               	goto	l987
  8549                           
  8550                           ; BSR set to: 0
  8551  0015EA  90D8               	bcf	status,0,c
  8552  0015EC  33CD               	rrcf	___fladd@grs& (0+255),f,b
  8553  0015EE  51CD               	movf	___fladd@grs& (0+255),w,b
  8554  0015F0  0901               	iorlw	1
  8555  0015F2  6FCD               	movwf	___fladd@grs& (0+255),b
  8556  0015F4  D002               	goto	l988
  8557  0015F6                     l987:
  8558                           
  8559                           ; BSR set to: 0
  8560                           
  8561                           ; BSR set to: 0
  8562  0015F6  90D8               	bcf	status,0,c
  8563  0015F8  33CD               	rrcf	___fladd@grs& (0+255),f,b
  8564  0015FA                     l988:
  8565                           
  8566                           ; BSR set to: 0
  8567                           
  8568                           ; BSR set to: 0
  8569  0015FA  B1BA               	btfsc	___fladd@b& (0+255),0,b
  8570                           
  8571                           ; BSR set to: 0
  8572  0015FC  8FCD               	bsf	___fladd@grs& (0+255),7,b
  8573                           
  8574                           ; BSR set to: 0
  8575                           
  8576                           ; BSR set to: 0
  8577  0015FE  35BD               	rlcf	(___fladd@b+3)& (0+255),w,b
  8578  001600  33BD               	rrcf	(___fladd@b+3)& (0+255),f,b
  8579  001602  33BC               	rrcf	(___fladd@b+2)& (0+255),f,b
  8580  001604  33BB               	rrcf	(___fladd@b+1)& (0+255),f,b
  8581  001606  33BA               	rrcf	___fladd@b& (0+255),f,b
  8582                           
  8583                           ; BSR set to: 0
  8584  001608  2BCC               	incf	___fladd@bexp& (0+255),f,b
  8585                           
  8586                           ; BSR set to: 0
  8587  00160A  D070               	goto	u3270
  8588  00160C                     l983:
  8589                           
  8590                           ; BSR set to: 0
  8591                           
  8592                           ; BSR set to: 0
  8593  00160C  51BE               	movf	___fladd@a& (0+255),w,b
  8594  00160E  5DBA               	subwf	___fladd@b& (0+255),w,b
  8595  001610  51BF               	movf	(___fladd@a+1)& (0+255),w,b
  8596  001612  59BB               	subwfb	(___fladd@b+1)& (0+255),w,b
  8597  001614  51C0               	movf	(___fladd@a+2)& (0+255),w,b
  8598  001616  59BC               	subwfb	(___fladd@b+2)& (0+255),w,b
  8599  001618  51BD               	movf	(___fladd@b+3)& (0+255),w,b
  8600  00161A  0A80               	xorlw	128
  8601  00161C  6FC2               	movwf	??___fladd& (0+255),b
  8602  00161E  51C1               	movf	(___fladd@a+3)& (0+255),w,b
  8603  001620  0A80               	xorlw	128
  8604  001622  59C2               	subwfb	??___fladd& (0+255),w,b
  8605  001624  B0D8               	btfsc	status,0,c
  8606  001626  D036               	goto	l991
  8607                           
  8608                           ; BSR set to: 0
  8609  001628  C0BA  F0C2         	movff	___fladd@b,??___fladd
  8610  00162C  C0BB  F0C3         	movff	___fladd@b+1,??___fladd+1
  8611  001630  C0BC  F0C4         	movff	___fladd@b+2,??___fladd+2
  8612  001634  C0BD  F0C5         	movff	___fladd@b+3,??___fladd+3
  8613  001638  1FC2               	comf	??___fladd& (0+255),f,b
  8614  00163A  1FC3               	comf	(??___fladd+1)& (0+255),f,b
  8615  00163C  1FC4               	comf	(??___fladd+2)& (0+255),f,b
  8616  00163E  1FC5               	comf	(??___fladd+3)& (0+255),f,b
  8617  001640  2BC2               	incf	??___fladd& (0+255),f,b
  8618  001642  0E00               	movlw	0
  8619  001644  23C3               	addwfc	(??___fladd+1)& (0+255),f,b
  8620  001646  23C4               	addwfc	(??___fladd+2)& (0+255),f,b
  8621  001648  23C5               	addwfc	(??___fladd+3)& (0+255),f,b
  8622  00164A  51BE               	movf	___fladd@a& (0+255),w,b
  8623  00164C  25C2               	addwf	??___fladd& (0+255),w,b
  8624  00164E  6FC6               	movwf	(??___fladd+4)& (0+255),b
  8625  001650  51BF               	movf	(___fladd@a+1)& (0+255),w,b
  8626  001652  21C3               	addwfc	(??___fladd+1)& (0+255),w,b
  8627  001654  6FC7               	movwf	(??___fladd+5)& (0+255),b
  8628  001656  51C0               	movf	(___fladd@a+2)& (0+255),w,b
  8629  001658  21C4               	addwfc	(??___fladd+2)& (0+255),w,b
  8630  00165A  6FC8               	movwf	(??___fladd+6)& (0+255),b
  8631  00165C  51C1               	movf	(___fladd@a+3)& (0+255),w,b
  8632  00165E  21C5               	addwfc	(??___fladd+3)& (0+255),w,b
  8633  001660  6FC9               	movwf	(??___fladd+7)& (0+255),b
  8634  001662  0EFF               	movlw	255
  8635  001664  25C6               	addwf	(??___fladd+4)& (0+255),w,b
  8636  001666  6FBA               	movwf	___fladd@b& (0+255),b
  8637  001668  0EFF               	movlw	255
  8638  00166A  21C7               	addwfc	(??___fladd+5)& (0+255),w,b
  8639  00166C  6FBB               	movwf	(___fladd@b+1)& (0+255),b
  8640  00166E  0EFF               	movlw	255
  8641  001670  21C8               	addwfc	(??___fladd+6)& (0+255),w,b
  8642  001672  6FBC               	movwf	(___fladd@b+2)& (0+255),b
  8643  001674  0EFF               	movlw	255
  8644  001676  21C9               	addwfc	(??___fladd+7)& (0+255),w,b
  8645  001678  6FBD               	movwf	(___fladd@b+3)& (0+255),b
  8646  00167A  0E80               	movlw	128
  8647  00167C  1BCA               	xorwf	___fladd@signs& (0+255),f,b
  8648                           
  8649                           ; BSR set to: 0
  8650  00167E  6DCD               	negf	___fladd@grs& (0+255),b
  8651                           
  8652                           ; BSR set to: 0
  8653  001680  51CD               	movf	___fladd@grs& (0+255),w,b
  8654  001682  A4D8               	btfss	status,2,c
  8655  001684  D00F               	goto	l993
  8656                           
  8657                           ; BSR set to: 0
  8658  001686  0E01               	movlw	1
  8659  001688  27BA               	addwf	___fladd@b& (0+255),f,b
  8660  00168A  0E00               	movlw	0
  8661  00168C  23BB               	addwfc	(___fladd@b+1)& (0+255),f,b
  8662  00168E  23BC               	addwfc	(___fladd@b+2)& (0+255),f,b
  8663  001690  23BD               	addwfc	(___fladd@b+3)& (0+255),f,b
  8664                           
  8665                           ; BSR set to: 0
  8666  001692  D008               	goto	l993
  8667  001694                     l991:
  8668                           
  8669                           ; BSR set to: 0
  8670                           
  8671                           ; BSR set to: 0
  8672  001694  51BE               	movf	___fladd@a& (0+255),w,b
  8673  001696  5FBA               	subwf	___fladd@b& (0+255),f,b
  8674  001698  51BF               	movf	(___fladd@a+1)& (0+255),w,b
  8675  00169A  5BBB               	subwfb	(___fladd@b+1)& (0+255),f,b
  8676  00169C  51C0               	movf	(___fladd@a+2)& (0+255),w,b
  8677  00169E  5BBC               	subwfb	(___fladd@b+2)& (0+255),f,b
  8678  0016A0  51C1               	movf	(___fladd@a+3)& (0+255),w,b
  8679  0016A2  5BBD               	subwfb	(___fladd@b+3)& (0+255),f,b
  8680  0016A4                     l993:
  8681                           
  8682                           ; BSR set to: 0
  8683  0016A4  51BA               	movf	___fladd@b& (0+255),w,b
  8684  0016A6  11BB               	iorwf	(___fladd@b+1)& (0+255),w,b
  8685  0016A8  11BC               	iorwf	(___fladd@b+2)& (0+255),w,b
  8686  0016AA  11BD               	iorwf	(___fladd@b+3)& (0+255),w,b
  8687  0016AC  A4D8               	btfss	status,2,c
  8688  0016AE  D01C               	goto	l1000
  8689                           
  8690                           ; BSR set to: 0
  8691  0016B0  51CD               	movf	___fladd@grs& (0+255),w,b
  8692  0016B2  A4D8               	btfss	status,2,c
  8693  0016B4  D019               	goto	l1000
  8694                           
  8695                           ; BSR set to: 0
  8696  0016B6  0E00               	movlw	0
  8697  0016B8  6FBA               	movwf	?___fladd& (0+255),b
  8698  0016BA  0E00               	movlw	0
  8699  0016BC  6FBB               	movwf	(?___fladd+1)& (0+255),b
  8700  0016BE  0E00               	movlw	0
  8701  0016C0  6FBC               	movwf	(?___fladd+2)& (0+255),b
  8702  0016C2  0E00               	movlw	0
  8703  0016C4  6FBD               	movwf	(?___fladd+3)& (0+255),b
  8704                           
  8705                           ; BSR set to: 0
  8706  0016C6  0012               	return	
  8707  0016C8                     
  8708                           ; BSR set to: 0
  8709                           
  8710                           ; BSR set to: 0
  8711  0016C8  90D8               	bcf	status,0,c
  8712  0016CA  37BA               	rlcf	___fladd@b& (0+255),f,b
  8713  0016CC  37BB               	rlcf	(___fladd@b+1)& (0+255),f,b
  8714  0016CE  37BC               	rlcf	(___fladd@b+2)& (0+255),f,b
  8715  0016D0  37BD               	rlcf	(___fladd@b+3)& (0+255),f,b
  8716                           
  8717                           ; BSR set to: 0
  8718  0016D2  BFCD               	btfsc	___fladd@grs& (0+255),7,b
  8719                           
  8720                           ; BSR set to: 0
  8721  0016D4  81BA               	bsf	___fladd@b& (0+255),0,b
  8722                           
  8723                           ; BSR set to: 0
  8724                           
  8725                           ; BSR set to: 0
  8726  0016D6  A1CD               	btfss	___fladd@grs& (0+255),0,b
  8727  0016D8  D002               	goto	l998
  8728                           
  8729                           ; BSR set to: 0
  8730  0016DA  80D8               	bsf	status,0,c
  8731  0016DC  D001               	goto	L11
  8732  0016DE                     l998:
  8733                           
  8734                           ; BSR set to: 0
  8735                           
  8736                           ; BSR set to: 0
  8737  0016DE  90D8               	bcf	status,0,c
  8738  0016E0                     L11:
  8739  0016E0  37CD               	rlcf	___fladd@grs& (0+255),f,b
  8740                           
  8741                           ; BSR set to: 0
  8742                           
  8743                           ; BSR set to: 0
  8744  0016E2  51CC               	movf	___fladd@bexp& (0+255),w,b
  8745  0016E4  A4D8               	btfss	status,2,c
  8746                           
  8747                           ; BSR set to: 0
  8748  0016E6  07CC               	decf	___fladd@bexp& (0+255),f,b
  8749  0016E8                     l1000:
  8750                           
  8751                           ; BSR set to: 0
  8752                           
  8753                           ; BSR set to: 0
  8754                           
  8755                           ; BSR set to: 0
  8756  0016E8  AFBC               	btfss	(___fladd@b+2)& (0+255),7,b
  8757  0016EA  D7EE               	goto	l996
  8758  0016EC                     u3270:
  8759                           
  8760                           ; BSR set to: 0
  8761                           
  8762                           ; BSR set to: 0
  8763                           
  8764                           ; BSR set to: 0
  8765  0016EC  0E00               	movlw	0
  8766  0016EE  6FCB               	movwf	___fladd@aexp& (0+255),b
  8767                           
  8768                           ; BSR set to: 0
  8769  0016F0  AFCD               	btfss	___fladd@grs& (0+255),7,b
  8770  0016F2  D00A               	goto	l1005
  8771                           
  8772                           ; BSR set to: 0
  8773  0016F4  C0CD  F0C2         	movff	___fladd@grs,??___fladd
  8774  0016F8  0E7F               	movlw	127
  8775  0016FA  17C2               	andwf	??___fladd& (0+255),f,b
  8776  0016FC  A4D8               	btfss	status,2,c
  8777  0016FE  D002               	goto	u3300
  8778                           
  8779                           ; BSR set to: 0
  8780                           
  8781                           ; BSR set to: 0
  8782  001700  A1BA               	btfss	___fladd@b& (0+255),0,b
  8783  001702  D002               	goto	l1005
  8784  001704                     u3300:
  8785                           
  8786                           ; BSR set to: 0
  8787  001704  0E01               	movlw	1
  8788  001706  6FCB               	movwf	___fladd@aexp& (0+255),b
  8789  001708                     l1005:
  8790                           
  8791                           ; BSR set to: 0
  8792                           
  8793                           ; BSR set to: 0
  8794                           
  8795                           ; BSR set to: 0
  8796  001708  51CB               	movf	___fladd@aexp& (0+255),w,b
  8797  00170A  B4D8               	btfsc	status,2,c
  8798  00170C  D020               	goto	l1008
  8799                           
  8800                           ; BSR set to: 0
  8801  00170E  0E01               	movlw	1
  8802  001710  27BA               	addwf	___fladd@b& (0+255),f,b
  8803  001712  0E00               	movlw	0
  8804  001714  23BB               	addwfc	(___fladd@b+1)& (0+255),f,b
  8805  001716  23BC               	addwfc	(___fladd@b+2)& (0+255),f,b
  8806  001718  23BD               	addwfc	(___fladd@b+3)& (0+255),f,b
  8807                           
  8808                           ; BSR set to: 0
  8809  00171A  A1BD               	btfss	(___fladd@b+3)& (0+255),0,b
  8810  00171C  D018               	goto	l1008
  8811                           
  8812                           ; BSR set to: 0
  8813  00171E  C0BA  F0C2         	movff	___fladd@b,??___fladd
  8814  001722  C0BB  F0C3         	movff	___fladd@b+1,??___fladd+1
  8815  001726  C0BC  F0C4         	movff	___fladd@b+2,??___fladd+2
  8816  00172A  C0BD  F0C5         	movff	___fladd@b+3,??___fladd+3
  8817  00172E  35C5               	rlcf	(??___fladd+3)& (0+255),w,b
  8818  001730  33C5               	rrcf	(??___fladd+3)& (0+255),f,b
  8819  001732  33C4               	rrcf	(??___fladd+2)& (0+255),f,b
  8820  001734  33C3               	rrcf	(??___fladd+1)& (0+255),f,b
  8821  001736  33C2               	rrcf	??___fladd& (0+255),f,b
  8822  001738  C0C2  F0BA         	movff	??___fladd,___fladd@b
  8823  00173C  C0C3  F0BB         	movff	??___fladd+1,___fladd@b+1
  8824  001740  C0C4  F0BC         	movff	??___fladd+2,___fladd@b+2
  8825  001744  C0C5  F0BD         	movff	??___fladd+3,___fladd@b+3
  8826  001748  29CC               	incf	___fladd@bexp& (0+255),w,b
  8827  00174A  A4D8               	btfss	status,2,c
  8828                           
  8829                           ; BSR set to: 0
  8830  00174C  2BCC               	incf	___fladd@bexp& (0+255),f,b
  8831  00174E                     l1008:
  8832                           
  8833                           ; BSR set to: 0
  8834                           
  8835                           ; BSR set to: 0
  8836                           
  8837                           ; BSR set to: 0
  8838                           
  8839                           ; BSR set to: 0
  8840  00174E  29CC               	incf	___fladd@bexp& (0+255),w,b
  8841  001750  B4D8               	btfsc	status,2,c
  8842  001752  D003               	goto	u3350
  8843                           
  8844                           ; BSR set to: 0
  8845  001754  51CC               	movf	___fladd@bexp& (0+255),w,b
  8846  001756  A4D8               	btfss	status,2,c
  8847  001758  D00D               	goto	l1012
  8848  00175A                     u3350:
  8849                           
  8850                           ; BSR set to: 0
  8851                           
  8852                           ; BSR set to: 0
  8853  00175A  0E00               	movlw	0
  8854  00175C  6FBA               	movwf	___fladd@b& (0+255),b
  8855  00175E  0E00               	movlw	0
  8856  001760  6FBB               	movwf	(___fladd@b+1)& (0+255),b
  8857  001762  0E00               	movlw	0
  8858  001764  6FBC               	movwf	(___fladd@b+2)& (0+255),b
  8859  001766  0E00               	movlw	0
  8860  001768  6FBD               	movwf	(___fladd@b+3)& (0+255),b
  8861  00176A  51CC               	movf	___fladd@bexp& (0+255),w,b
  8862  00176C  A4D8               	btfss	status,2,c
  8863  00176E  D002               	goto	l1012
  8864                           
  8865                           ; BSR set to: 0
  8866  001770  0E00               	movlw	0
  8867  001772  6FCA               	movwf	___fladd@signs& (0+255),b
  8868  001774                     l1012:
  8869                           
  8870                           ; BSR set to: 0
  8871                           
  8872                           ; BSR set to: 0
  8873                           
  8874                           ; BSR set to: 0
  8875  001774  A1CC               	btfss	___fladd@bexp& (0+255),0,b
  8876  001776  D002               	goto	l1013
  8877                           
  8878                           ; BSR set to: 0
  8879  001778  8FBC               	bsf	(___fladd@b+2)& (0+255),7,b
  8880  00177A  D001               	goto	l1014
  8881  00177C                     l1013:
  8882                           
  8883                           ; BSR set to: 0
  8884                           
  8885                           ; BSR set to: 0
  8886  00177C  9FBC               	bcf	(___fladd@b+2)& (0+255),7,b
  8887  00177E                     l1014:
  8888                           
  8889                           ; BSR set to: 0
  8890                           
  8891                           ; BSR set to: 0
  8892  00177E  90D8               	bcf	status,0,c
  8893  001780  31CC               	rrcf	___fladd@bexp& (0+255),w,b
  8894  001782  6FBD               	movwf	(___fladd@b+3)& (0+255),b
  8895                           
  8896                           ; BSR set to: 0
  8897  001784  BFCA               	btfsc	___fladd@signs& (0+255),7,b
  8898                           
  8899                           ; BSR set to: 0
  8900  001786  8FBD               	bsf	(___fladd@b+3)& (0+255),7,b
  8901                           
  8902                           ; BSR set to: 0
  8903                           
  8904                           ; BSR set to: 0
  8905  001788  C0BA  F0BA         	movff	___fladd@b,?___fladd
  8906  00178C  C0BB  F0BB         	movff	___fladd@b+1,?___fladd+1
  8907  001790  C0BC  F0BC         	movff	___fladd@b+2,?___fladd+2
  8908  001794  C0BD  F0BD         	movff	___fladd@b+3,?___fladd+3
  8909  001798  0012               	return	
  8910  00179A                     __end_of___fladd:
  8911                           	opt stack 0
  8912                           tblptru	equ	0xFF8
  8913                           tblptrh	equ	0xFF7
  8914                           tblptrl	equ	0xFF6
  8915                           tablat	equ	0xFF5
  8916                           prodh	equ	0xFF4
  8917                           prodl	equ	0xFF3
  8918                           intcon	equ	0xFF2
  8919                           indf0	equ	0xFEF
  8920                           postinc0	equ	0xFEE
  8921                           fsr0h	equ	0xFEA
  8922                           fsr0l	equ	0xFE9
  8923                           wreg	equ	0xFE8
  8924                           postdec1	equ	0xFE5
  8925                           fsr1l	equ	0xFE1
  8926                           indf2	equ	0xFDF
  8927                           postinc2	equ	0xFDE
  8928                           postdec2	equ	0xFDD
  8929                           fsr2h	equ	0xFDA
  8930                           fsr2l	equ	0xFD9
  8931                           status	equ	0xFD8
  8932                           
  8933 ;; *************** function _read_adc_voltage *****************
  8934 ;; Defined at:
  8935 ;;		line 48 in file "my_adc.c"
  8936 ;; Parameters:    Size  Location     Type
  8937 ;;  channel         1    wreg     unsigned char 
  8938 ;; Auto vars:     Size  Location     Type
  8939 ;;  channel         1   76[BANK0 ] unsigned char 
  8940 ;;  voltage         4   77[BANK0 ] float 
  8941 ;;  raw_value       2   74[BANK0 ] int 
  8942 ;; Return value:  Size  Location     Type
  8943 ;;                  4   70[BANK0 ] float 
  8944 ;; Registers used:
  8945 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8946 ;; Tracked objects:
  8947 ;;		On entry : 0/0
  8948 ;;		On exit  : 0/0
  8949 ;;		Unchanged: 0/0
  8950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8951 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8952 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8954 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8955 ;;Total ram usage:       11 bytes
  8956 ;; Hardware stack levels used:    1
  8957 ;; Hardware stack levels required when called:    4
  8958 ;; This function calls:
  8959 ;;		___fldiv
  8960 ;;		___flmul
  8961 ;;		___wmul
  8962 ;;		___xxtofl
  8963 ;;		_read_adc_raw_no_lib
  8964 ;; This function is called by:
  8965 ;;		_main
  8966 ;; This function uses a non-reentrant model
  8967 ;;
  8968                           
  8969                           	psect	text29
  8970  002370                     __ptext29:
  8971                           	opt stack 0
  8972  002370                     _read_adc_voltage:
  8973                           	opt stack 26
  8974                           
  8975                           ; BSR set to: 0
  8976                           ;incstack = 0
  8977                           ;read_adc_voltage@channel stored from wreg
  8978  002370  0100               	movlb	0	; () banked
  8979  002372  6FCC               	movwf	read_adc_voltage@channel& (0+255),b
  8980                           
  8981                           ;my_adc.c: 49: int raw_value;
  8982                           ;my_adc.c: 50: float voltage;
  8983                           ;my_adc.c: 51: if(channel==2){
  8984  002374  0E02               	movlw	2
  8985  002376  0100               	movlb	0	; () banked
  8986  002378  19CC               	xorwf	read_adc_voltage@channel& (0+255),w,b
  8987  00237A  A4D8               	btfss	status,2,c
  8988  00237C  D05E               	goto	l279
  8989                           
  8990                           ; BSR set to: 0
  8991                           ;my_adc.c: 52: raw_value = read_adc_raw_no_lib(channel);
  8992  00237E  51CC               	movf	read_adc_voltage@channel& (0+255),w,b
  8993  002380  EC79  F01A         	call	_read_adc_raw_no_lib
  8994  002384  C080  F0CA         	movff	?_read_adc_raw_no_lib,read_adc_voltage@raw_value
  8995  002388  C081  F0CB         	movff	?_read_adc_raw_no_lib+1,read_adc_voltage@raw_value+1
  8996                           
  8997                           ;my_adc.c: 53: voltage = (raw_value * 5) / 1023.0;
  8998  00238C  C0CA  F080         	movff	read_adc_voltage@raw_value,___wmul@multiplier
  8999  002390  C0CB  F081         	movff	read_adc_voltage@raw_value+1,___wmul@multiplier+1
  9000  002394  0E00               	movlw	0
  9001  002396  0100               	movlb	0	; () banked
  9002  002398  6F83               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9003  00239A  0E05               	movlw	5
  9004  00239C  6F82               	movwf	___wmul@multiplicand& (0+255),b
  9005  00239E  EC58  F01B         	call	___wmul	;wreg free
  9006  0023A2  0100               	movlb	0	; () banked
  9007  0023A4  C080  F086         	movff	?___wmul,___xxtofl@val
  9008  0023A8  C081  F087         	movff	?___wmul+1,___xxtofl@val+1
  9009  0023AC  0E00               	movlw	0
  9010  0023AE  BF87               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  9011  0023B0  0EFF               	movlw	-1
  9012  0023B2  6F88               	movwf	(___xxtofl@val+2)& (0+255),b
  9013  0023B4  6F89               	movwf	(___xxtofl@val+3)& (0+255),b
  9014  0023B6  0E01               	movlw	1
  9015  0023B8  EC68  F012         	call	___xxtofl
  9016  0023BC  C086  F0AD         	movff	?___xxtofl,___fldiv@b
  9017  0023C0  C087  F0AE         	movff	?___xxtofl+1,___fldiv@b+1
  9018  0023C4  C088  F0AF         	movff	?___xxtofl+2,___fldiv@b+2
  9019  0023C8  C089  F0B0         	movff	?___xxtofl+3,___fldiv@b+3
  9020  0023CC  0E00               	movlw	0
  9021  0023CE  0100               	movlb	0	; () banked
  9022  0023D0  6FB1               	movwf	___fldiv@a& (0+255),b
  9023  0023D2  0EC0               	movlw	192
  9024  0023D4  6FB2               	movwf	(___fldiv@a+1)& (0+255),b
  9025  0023D6  0E7F               	movlw	127
  9026  0023D8  6FB3               	movwf	(___fldiv@a+2)& (0+255),b
  9027  0023DA  0E44               	movlw	68
  9028  0023DC  6FB4               	movwf	(___fldiv@a+3)& (0+255),b
  9029  0023DE  EC5D  F010         	call	___fldiv	;wreg free
  9030  0023E2  C0AD  F0CD         	movff	?___fldiv,read_adc_voltage@voltage
  9031  0023E6  C0AE  F0CE         	movff	?___fldiv+1,read_adc_voltage@voltage+1
  9032  0023EA  C0AF  F0CF         	movff	?___fldiv+2,read_adc_voltage@voltage+2
  9033  0023EE  C0B0  F0D0         	movff	?___fldiv+3,read_adc_voltage@voltage+3
  9034                           
  9035                           ;my_adc.c: 54: voltage*=100.0;
  9036  0023F2  C0CD  F094         	movff	read_adc_voltage@voltage,___flmul@b
  9037  0023F6  C0CE  F095         	movff	read_adc_voltage@voltage+1,___flmul@b+1
  9038  0023FA  C0CF  F096         	movff	read_adc_voltage@voltage+2,___flmul@b+2
  9039  0023FE  C0D0  F097         	movff	read_adc_voltage@voltage+3,___flmul@b+3
  9040  002402  0E00               	movlw	0
  9041  002404  0100               	movlb	0	; () banked
  9042  002406  6F98               	movwf	___flmul@a& (0+255),b
  9043  002408  0E00               	movlw	0
  9044  00240A  6F99               	movwf	(___flmul@a+1)& (0+255),b
  9045  00240C  0EC8               	movlw	200
  9046  00240E  6F9A               	movwf	(___flmul@a+2)& (0+255),b
  9047  002410  0E42               	movlw	66
  9048  002412  6F9B               	movwf	(___flmul@a+3)& (0+255),b
  9049  002414  EC85  F008         	call	___flmul	;wreg free
  9050  002418  C094  F0CD         	movff	?___flmul,read_adc_voltage@voltage
  9051  00241C  C095  F0CE         	movff	?___flmul+1,read_adc_voltage@voltage+1
  9052  002420  C096  F0CF         	movff	?___flmul+2,read_adc_voltage@voltage+2
  9053  002424  C097  F0D0         	movff	?___flmul+3,read_adc_voltage@voltage+3
  9054                           
  9055                           ;my_adc.c: 55: return voltage;
  9056  002428  C0CD  F0C6         	movff	read_adc_voltage@voltage,?_read_adc_voltage
  9057  00242C  C0CE  F0C7         	movff	read_adc_voltage@voltage+1,?_read_adc_voltage+1
  9058  002430  C0CF  F0C8         	movff	read_adc_voltage@voltage+2,?_read_adc_voltage+2
  9059  002434  C0D0  F0C9         	movff	read_adc_voltage@voltage+3,?_read_adc_voltage+3
  9060  002438  0012               	return	
  9061  00243A                     l279:
  9062                           
  9063                           ;my_adc.c: 56: }
  9064                           ;my_adc.c: 62: raw_value = read_adc_raw_no_lib(channel);
  9065  00243A  0100               	movlb	0	; () banked
  9066  00243C  51CC               	movf	read_adc_voltage@channel& (0+255),w,b
  9067  00243E  EC79  F01A         	call	_read_adc_raw_no_lib
  9068  002442  C080  F0CA         	movff	?_read_adc_raw_no_lib,read_adc_voltage@raw_value
  9069  002446  C081  F0CB         	movff	?_read_adc_raw_no_lib+1,read_adc_voltage@raw_value+1
  9070                           
  9071                           ;my_adc.c: 63: voltage = (raw_value * 100.0) / 1023.0;
  9072  00244A  0E00               	movlw	0
  9073  00244C  0100               	movlb	0	; () banked
  9074  00244E  6F98               	movwf	___flmul@a& (0+255),b
  9075  002450  0E00               	movlw	0
  9076  002452  6F99               	movwf	(___flmul@a+1)& (0+255),b
  9077  002454  0EC8               	movlw	200
  9078  002456  6F9A               	movwf	(___flmul@a+2)& (0+255),b
  9079  002458  0E42               	movlw	66
  9080  00245A  6F9B               	movwf	(___flmul@a+3)& (0+255),b
  9081  00245C  C0CA  F086         	movff	read_adc_voltage@raw_value,___xxtofl@val
  9082  002460  C0CB  F087         	movff	read_adc_voltage@raw_value+1,___xxtofl@val+1
  9083  002464  0E00               	movlw	0
  9084  002466  BF87               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  9085  002468  0EFF               	movlw	-1
  9086  00246A  6F88               	movwf	(___xxtofl@val+2)& (0+255),b
  9087  00246C  6F89               	movwf	(___xxtofl@val+3)& (0+255),b
  9088  00246E  0E01               	movlw	1
  9089  002470  EC68  F012         	call	___xxtofl
  9090  002474  C086  F094         	movff	?___xxtofl,___flmul@b
  9091  002478  C087  F095         	movff	?___xxtofl+1,___flmul@b+1
  9092  00247C  C088  F096         	movff	?___xxtofl+2,___flmul@b+2
  9093  002480  C089  F097         	movff	?___xxtofl+3,___flmul@b+3
  9094  002484  EC85  F008         	call	___flmul	;wreg free
  9095  002488  C094  F0AD         	movff	?___flmul,___fldiv@b
  9096  00248C  C095  F0AE         	movff	?___flmul+1,___fldiv@b+1
  9097  002490  C096  F0AF         	movff	?___flmul+2,___fldiv@b+2
  9098  002494  C097  F0B0         	movff	?___flmul+3,___fldiv@b+3
  9099  002498  0E00               	movlw	0
  9100  00249A  0100               	movlb	0	; () banked
  9101  00249C  6FB1               	movwf	___fldiv@a& (0+255),b
  9102  00249E  0EC0               	movlw	192
  9103  0024A0  6FB2               	movwf	(___fldiv@a+1)& (0+255),b
  9104  0024A2  0E7F               	movlw	127
  9105  0024A4  6FB3               	movwf	(___fldiv@a+2)& (0+255),b
  9106  0024A6  0E44               	movlw	68
  9107  0024A8  6FB4               	movwf	(___fldiv@a+3)& (0+255),b
  9108  0024AA  EC5D  F010         	call	___fldiv	;wreg free
  9109  0024AE  C0AD  F0CD         	movff	?___fldiv,read_adc_voltage@voltage
  9110  0024B2  C0AE  F0CE         	movff	?___fldiv+1,read_adc_voltage@voltage+1
  9111  0024B6  C0AF  F0CF         	movff	?___fldiv+2,read_adc_voltage@voltage+2
  9112  0024BA  C0B0  F0D0         	movff	?___fldiv+3,read_adc_voltage@voltage+3
  9113                           
  9114                           ;my_adc.c: 64: return voltage;
  9115  0024BE  C0CD  F0C6         	movff	read_adc_voltage@voltage,?_read_adc_voltage
  9116  0024C2  C0CE  F0C7         	movff	read_adc_voltage@voltage+1,?_read_adc_voltage+1
  9117  0024C6  C0CF  F0C8         	movff	read_adc_voltage@voltage+2,?_read_adc_voltage+2
  9118  0024CA  C0D0  F0C9         	movff	read_adc_voltage@voltage+3,?_read_adc_voltage+3
  9119  0024CE  0012               	return	
  9120  0024D0                     __end_of_read_adc_voltage:
  9121                           	opt stack 0
  9122                           tblptru	equ	0xFF8
  9123                           tblptrh	equ	0xFF7
  9124                           tblptrl	equ	0xFF6
  9125                           tablat	equ	0xFF5
  9126                           prodh	equ	0xFF4
  9127                           prodl	equ	0xFF3
  9128                           intcon	equ	0xFF2
  9129                           indf0	equ	0xFEF
  9130                           postinc0	equ	0xFEE
  9131                           fsr0h	equ	0xFEA
  9132                           fsr0l	equ	0xFE9
  9133                           wreg	equ	0xFE8
  9134                           postdec1	equ	0xFE5
  9135                           fsr1l	equ	0xFE1
  9136                           indf2	equ	0xFDF
  9137                           postinc2	equ	0xFDE
  9138                           postdec2	equ	0xFDD
  9139                           fsr2h	equ	0xFDA
  9140                           fsr2l	equ	0xFD9
  9141                           status	equ	0xFD8
  9142                           
  9143 ;; *************** function _read_adc_raw_no_lib *****************
  9144 ;; Defined at:
  9145 ;;		line 32 in file "my_adc.c"
  9146 ;; Parameters:    Size  Location     Type
  9147 ;;  channel         1    wreg     unsigned char 
  9148 ;; Auto vars:     Size  Location     Type
  9149 ;;  channel         1    6[BANK0 ] unsigned char 
  9150 ;;  raw_value       2    4[BANK0 ] int 
  9151 ;; Return value:  Size  Location     Type
  9152 ;;                  2    0[BANK0 ] int 
  9153 ;; Registers used:
  9154 ;;		wreg, status,2, status,0
  9155 ;; Tracked objects:
  9156 ;;		On entry : 0/0
  9157 ;;		On exit  : 0/0
  9158 ;;		Unchanged: 0/0
  9159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9160 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9161 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9162 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9163 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9164 ;;Total ram usage:        7 bytes
  9165 ;; Hardware stack levels used:    1
  9166 ;; Hardware stack levels required when called:    3
  9167 ;; This function calls:
  9168 ;;		Nothing
  9169 ;; This function is called by:
  9170 ;;		_read_adc_voltage
  9171 ;; This function uses a non-reentrant model
  9172 ;;
  9173                           
  9174                           	psect	text30
  9175  0034F2                     __ptext30:
  9176                           	opt stack 0
  9177  0034F2                     _read_adc_raw_no_lib:
  9178                           	opt stack 26
  9179                           
  9180                           ;incstack = 0
  9181                           ;read_adc_raw_no_lib@channel stored from wreg
  9182  0034F2  0100               	movlb	0	; () banked
  9183  0034F4  6F86               	movwf	read_adc_raw_no_lib@channel& (0+255),b
  9184                           
  9185                           ;my_adc.c: 33: int raw_value;
  9186                           ;my_adc.c: 34: ADCON0bits.CHS = channel;
  9187  0034F6  C086  F082         	movff	read_adc_raw_no_lib@channel,??_read_adc_raw_no_lib
  9188  0034FA  0100               	movlb	0	; () banked
  9189  0034FC  4782               	rlncf	??_read_adc_raw_no_lib& (0+255),f,b
  9190  0034FE  4782               	rlncf	??_read_adc_raw_no_lib& (0+255),f,b
  9191  003500  50C2               	movf	4034,w,c	;volatile
  9192  003502  1982               	xorwf	??_read_adc_raw_no_lib& (0+255),w,b
  9193  003504  0BC3               	andlw	-61
  9194  003506  1982               	xorwf	??_read_adc_raw_no_lib& (0+255),w,b
  9195  003508  6EC2               	movwf	4034,c	;volatile
  9196                           
  9197                           ; BSR set to: 0
  9198                           ;my_adc.c: 37: ADCON0bits.GO = 1;
  9199  00350A  82C2               	bsf	4034,1,c	;volatile
  9200  00350C                     
  9201                           ; BSR set to: 0
  9202  00350C  B2C2               	btfsc	4034,1,c	;volatile
  9203  00350E  D7FE               	goto	l274
  9204                           
  9205                           ;my_adc.c: 41: raw_value = ADRESH << 8 | ADRESL;
  9206  003510  50C3               	movf	4035,w,c	;volatile
  9207  003512  CFC4 F082          	movff	4036,??_read_adc_raw_no_lib	;volatile
  9208  003516  0100               	movlb	0	; () banked
  9209  003518  6B83               	clrf	(??_read_adc_raw_no_lib+1)& (0+255),b
  9210  00351A  C082  F083         	movff	??_read_adc_raw_no_lib,??_read_adc_raw_no_lib+1
  9211  00351E  6B82               	clrf	??_read_adc_raw_no_lib& (0+255),b
  9212  003520  1182               	iorwf	??_read_adc_raw_no_lib& (0+255),w,b
  9213  003522  6F84               	movwf	read_adc_raw_no_lib@raw_value& (0+255),b
  9214  003524  5183               	movf	(??_read_adc_raw_no_lib+1)& (0+255),w,b
  9215  003526  6F85               	movwf	(read_adc_raw_no_lib@raw_value+1)& (0+255),b
  9216                           
  9217                           ; BSR set to: 0
  9218                           ;my_adc.c: 45: return raw_value;
  9219  003528  C084  F080         	movff	read_adc_raw_no_lib@raw_value,?_read_adc_raw_no_lib
  9220  00352C  C085  F081         	movff	read_adc_raw_no_lib@raw_value+1,?_read_adc_raw_no_lib+1
  9221  003530  0012               	return	
  9222  003532                     __end_of_read_adc_raw_no_lib:
  9223                           	opt stack 0
  9224                           tblptru	equ	0xFF8
  9225                           tblptrh	equ	0xFF7
  9226                           tblptrl	equ	0xFF6
  9227                           tablat	equ	0xFF5
  9228                           prodh	equ	0xFF4
  9229                           prodl	equ	0xFF3
  9230                           intcon	equ	0xFF2
  9231                           indf0	equ	0xFEF
  9232                           postinc0	equ	0xFEE
  9233                           fsr0h	equ	0xFEA
  9234                           fsr0l	equ	0xFE9
  9235                           wreg	equ	0xFE8
  9236                           postdec1	equ	0xFE5
  9237                           fsr1l	equ	0xFE1
  9238                           indf2	equ	0xFDF
  9239                           postinc2	equ	0xFDE
  9240                           postdec2	equ	0xFDD
  9241                           fsr2h	equ	0xFDA
  9242                           fsr2l	equ	0xFD9
  9243                           status	equ	0xFD8
  9244                           
  9245 ;; *************** function ___xxtofl *****************
  9246 ;; Defined at:
  9247 ;;		line 10 in file "/opt/microchip/xc8/v1.45/sources/common/xxtofl.c"
  9248 ;; Parameters:    Size  Location     Type
  9249 ;;  sign            1    wreg     unsigned char 
  9250 ;;  val             4    6[BANK0 ] long 
  9251 ;; Auto vars:     Size  Location     Type
  9252 ;;  sign            1   14[BANK0 ] unsigned char 
  9253 ;;  arg             4   16[BANK0 ] unsigned long 
  9254 ;;  exp             1   15[BANK0 ] unsigned char 
  9255 ;; Return value:  Size  Location     Type
  9256 ;;                  4    6[BANK0 ] unsigned char 
  9257 ;; Registers used:
  9258 ;;		wreg, status,2, status,0
  9259 ;; Tracked objects:
  9260 ;;		On entry : 0/0
  9261 ;;		On exit  : 0/0
  9262 ;;		Unchanged: 0/0
  9263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9264 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9265 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9266 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9267 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9268 ;;Total ram usage:       14 bytes
  9269 ;; Hardware stack levels used:    1
  9270 ;; Hardware stack levels required when called:    3
  9271 ;; This function calls:
  9272 ;;		Nothing
  9273 ;; This function is called by:
  9274 ;;		_main
  9275 ;;		_read_adc_voltage
  9276 ;;		_sprintf
  9277 ;; This function uses a non-reentrant model
  9278 ;;
  9279                           
  9280                           	psect	text31
  9281  0024D0                     __ptext31:
  9282                           	opt stack 0
  9283  0024D0                     ___xxtofl:
  9284                           	opt stack 25
  9285                           
  9286                           ; BSR set to: 0
  9287                           ;incstack = 0
  9288                           ;___xxtofl@sign stored from wreg
  9289  0024D0  0100               	movlb	0	; () banked
  9290  0024D2  6F8E               	movwf	___xxtofl@sign& (0+255),b
  9291  0024D4  0100               	movlb	0	; () banked
  9292  0024D6  518E               	movf	___xxtofl@sign& (0+255),w,b
  9293  0024D8  A4D8               	btfss	status,2,c
  9294                           
  9295                           ; BSR set to: 0
  9296  0024DA  AF89               	btfss	(___xxtofl@val+3)& (0+255),7,b
  9297  0024DC  D01A               	goto	l1084
  9298                           
  9299                           ; BSR set to: 0
  9300  0024DE  C086  F08A         	movff	___xxtofl@val,??___xxtofl
  9301  0024E2  C087  F08B         	movff	___xxtofl@val+1,??___xxtofl+1
  9302  0024E6  C088  F08C         	movff	___xxtofl@val+2,??___xxtofl+2
  9303  0024EA  C089  F08D         	movff	___xxtofl@val+3,??___xxtofl+3
  9304  0024EE  1F8A               	comf	??___xxtofl& (0+255),f,b
  9305  0024F0  1F8B               	comf	(??___xxtofl+1)& (0+255),f,b
  9306  0024F2  1F8C               	comf	(??___xxtofl+2)& (0+255),f,b
  9307  0024F4  1F8D               	comf	(??___xxtofl+3)& (0+255),f,b
  9308  0024F6  2B8A               	incf	??___xxtofl& (0+255),f,b
  9309  0024F8  0E00               	movlw	0
  9310  0024FA  238B               	addwfc	(??___xxtofl+1)& (0+255),f,b
  9311  0024FC  238C               	addwfc	(??___xxtofl+2)& (0+255),f,b
  9312  0024FE  238D               	addwfc	(??___xxtofl+3)& (0+255),f,b
  9313  002500  C08A  F090         	movff	??___xxtofl,___xxtofl@arg
  9314  002504  C08B  F091         	movff	??___xxtofl+1,___xxtofl@arg+1
  9315  002508  C08C  F092         	movff	??___xxtofl+2,___xxtofl@arg+2
  9316  00250C  C08D  F093         	movff	??___xxtofl+3,___xxtofl@arg+3
  9317  002510  D008               	goto	l1085
  9318  002512                     l1084:
  9319                           
  9320                           ; BSR set to: 0
  9321  002512  C086  F090         	movff	___xxtofl@val,___xxtofl@arg
  9322  002516  C087  F091         	movff	___xxtofl@val+1,___xxtofl@arg+1
  9323  00251A  C088  F092         	movff	___xxtofl@val+2,___xxtofl@arg+2
  9324  00251E  C089  F093         	movff	___xxtofl@val+3,___xxtofl@arg+3
  9325  002522                     l1085:
  9326                           
  9327                           ; BSR set to: 0
  9328                           
  9329                           ; BSR set to: 0
  9330  002522  5186               	movf	___xxtofl@val& (0+255),w,b
  9331  002524  1187               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  9332  002526  1188               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  9333  002528  1189               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  9334  00252A  A4D8               	btfss	status,2,c
  9335  00252C  D009               	goto	l1086
  9336                           
  9337                           ; BSR set to: 0
  9338  00252E  0E00               	movlw	0
  9339  002530  6F86               	movwf	?___xxtofl& (0+255),b
  9340  002532  0E00               	movlw	0
  9341  002534  6F87               	movwf	(?___xxtofl+1)& (0+255),b
  9342  002536  0E00               	movlw	0
  9343  002538  6F88               	movwf	(?___xxtofl+2)& (0+255),b
  9344  00253A  0E00               	movlw	0
  9345  00253C  6F89               	movwf	(?___xxtofl+3)& (0+255),b
  9346                           
  9347                           ; BSR set to: 0
  9348  00253E  0012               	return	
  9349  002540                     l1086:
  9350                           
  9351                           ; BSR set to: 0
  9352                           
  9353                           ; BSR set to: 0
  9354  002540  0E96               	movlw	150
  9355  002542  6F8F               	movwf	___xxtofl@exp& (0+255),b
  9356  002544  D006               	goto	l1088
  9357  002546                     
  9358                           ; BSR set to: 0
  9359                           
  9360                           ; BSR set to: 0
  9361  002546  2B8F               	incf	___xxtofl@exp& (0+255),f,b
  9362  002548  90D8               	bcf	status,0,c
  9363  00254A  3393               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  9364  00254C  3392               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  9365  00254E  3391               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  9366  002550  3390               	rrcf	___xxtofl@arg& (0+255),f,b
  9367  002552                     l1088:
  9368                           
  9369                           ; BSR set to: 0
  9370                           
  9371                           ; BSR set to: 0
  9372  002552  0E00               	movlw	0
  9373  002554  1590               	andwf	___xxtofl@arg& (0+255),w,b
  9374  002556  6F8A               	movwf	??___xxtofl& (0+255),b
  9375  002558  0E00               	movlw	0
  9376  00255A  1591               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  9377  00255C  6F8B               	movwf	(??___xxtofl+1)& (0+255),b
  9378  00255E  0E00               	movlw	0
  9379  002560  1592               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  9380  002562  6F8C               	movwf	(??___xxtofl+2)& (0+255),b
  9381  002564  0EFE               	movlw	254
  9382  002566  1593               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  9383  002568  6F8D               	movwf	(??___xxtofl+3)& (0+255),b
  9384  00256A  518A               	movf	??___xxtofl& (0+255),w,b
  9385  00256C  118B               	iorwf	(??___xxtofl+1)& (0+255),w,b
  9386  00256E  118C               	iorwf	(??___xxtofl+2)& (0+255),w,b
  9387  002570  118D               	iorwf	(??___xxtofl+3)& (0+255),w,b
  9388  002572  B4D8               	btfsc	status,2,c
  9389  002574  D00D               	goto	l1091
  9390  002576  D7E7               	goto	l1089
  9391  002578                     
  9392                           ; BSR set to: 0
  9393                           
  9394                           ; BSR set to: 0
  9395  002578  2B8F               	incf	___xxtofl@exp& (0+255),f,b
  9396                           
  9397                           ; BSR set to: 0
  9398  00257A  0E01               	movlw	1
  9399  00257C  2790               	addwf	___xxtofl@arg& (0+255),f,b
  9400  00257E  0E00               	movlw	0
  9401  002580  2391               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  9402  002582  2392               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  9403  002584  2393               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  9404                           
  9405                           ; BSR set to: 0
  9406  002586  90D8               	bcf	status,0,c
  9407  002588  3393               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  9408  00258A  3392               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  9409  00258C  3391               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  9410  00258E  3390               	rrcf	___xxtofl@arg& (0+255),f,b
  9411  002590                     l1091:
  9412                           
  9413                           ; BSR set to: 0
  9414  002590  0E00               	movlw	0
  9415  002592  1590               	andwf	___xxtofl@arg& (0+255),w,b
  9416  002594  6F8A               	movwf	??___xxtofl& (0+255),b
  9417  002596  0E00               	movlw	0
  9418  002598  1591               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  9419  00259A  6F8B               	movwf	(??___xxtofl+1)& (0+255),b
  9420  00259C  0E00               	movlw	0
  9421  00259E  1592               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  9422  0025A0  6F8C               	movwf	(??___xxtofl+2)& (0+255),b
  9423  0025A2  0EFF               	movlw	255
  9424  0025A4  1593               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  9425  0025A6  6F8D               	movwf	(??___xxtofl+3)& (0+255),b
  9426  0025A8  518A               	movf	??___xxtofl& (0+255),w,b
  9427  0025AA  118B               	iorwf	(??___xxtofl+1)& (0+255),w,b
  9428  0025AC  118C               	iorwf	(??___xxtofl+2)& (0+255),w,b
  9429  0025AE  118D               	iorwf	(??___xxtofl+3)& (0+255),w,b
  9430  0025B0  B4D8               	btfsc	status,2,c
  9431  0025B2  D007               	goto	l1094
  9432  0025B4  D7E1               	goto	l1092
  9433  0025B6                     
  9434                           ; BSR set to: 0
  9435                           
  9436                           ; BSR set to: 0
  9437  0025B6  078F               	decf	___xxtofl@exp& (0+255),f,b
  9438  0025B8  90D8               	bcf	status,0,c
  9439  0025BA  3790               	rlcf	___xxtofl@arg& (0+255),f,b
  9440  0025BC  3791               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  9441  0025BE  3792               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  9442  0025C0  3793               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  9443  0025C2                     l1094:
  9444                           
  9445                           ; BSR set to: 0
  9446                           
  9447                           ; BSR set to: 0
  9448  0025C2  BF92               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  9449  0025C4  D003               	goto	u4200
  9450                           
  9451                           ; BSR set to: 0
  9452  0025C6  0E02               	movlw	2
  9453  0025C8  618F               	cpfslt	___xxtofl@exp& (0+255),b
  9454  0025CA  D7F5               	goto	l1095
  9455  0025CC                     u4200:
  9456                           
  9457                           ; BSR set to: 0
  9458                           
  9459                           ; BSR set to: 0
  9460  0025CC  B18F               	btfsc	___xxtofl@exp& (0+255),0,b
  9461  0025CE  D008               	goto	l1099
  9462                           
  9463                           ; BSR set to: 0
  9464  0025D0  0EFF               	movlw	255
  9465  0025D2  1790               	andwf	___xxtofl@arg& (0+255),f,b
  9466  0025D4  0EFF               	movlw	255
  9467  0025D6  1791               	andwf	(___xxtofl@arg+1)& (0+255),f,b
  9468  0025D8  0E7F               	movlw	127
  9469  0025DA  1792               	andwf	(___xxtofl@arg+2)& (0+255),f,b
  9470  0025DC  0EFF               	movlw	255
  9471  0025DE  1793               	andwf	(___xxtofl@arg+3)& (0+255),f,b
  9472  0025E0                     l1099:
  9473                           
  9474                           ; BSR set to: 0
  9475  0025E0  90D8               	bcf	status,0,c
  9476  0025E2  338F               	rrcf	___xxtofl@exp& (0+255),f,b
  9477  0025E4  C08F  F08A         	movff	___xxtofl@exp,??___xxtofl
  9478  0025E8  6B8B               	clrf	(??___xxtofl+1)& (0+255),b
  9479  0025EA  6B8C               	clrf	(??___xxtofl+2)& (0+255),b
  9480  0025EC  6B8D               	clrf	(??___xxtofl+3)& (0+255),b
  9481  0025EE  C08A  F08D         	movff	??___xxtofl,??___xxtofl+3
  9482  0025F2  6B8C               	clrf	(??___xxtofl+2)& (0+255),b
  9483  0025F4  6B8B               	clrf	(??___xxtofl+1)& (0+255),b
  9484  0025F6  6B8A               	clrf	??___xxtofl& (0+255),b
  9485  0025F8  518A               	movf	??___xxtofl& (0+255),w,b
  9486  0025FA  1390               	iorwf	___xxtofl@arg& (0+255),f,b
  9487  0025FC  518B               	movf	(??___xxtofl+1)& (0+255),w,b
  9488  0025FE  1391               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  9489  002600  518C               	movf	(??___xxtofl+2)& (0+255),w,b
  9490  002602  1392               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  9491  002604  518D               	movf	(??___xxtofl+3)& (0+255),w,b
  9492  002606  1393               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  9493                           
  9494                           ; BSR set to: 0
  9495  002608  518E               	movf	___xxtofl@sign& (0+255),w,b
  9496  00260A  A4D8               	btfss	status,2,c
  9497                           
  9498                           ; BSR set to: 0
  9499  00260C  AF89               	btfss	(___xxtofl@val+3)& (0+255),7,b
  9500  00260E  D001               	goto	l1100
  9501                           
  9502                           ; BSR set to: 0
  9503  002610  8F93               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  9504  002612                     l1100:
  9505                           
  9506                           ; BSR set to: 0
  9507                           
  9508                           ; BSR set to: 0
  9509  002612  C090  F086         	movff	___xxtofl@arg,?___xxtofl
  9510  002616  C091  F087         	movff	___xxtofl@arg+1,?___xxtofl+1
  9511  00261A  C092  F088         	movff	___xxtofl@arg+2,?___xxtofl+2
  9512  00261E  C093  F089         	movff	___xxtofl@arg+3,?___xxtofl+3
  9513  002622  0012               	return	
  9514  002624                     __end_of___xxtofl:
  9515                           	opt stack 0
  9516                           tblptru	equ	0xFF8
  9517                           tblptrh	equ	0xFF7
  9518                           tblptrl	equ	0xFF6
  9519                           tablat	equ	0xFF5
  9520                           prodh	equ	0xFF4
  9521                           prodl	equ	0xFF3
  9522                           intcon	equ	0xFF2
  9523                           indf0	equ	0xFEF
  9524                           postinc0	equ	0xFEE
  9525                           fsr0h	equ	0xFEA
  9526                           fsr0l	equ	0xFE9
  9527                           wreg	equ	0xFE8
  9528                           postdec1	equ	0xFE5
  9529                           fsr1l	equ	0xFE1
  9530                           indf2	equ	0xFDF
  9531                           postinc2	equ	0xFDE
  9532                           postdec2	equ	0xFDD
  9533                           fsr2h	equ	0xFDA
  9534                           fsr2l	equ	0xFD9
  9535                           status	equ	0xFD8
  9536                           
  9537 ;; *************** function ___wmul *****************
  9538 ;; Defined at:
  9539 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
  9540 ;; Parameters:    Size  Location     Type
  9541 ;;  multiplier      2    0[BANK0 ] unsigned int 
  9542 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  9543 ;; Auto vars:     Size  Location     Type
  9544 ;;  product         2    4[BANK0 ] unsigned int 
  9545 ;; Return value:  Size  Location     Type
  9546 ;;                  2    0[BANK0 ] unsigned int 
  9547 ;; Registers used:
  9548 ;;		wreg, status,2, status,0, prodl, prodh
  9549 ;; Tracked objects:
  9550 ;;		On entry : 0/0
  9551 ;;		On exit  : 0/0
  9552 ;;		Unchanged: 0/0
  9553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9554 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9555 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9557 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9558 ;;Total ram usage:        6 bytes
  9559 ;; Hardware stack levels used:    1
  9560 ;; Hardware stack levels required when called:    3
  9561 ;; This function calls:
  9562 ;;		Nothing
  9563 ;; This function is called by:
  9564 ;;		_read_adc_voltage
  9565 ;;		_sprintf
  9566 ;; This function uses a non-reentrant model
  9567 ;;
  9568                           
  9569                           	psect	text32
  9570  0036B0                     __ptext32:
  9571                           	opt stack 0
  9572  0036B0                     ___wmul:
  9573                           	opt stack 25
  9574                           
  9575                           ; BSR set to: 0
  9576                           ;incstack = 0
  9577  0036B0  0100               	movlb	0	; () banked
  9578  0036B2  5180               	movf	___wmul@multiplier& (0+255),w,b
  9579  0036B4  0382               	mulwf	___wmul@multiplicand& (0+255),b
  9580  0036B6  CFF3 F084          	movff	prodl,___wmul@product
  9581  0036BA  CFF4 F085          	movff	prodh,___wmul@product+1
  9582  0036BE  5180               	movf	___wmul@multiplier& (0+255),w,b
  9583  0036C0  0383               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  9584  0036C2  50F3               	movf	prodl,w,c
  9585  0036C4  2785               	addwf	(___wmul@product+1)& (0+255),f,b
  9586  0036C6  5181               	movf	(___wmul@multiplier+1)& (0+255),w,b
  9587  0036C8  0382               	mulwf	___wmul@multiplicand& (0+255),b
  9588  0036CA  50F3               	movf	prodl,w,c
  9589  0036CC  2785               	addwf	(___wmul@product+1)& (0+255),f,b
  9590                           
  9591                           ; BSR set to: 0
  9592  0036CE  C084  F080         	movff	___wmul@product,?___wmul
  9593  0036D2  C085  F081         	movff	___wmul@product+1,?___wmul+1
  9594  0036D6  0012               	return	
  9595  0036D8                     __end_of___wmul:
  9596                           	opt stack 0
  9597                           tblptru	equ	0xFF8
  9598                           tblptrh	equ	0xFF7
  9599                           tblptrl	equ	0xFF6
  9600                           tablat	equ	0xFF5
  9601                           prodh	equ	0xFF4
  9602                           prodl	equ	0xFF3
  9603                           intcon	equ	0xFF2
  9604                           indf0	equ	0xFEF
  9605                           postinc0	equ	0xFEE
  9606                           fsr0h	equ	0xFEA
  9607                           fsr0l	equ	0xFE9
  9608                           wreg	equ	0xFE8
  9609                           postdec1	equ	0xFE5
  9610                           fsr1l	equ	0xFE1
  9611                           indf2	equ	0xFDF
  9612                           postinc2	equ	0xFDE
  9613                           postdec2	equ	0xFDD
  9614                           fsr2h	equ	0xFDA
  9615                           fsr2l	equ	0xFD9
  9616                           status	equ	0xFD8
  9617                           
  9618 ;; *************** function ___flmul *****************
  9619 ;; Defined at:
  9620 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/sprcmul.c"
  9621 ;; Parameters:    Size  Location     Type
  9622 ;;  b               4   20[BANK0 ] unsigned int 
  9623 ;;  a               4   24[BANK0 ] unsigned int 
  9624 ;; Auto vars:     Size  Location     Type
  9625 ;;  prod            4   39[BANK0 ] struct .
  9626 ;;  grs             4   33[BANK0 ] unsigned long 
  9627 ;;  temp            2   43[BANK0 ] struct .
  9628 ;;  bexp            1   38[BANK0 ] unsigned char 
  9629 ;;  aexp            1   37[BANK0 ] unsigned char 
  9630 ;;  sign            1   32[BANK0 ] unsigned char 
  9631 ;; Return value:  Size  Location     Type
  9632 ;;                  4   20[BANK0 ] unsigned char 
  9633 ;; Registers used:
  9634 ;;		wreg, status,2, status,0, prodl, prodh
  9635 ;; Tracked objects:
  9636 ;;		On entry : 0/0
  9637 ;;		On exit  : 0/0
  9638 ;;		Unchanged: 0/0
  9639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9640 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9641 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9642 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9643 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9644 ;;Total ram usage:       25 bytes
  9645 ;; Hardware stack levels used:    1
  9646 ;; Hardware stack levels required when called:    3
  9647 ;; This function calls:
  9648 ;;		Nothing
  9649 ;; This function is called by:
  9650 ;;		_main
  9651 ;;		_read_adc_voltage
  9652 ;;		_set_pwm1_percent
  9653 ;;		_fround
  9654 ;;		_scale
  9655 ;;		_sprintf
  9656 ;;		_set_pwm1_voltage
  9657 ;;		_set_pwm1_general
  9658 ;; This function uses a non-reentrant model
  9659 ;;
  9660                           
  9661                           	psect	text33
  9662  00110A                     __ptext33:
  9663                           	opt stack 0
  9664  00110A                     ___flmul:
  9665                           	opt stack 24
  9666                           
  9667                           ; BSR set to: 0
  9668                           ;incstack = 0
  9669  00110A  0100               	movlb	0	; () banked
  9670  00110C  5197               	movf	(___flmul@b+3)& (0+255),w,b
  9671  00110E  0B80               	andlw	128
  9672  001110  6FA0               	movwf	___flmul@sign& (0+255),b
  9673  001112  5197               	movf	(___flmul@b+3)& (0+255),w,b
  9674  001114  2597               	addwf	(___flmul@b+3)& (0+255),w,b
  9675  001116  6FA6               	movwf	___flmul@bexp& (0+255),b
  9676                           
  9677                           ; BSR set to: 0
  9678  001118  BF96               	btfsc	(___flmul@b+2)& (0+255),7,b
  9679                           
  9680                           ; BSR set to: 0
  9681  00111A  81A6               	bsf	___flmul@bexp& (0+255),0,b
  9682                           
  9683                           ; BSR set to: 0
  9684                           
  9685                           ; BSR set to: 0
  9686  00111C  51A6               	movf	___flmul@bexp& (0+255),w,b
  9687  00111E  B4D8               	btfsc	status,2,c
  9688  001120  D00D               	goto	l1056
  9689                           
  9690                           ; BSR set to: 0
  9691  001122  29A6               	incf	___flmul@bexp& (0+255),w,b
  9692  001124  A4D8               	btfss	status,2,c
  9693  001126  D008               	goto	l1057
  9694                           
  9695                           ; BSR set to: 0
  9696  001128  0E00               	movlw	0
  9697  00112A  6F94               	movwf	___flmul@b& (0+255),b
  9698  00112C  0E00               	movlw	0
  9699  00112E  6F95               	movwf	(___flmul@b+1)& (0+255),b
  9700  001130  0E00               	movlw	0
  9701  001132  6F96               	movwf	(___flmul@b+2)& (0+255),b
  9702  001134  0E00               	movlw	0
  9703  001136  6F97               	movwf	(___flmul@b+3)& (0+255),b
  9704  001138                     l1057:
  9705                           
  9706                           ; BSR set to: 0
  9707                           
  9708                           ; BSR set to: 0
  9709  001138  8F96               	bsf	(___flmul@b+2)& (0+255),7,b
  9710  00113A  D008               	goto	l1058
  9711  00113C                     l1056:
  9712                           
  9713                           ; BSR set to: 0
  9714                           
  9715                           ; BSR set to: 0
  9716  00113C  0E00               	movlw	0
  9717  00113E  6F94               	movwf	___flmul@b& (0+255),b
  9718  001140  0E00               	movlw	0
  9719  001142  6F95               	movwf	(___flmul@b+1)& (0+255),b
  9720  001144  0E00               	movlw	0
  9721  001146  6F96               	movwf	(___flmul@b+2)& (0+255),b
  9722  001148  0E00               	movlw	0
  9723  00114A  6F97               	movwf	(___flmul@b+3)& (0+255),b
  9724  00114C                     l1058:
  9725                           
  9726                           ; BSR set to: 0
  9727                           
  9728                           ; BSR set to: 0
  9729  00114C  519B               	movf	(___flmul@a+3)& (0+255),w,b
  9730  00114E  0B80               	andlw	128
  9731  001150  1BA0               	xorwf	___flmul@sign& (0+255),f,b
  9732                           
  9733                           ; BSR set to: 0
  9734  001152  519B               	movf	(___flmul@a+3)& (0+255),w,b
  9735  001154  259B               	addwf	(___flmul@a+3)& (0+255),w,b
  9736  001156  6FA5               	movwf	___flmul@aexp& (0+255),b
  9737                           
  9738                           ; BSR set to: 0
  9739  001158  BF9A               	btfsc	(___flmul@a+2)& (0+255),7,b
  9740                           
  9741                           ; BSR set to: 0
  9742  00115A  81A5               	bsf	___flmul@aexp& (0+255),0,b
  9743                           
  9744                           ; BSR set to: 0
  9745                           
  9746                           ; BSR set to: 0
  9747  00115C  51A5               	movf	___flmul@aexp& (0+255),w,b
  9748  00115E  B4D8               	btfsc	status,2,c
  9749  001160  D00D               	goto	l1060
  9750                           
  9751                           ; BSR set to: 0
  9752  001162  29A5               	incf	___flmul@aexp& (0+255),w,b
  9753  001164  A4D8               	btfss	status,2,c
  9754  001166  D008               	goto	l1061
  9755                           
  9756                           ; BSR set to: 0
  9757  001168  0E00               	movlw	0
  9758  00116A  6F98               	movwf	___flmul@a& (0+255),b
  9759  00116C  0E00               	movlw	0
  9760  00116E  6F99               	movwf	(___flmul@a+1)& (0+255),b
  9761  001170  0E00               	movlw	0
  9762  001172  6F9A               	movwf	(___flmul@a+2)& (0+255),b
  9763  001174  0E00               	movlw	0
  9764  001176  6F9B               	movwf	(___flmul@a+3)& (0+255),b
  9765  001178                     l1061:
  9766                           
  9767                           ; BSR set to: 0
  9768                           
  9769                           ; BSR set to: 0
  9770  001178  8F9A               	bsf	(___flmul@a+2)& (0+255),7,b
  9771  00117A  D008               	goto	l1062
  9772  00117C                     l1060:
  9773                           
  9774                           ; BSR set to: 0
  9775                           
  9776                           ; BSR set to: 0
  9777  00117C  0E00               	movlw	0
  9778  00117E  6F98               	movwf	___flmul@a& (0+255),b
  9779  001180  0E00               	movlw	0
  9780  001182  6F99               	movwf	(___flmul@a+1)& (0+255),b
  9781  001184  0E00               	movlw	0
  9782  001186  6F9A               	movwf	(___flmul@a+2)& (0+255),b
  9783  001188  0E00               	movlw	0
  9784  00118A  6F9B               	movwf	(___flmul@a+3)& (0+255),b
  9785  00118C                     l1062:
  9786                           
  9787                           ; BSR set to: 0
  9788  00118C  51A5               	movf	___flmul@aexp& (0+255),w,b
  9789  00118E  B4D8               	btfsc	status,2,c
  9790  001190  D003               	goto	u3460
  9791                           
  9792                           ; BSR set to: 0
  9793  001192  51A6               	movf	___flmul@bexp& (0+255),w,b
  9794  001194  A4D8               	btfss	status,2,c
  9795  001196  D009               	goto	l1063
  9796  001198                     u3460:
  9797                           
  9798                           ; BSR set to: 0
  9799                           
  9800                           ; BSR set to: 0
  9801  001198  0E00               	movlw	0
  9802  00119A  6F94               	movwf	?___flmul& (0+255),b
  9803  00119C  0E00               	movlw	0
  9804  00119E  6F95               	movwf	(?___flmul+1)& (0+255),b
  9805  0011A0  0E00               	movlw	0
  9806  0011A2  6F96               	movwf	(?___flmul+2)& (0+255),b
  9807  0011A4  0E00               	movlw	0
  9808  0011A6  6F97               	movwf	(?___flmul+3)& (0+255),b
  9809                           
  9810                           ; BSR set to: 0
  9811  0011A8  0012               	return	
  9812  0011AA                     l1063:
  9813                           
  9814                           ; BSR set to: 0
  9815                           
  9816                           ; BSR set to: 0
  9817  0011AA  519A               	movf	(___flmul@a+2)& (0+255),w,b
  9818  0011AC  0394               	mulwf	___flmul@b& (0+255),b
  9819  0011AE  CFF3 F0AB          	movff	prodl,___flmul@temp
  9820  0011B2  CFF4 F0AC          	movff	prodh,___flmul@temp+1
  9821                           
  9822                           ; BSR set to: 0
  9823  0011B6  51AB               	movf	___flmul@temp& (0+255),w,b
  9824  0011B8  6FA1               	movwf	___flmul@grs& (0+255),b
  9825  0011BA  6BA2               	clrf	(___flmul@grs+1)& (0+255),b
  9826  0011BC  6BA3               	clrf	(___flmul@grs+2)& (0+255),b
  9827  0011BE  6BA4               	clrf	(___flmul@grs+3)& (0+255),b
  9828                           
  9829                           ; BSR set to: 0
  9830  0011C0  51AC               	movf	(___flmul@temp+1)& (0+255),w,b
  9831  0011C2  6FA7               	movwf	___flmul@prod& (0+255),b
  9832  0011C4  6BA8               	clrf	(___flmul@prod+1)& (0+255),b
  9833  0011C6  6BA9               	clrf	(___flmul@prod+2)& (0+255),b
  9834  0011C8  6BAA               	clrf	(___flmul@prod+3)& (0+255),b
  9835  0011CA  5199               	movf	(___flmul@a+1)& (0+255),w,b
  9836  0011CC  0395               	mulwf	(___flmul@b+1)& (0+255),b
  9837  0011CE  CFF3 F0AB          	movff	prodl,___flmul@temp
  9838  0011D2  CFF4 F0AC          	movff	prodh,___flmul@temp+1
  9839                           
  9840                           ; BSR set to: 0
  9841  0011D6  51AB               	movf	___flmul@temp& (0+255),w,b
  9842  0011D8  27A1               	addwf	___flmul@grs& (0+255),f,b
  9843  0011DA  0E00               	movlw	0
  9844  0011DC  23A2               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9845  0011DE  23A3               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9846  0011E0  23A4               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9847                           
  9848                           ; BSR set to: 0
  9849  0011E2  51AC               	movf	(___flmul@temp+1)& (0+255),w,b
  9850  0011E4  27A7               	addwf	___flmul@prod& (0+255),f,b
  9851  0011E6  0E00               	movlw	0
  9852  0011E8  23A8               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9853  0011EA  23A9               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9854  0011EC  23AA               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9855  0011EE  5198               	movf	___flmul@a& (0+255),w,b
  9856  0011F0  0396               	mulwf	(___flmul@b+2)& (0+255),b
  9857  0011F2  CFF3 F0AB          	movff	prodl,___flmul@temp
  9858  0011F6  CFF4 F0AC          	movff	prodh,___flmul@temp+1
  9859                           
  9860                           ; BSR set to: 0
  9861  0011FA  51AB               	movf	___flmul@temp& (0+255),w,b
  9862  0011FC  27A1               	addwf	___flmul@grs& (0+255),f,b
  9863  0011FE  0E00               	movlw	0
  9864  001200  23A2               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9865  001202  23A3               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9866  001204  23A4               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9867                           
  9868                           ; BSR set to: 0
  9869  001206  51AC               	movf	(___flmul@temp+1)& (0+255),w,b
  9870  001208  27A7               	addwf	___flmul@prod& (0+255),f,b
  9871  00120A  0E00               	movlw	0
  9872  00120C  23A8               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9873  00120E  23A9               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9874  001210  23AA               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9875                           
  9876                           ; BSR set to: 0
  9877  001212  C0A3  F0A4         	movff	___flmul@grs+2,___flmul@grs+3
  9878  001216  C0A2  F0A3         	movff	___flmul@grs+1,___flmul@grs+2
  9879  00121A  C0A1  F0A2         	movff	___flmul@grs,___flmul@grs+1
  9880  00121E  6BA1               	clrf	___flmul@grs& (0+255),b
  9881                           
  9882                           ; BSR set to: 0
  9883  001220  5198               	movf	___flmul@a& (0+255),w,b
  9884  001222  0395               	mulwf	(___flmul@b+1)& (0+255),b
  9885  001224  CFF3 F0AB          	movff	prodl,___flmul@temp
  9886  001228  CFF4 F0AC          	movff	prodh,___flmul@temp+1
  9887                           
  9888                           ; BSR set to: 0
  9889  00122C  51AB               	movf	___flmul@temp& (0+255),w,b
  9890  00122E  27A1               	addwf	___flmul@grs& (0+255),f,b
  9891  001230  51AC               	movf	(___flmul@temp+1)& (0+255),w,b
  9892  001232  23A2               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9893  001234  0E00               	movlw	0
  9894  001236  23A3               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9895  001238  0E00               	movlw	0
  9896  00123A  23A4               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9897                           
  9898                           ; BSR set to: 0
  9899  00123C  5199               	movf	(___flmul@a+1)& (0+255),w,b
  9900  00123E  0394               	mulwf	___flmul@b& (0+255),b
  9901  001240  CFF3 F0AB          	movff	prodl,___flmul@temp
  9902  001244  CFF4 F0AC          	movff	prodh,___flmul@temp+1
  9903                           
  9904                           ; BSR set to: 0
  9905  001248  51AB               	movf	___flmul@temp& (0+255),w,b
  9906  00124A  27A1               	addwf	___flmul@grs& (0+255),f,b
  9907  00124C  51AC               	movf	(___flmul@temp+1)& (0+255),w,b
  9908  00124E  23A2               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9909  001250  0E00               	movlw	0
  9910  001252  23A3               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9911  001254  0E00               	movlw	0
  9912  001256  23A4               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9913                           
  9914                           ; BSR set to: 0
  9915  001258  C0A3  F0A4         	movff	___flmul@grs+2,___flmul@grs+3
  9916  00125C  C0A2  F0A3         	movff	___flmul@grs+1,___flmul@grs+2
  9917  001260  C0A1  F0A2         	movff	___flmul@grs,___flmul@grs+1
  9918  001264  6BA1               	clrf	___flmul@grs& (0+255),b
  9919  001266  5198               	movf	___flmul@a& (0+255),w,b
  9920  001268  0394               	mulwf	___flmul@b& (0+255),b
  9921  00126A  CFF3 F0AB          	movff	prodl,___flmul@temp
  9922  00126E  CFF4 F0AC          	movff	prodh,___flmul@temp+1
  9923                           
  9924                           ; BSR set to: 0
  9925  001272  51AB               	movf	___flmul@temp& (0+255),w,b
  9926  001274  27A1               	addwf	___flmul@grs& (0+255),f,b
  9927  001276  51AC               	movf	(___flmul@temp+1)& (0+255),w,b
  9928  001278  23A2               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9929  00127A  0E00               	movlw	0
  9930  00127C  23A3               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9931  00127E  0E00               	movlw	0
  9932  001280  23A4               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9933                           
  9934                           ; BSR set to: 0
  9935  001282  519A               	movf	(___flmul@a+2)& (0+255),w,b
  9936  001284  0395               	mulwf	(___flmul@b+1)& (0+255),b
  9937  001286  CFF3 F0AB          	movff	prodl,___flmul@temp
  9938  00128A  CFF4 F0AC          	movff	prodh,___flmul@temp+1
  9939  00128E  51AB               	movf	___flmul@temp& (0+255),w,b
  9940  001290  27A7               	addwf	___flmul@prod& (0+255),f,b
  9941  001292  51AC               	movf	(___flmul@temp+1)& (0+255),w,b
  9942  001294  23A8               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9943  001296  0E00               	movlw	0
  9944  001298  23A9               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9945  00129A  0E00               	movlw	0
  9946  00129C  23AA               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9947                           
  9948                           ; BSR set to: 0
  9949  00129E  5199               	movf	(___flmul@a+1)& (0+255),w,b
  9950  0012A0  0396               	mulwf	(___flmul@b+2)& (0+255),b
  9951  0012A2  CFF3 F0AB          	movff	prodl,___flmul@temp
  9952  0012A6  CFF4 F0AC          	movff	prodh,___flmul@temp+1
  9953                           
  9954                           ; BSR set to: 0
  9955  0012AA  51AB               	movf	___flmul@temp& (0+255),w,b
  9956  0012AC  27A7               	addwf	___flmul@prod& (0+255),f,b
  9957  0012AE  51AC               	movf	(___flmul@temp+1)& (0+255),w,b
  9958  0012B0  23A8               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9959  0012B2  0E00               	movlw	0
  9960  0012B4  23A9               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9961  0012B6  0E00               	movlw	0
  9962  0012B8  23AA               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9963  0012BA  519A               	movf	(___flmul@a+2)& (0+255),w,b
  9964  0012BC  0396               	mulwf	(___flmul@b+2)& (0+255),b
  9965  0012BE  CFF3 F0AB          	movff	prodl,___flmul@temp
  9966  0012C2  CFF4 F0AC          	movff	prodh,___flmul@temp+1
  9967                           
  9968                           ; BSR set to: 0
  9969  0012C6  51AB               	movf	___flmul@temp& (0+255),w,b
  9970  0012C8  6F9C               	movwf	??___flmul& (0+255),b
  9971  0012CA  51AC               	movf	(___flmul@temp+1)& (0+255),w,b
  9972  0012CC  6F9D               	movwf	(??___flmul+1)& (0+255),b
  9973  0012CE  6B9E               	clrf	(??___flmul+2)& (0+255),b
  9974  0012D0  6B9F               	clrf	(??___flmul+3)& (0+255),b
  9975  0012D2  C09E  F09F         	movff	??___flmul+2,??___flmul+3
  9976  0012D6  C09D  F09E         	movff	??___flmul+1,??___flmul+2
  9977  0012DA  C09C  F09D         	movff	??___flmul,??___flmul+1
  9978  0012DE  6B9C               	clrf	??___flmul& (0+255),b
  9979  0012E0  519C               	movf	??___flmul& (0+255),w,b
  9980  0012E2  27A7               	addwf	___flmul@prod& (0+255),f,b
  9981  0012E4  519D               	movf	(??___flmul+1)& (0+255),w,b
  9982  0012E6  23A8               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9983  0012E8  519E               	movf	(??___flmul+2)& (0+255),w,b
  9984  0012EA  23A9               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9985  0012EC  519F               	movf	(??___flmul+3)& (0+255),w,b
  9986  0012EE  23AA               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9987                           
  9988                           ; BSR set to: 0
  9989  0012F0  C0A1  F09C         	movff	___flmul@grs,??___flmul
  9990  0012F4  C0A2  F09D         	movff	___flmul@grs+1,??___flmul+1
  9991  0012F8  C0A3  F09E         	movff	___flmul@grs+2,??___flmul+2
  9992  0012FC  C0A4  F09F         	movff	___flmul@grs+3,??___flmul+3
  9993  001300  0E19               	movlw	25
  9994  001302  D005               	goto	u3470
  9995  001304                     u3475:
  9996  001304  90D8               	bcf	status,0,c
  9997  001306  339F               	rrcf	(??___flmul+3)& (0+255),f,b
  9998  001308  339E               	rrcf	(??___flmul+2)& (0+255),f,b
  9999  00130A  339D               	rrcf	(??___flmul+1)& (0+255),f,b
 10000  00130C  339C               	rrcf	??___flmul& (0+255),f,b
 10001  00130E                     u3470:
 10002  00130E  2EE8               	decfsz	wreg,f,c
 10003  001310  D7F9               	goto	u3475
 10004  001312  519C               	movf	??___flmul& (0+255),w,b
 10005  001314  27A7               	addwf	___flmul@prod& (0+255),f,b
 10006  001316  519D               	movf	(??___flmul+1)& (0+255),w,b
 10007  001318  23A8               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10008  00131A  519E               	movf	(??___flmul+2)& (0+255),w,b
 10009  00131C  23A9               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10010  00131E  519F               	movf	(??___flmul+3)& (0+255),w,b
 10011  001320  23AA               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10012                           
 10013                           ; BSR set to: 0
 10014  001322  C0A3  F0A4         	movff	___flmul@grs+2,___flmul@grs+3
 10015  001326  C0A2  F0A3         	movff	___flmul@grs+1,___flmul@grs+2
 10016  00132A  C0A1  F0A2         	movff	___flmul@grs,___flmul@grs+1
 10017  00132E  6BA1               	clrf	___flmul@grs& (0+255),b
 10018                           
 10019                           ; BSR set to: 0
 10020  001330  51A5               	movf	___flmul@aexp& (0+255),w,b
 10021  001332  C0A6  F09C         	movff	___flmul@bexp,??___flmul
 10022  001336  6B9D               	clrf	(??___flmul+1)& (0+255),b
 10023  001338  279C               	addwf	??___flmul& (0+255),f,b
 10024  00133A  0E00               	movlw	0
 10025  00133C  239D               	addwfc	(??___flmul+1)& (0+255),f,b
 10026  00133E  0E82               	movlw	130
 10027  001340  259C               	addwf	??___flmul& (0+255),w,b
 10028  001342  6FAB               	movwf	___flmul@temp& (0+255),b
 10029  001344  0EFF               	movlw	255
 10030  001346  219D               	addwfc	(??___flmul+1)& (0+255),w,b
 10031  001348  6FAC               	movwf	(___flmul@temp+1)& (0+255),b
 10032  00134A  D00F               	goto	l1067
 10033  00134C                     
 10034                           ; BSR set to: 0
 10035                           
 10036                           ; BSR set to: 0
 10037  00134C  90D8               	bcf	status,0,c
 10038  00134E  37A7               	rlcf	___flmul@prod& (0+255),f,b
 10039  001350  37A8               	rlcf	(___flmul@prod+1)& (0+255),f,b
 10040  001352  37A9               	rlcf	(___flmul@prod+2)& (0+255),f,b
 10041  001354  37AA               	rlcf	(___flmul@prod+3)& (0+255),f,b
 10042                           
 10043                           ; BSR set to: 0
 10044  001356  BFA4               	btfsc	(___flmul@grs+3)& (0+255),7,b
 10045                           
 10046                           ; BSR set to: 0
 10047  001358  81A7               	bsf	___flmul@prod& (0+255),0,b
 10048                           
 10049                           ; BSR set to: 0
 10050  00135A  90D8               	bcf	status,0,c
 10051  00135C  37A1               	rlcf	___flmul@grs& (0+255),f,b
 10052  00135E  37A2               	rlcf	(___flmul@grs+1)& (0+255),f,b
 10053  001360  37A3               	rlcf	(___flmul@grs+2)& (0+255),f,b
 10054  001362  37A4               	rlcf	(___flmul@grs+3)& (0+255),f,b
 10055  001364  07AB               	decf	___flmul@temp& (0+255),f,b
 10056  001366  A0D8               	btfss	status,0,c
 10057  001368  07AC               	decf	(___flmul@temp+1)& (0+255),f,b
 10058  00136A                     l1067:
 10059                           
 10060                           ; BSR set to: 0
 10061                           
 10062                           ; BSR set to: 0
 10063  00136A  AFA9               	btfss	(___flmul@prod+2)& (0+255),7,b
 10064  00136C  D7EF               	goto	l1068
 10065                           
 10066                           ; BSR set to: 0
 10067                           
 10068                           ; BSR set to: 0
 10069  00136E  0E00               	movlw	0
 10070  001370  6FA5               	movwf	___flmul@aexp& (0+255),b
 10071                           
 10072                           ; BSR set to: 0
 10073  001372  AFA4               	btfss	(___flmul@grs+3)& (0+255),7,b
 10074  001374  D016               	goto	l1074
 10075                           
 10076                           ; BSR set to: 0
 10077  001376  0EFF               	movlw	255
 10078  001378  15A1               	andwf	___flmul@grs& (0+255),w,b
 10079  00137A  6F9C               	movwf	??___flmul& (0+255),b
 10080  00137C  0EFF               	movlw	255
 10081  00137E  15A2               	andwf	(___flmul@grs+1)& (0+255),w,b
 10082  001380  6F9D               	movwf	(??___flmul+1)& (0+255),b
 10083  001382  0EFF               	movlw	255
 10084  001384  15A3               	andwf	(___flmul@grs+2)& (0+255),w,b
 10085  001386  6F9E               	movwf	(??___flmul+2)& (0+255),b
 10086  001388  0E7F               	movlw	127
 10087  00138A  15A4               	andwf	(___flmul@grs+3)& (0+255),w,b
 10088  00138C  6F9F               	movwf	(??___flmul+3)& (0+255),b
 10089  00138E  519C               	movf	??___flmul& (0+255),w,b
 10090  001390  119D               	iorwf	(??___flmul+1)& (0+255),w,b
 10091  001392  119E               	iorwf	(??___flmul+2)& (0+255),w,b
 10092  001394  119F               	iorwf	(??___flmul+3)& (0+255),w,b
 10093  001396  A4D8               	btfss	status,2,c
 10094  001398  D002               	goto	u3520
 10095                           
 10096                           ; BSR set to: 0
 10097                           
 10098                           ; BSR set to: 0
 10099  00139A  A1A7               	btfss	___flmul@prod& (0+255),0,b
 10100  00139C  D002               	goto	l1074
 10101  00139E                     u3520:
 10102                           
 10103                           ; BSR set to: 0
 10104  00139E  0E01               	movlw	1
 10105  0013A0  6FA5               	movwf	___flmul@aexp& (0+255),b
 10106  0013A2                     l1074:
 10107                           
 10108                           ; BSR set to: 0
 10109                           
 10110                           ; BSR set to: 0
 10111                           
 10112                           ; BSR set to: 0
 10113  0013A2  51A5               	movf	___flmul@aexp& (0+255),w,b
 10114  0013A4  B4D8               	btfsc	status,2,c
 10115  0013A6  D01F               	goto	l1076
 10116                           
 10117                           ; BSR set to: 0
 10118  0013A8  0E01               	movlw	1
 10119  0013AA  27A7               	addwf	___flmul@prod& (0+255),f,b
 10120  0013AC  0E00               	movlw	0
 10121  0013AE  23A8               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10122  0013B0  23A9               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10123  0013B2  23AA               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10124                           
 10125                           ; BSR set to: 0
 10126  0013B4  A1AA               	btfss	(___flmul@prod+3)& (0+255),0,b
 10127  0013B6  D017               	goto	l1076
 10128                           
 10129                           ; BSR set to: 0
 10130  0013B8  C0A7  F09C         	movff	___flmul@prod,??___flmul
 10131  0013BC  C0A8  F09D         	movff	___flmul@prod+1,??___flmul+1
 10132  0013C0  C0A9  F09E         	movff	___flmul@prod+2,??___flmul+2
 10133  0013C4  C0AA  F09F         	movff	___flmul@prod+3,??___flmul+3
 10134  0013C8  359F               	rlcf	(??___flmul+3)& (0+255),w,b
 10135  0013CA  339F               	rrcf	(??___flmul+3)& (0+255),f,b
 10136  0013CC  339E               	rrcf	(??___flmul+2)& (0+255),f,b
 10137  0013CE  339D               	rrcf	(??___flmul+1)& (0+255),f,b
 10138  0013D0  339C               	rrcf	??___flmul& (0+255),f,b
 10139  0013D2  C09C  F0A7         	movff	??___flmul,___flmul@prod
 10140  0013D6  C09D  F0A8         	movff	??___flmul+1,___flmul@prod+1
 10141  0013DA  C09E  F0A9         	movff	??___flmul+2,___flmul@prod+2
 10142  0013DE  C09F  F0AA         	movff	??___flmul+3,___flmul@prod+3
 10143                           
 10144                           ; BSR set to: 0
 10145  0013E2  4BAB               	infsnz	___flmul@temp& (0+255),f,b
 10146  0013E4  2BAC               	incf	(___flmul@temp+1)& (0+255),f,b
 10147  0013E6                     l1076:
 10148                           
 10149                           ; BSR set to: 0
 10150                           
 10151                           ; BSR set to: 0
 10152                           
 10153                           ; BSR set to: 0
 10154  0013E6  BFAC               	btfsc	(___flmul@temp+1)& (0+255),7,b
 10155  0013E8  D00D               	goto	l1077
 10156  0013EA  51AC               	movf	(___flmul@temp+1)& (0+255),w,b
 10157  0013EC  E103               	bnz	u3550
 10158  0013EE  29AB               	incf	___flmul@temp& (0+255),w,b
 10159  0013F0  A0D8               	btfss	status,0,c
 10160  0013F2  D008               	goto	l1077
 10161  0013F4                     u3550:
 10162                           
 10163                           ; BSR set to: 0
 10164  0013F4  0E00               	movlw	0
 10165  0013F6  6FA7               	movwf	___flmul@prod& (0+255),b
 10166  0013F8  0E00               	movlw	0
 10167  0013FA  6FA8               	movwf	(___flmul@prod+1)& (0+255),b
 10168  0013FC  0E80               	movlw	128
 10169  0013FE  6FA9               	movwf	(___flmul@prod+2)& (0+255),b
 10170  001400  0E7F               	movlw	127
 10171  001402  D020               	goto	L12
 10172  001404                     l1077:
 10173                           
 10174                           ; BSR set to: 0
 10175                           
 10176                           ; BSR set to: 0
 10177  001404  BFAC               	btfsc	(___flmul@temp+1)& (0+255),7,b
 10178  001406  D005               	goto	u3560
 10179  001408  51AC               	movf	(___flmul@temp+1)& (0+255),w,b
 10180  00140A  E10E               	bnz	l1079
 10181  00140C  05AB               	decf	___flmul@temp& (0+255),w,b
 10182  00140E  B0D8               	btfsc	status,0,c
 10183  001410  D00B               	goto	l1079
 10184  001412                     u3560:
 10185                           
 10186                           ; BSR set to: 0
 10187  001412  0E00               	movlw	0
 10188  001414  6FA7               	movwf	___flmul@prod& (0+255),b
 10189  001416  0E00               	movlw	0
 10190  001418  6FA8               	movwf	(___flmul@prod+1)& (0+255),b
 10191  00141A  0E00               	movlw	0
 10192  00141C  6FA9               	movwf	(___flmul@prod+2)& (0+255),b
 10193  00141E  0E00               	movlw	0
 10194  001420  6FAA               	movwf	(___flmul@prod+3)& (0+255),b
 10195  001422  0E00               	movlw	0
 10196  001424  6FA0               	movwf	___flmul@sign& (0+255),b
 10197  001426  D00F               	goto	l1080
 10198  001428                     l1079:
 10199                           
 10200                           ; BSR set to: 0
 10201  001428  C0AB  F0A6         	movff	___flmul@temp,___flmul@bexp
 10202                           
 10203                           ; BSR set to: 0
 10204  00142C  0EFF               	movlw	255
 10205  00142E  17A7               	andwf	___flmul@prod& (0+255),f,b
 10206  001430  0EFF               	movlw	255
 10207  001432  17A8               	andwf	(___flmul@prod+1)& (0+255),f,b
 10208  001434  0E7F               	movlw	127
 10209  001436  17A9               	andwf	(___flmul@prod+2)& (0+255),f,b
 10210  001438  0E00               	movlw	0
 10211  00143A  17AA               	andwf	(___flmul@prod+3)& (0+255),f,b
 10212                           
 10213                           ; BSR set to: 0
 10214  00143C  B1A6               	btfsc	___flmul@bexp& (0+255),0,b
 10215                           
 10216                           ; BSR set to: 0
 10217  00143E  8FA9               	bsf	(___flmul@prod+2)& (0+255),7,b
 10218                           
 10219                           ; BSR set to: 0
 10220                           
 10221                           ; BSR set to: 0
 10222  001440  90D8               	bcf	status,0,c
 10223  001442  31A6               	rrcf	___flmul@bexp& (0+255),w,b
 10224  001444                     L12:
 10225  001444  6FAA               	movwf	(___flmul@prod+3)& (0+255),b
 10226  001446                     l1080:
 10227                           
 10228                           ; BSR set to: 0
 10229                           
 10230                           ; BSR set to: 0
 10231                           
 10232                           ; BSR set to: 0
 10233  001446  51A0               	movf	___flmul@sign& (0+255),w,b
 10234  001448  13AA               	iorwf	(___flmul@prod+3)& (0+255),f,b
 10235                           
 10236                           ; BSR set to: 0
 10237  00144A  C0A7  F094         	movff	___flmul@prod,?___flmul
 10238  00144E  C0A8  F095         	movff	___flmul@prod+1,?___flmul+1
 10239  001452  C0A9  F096         	movff	___flmul@prod+2,?___flmul+2
 10240  001456  C0AA  F097         	movff	___flmul@prod+3,?___flmul+3
 10241  00145A  0012               	return	
 10242  00145C                     __end_of___flmul:
 10243                           	opt stack 0
 10244                           tblptru	equ	0xFF8
 10245                           tblptrh	equ	0xFF7
 10246                           tblptrl	equ	0xFF6
 10247                           tablat	equ	0xFF5
 10248                           prodh	equ	0xFF4
 10249                           prodl	equ	0xFF3
 10250                           intcon	equ	0xFF2
 10251                           indf0	equ	0xFEF
 10252                           postinc0	equ	0xFEE
 10253                           fsr0h	equ	0xFEA
 10254                           fsr0l	equ	0xFE9
 10255                           wreg	equ	0xFE8
 10256                           postdec1	equ	0xFE5
 10257                           fsr1l	equ	0xFE1
 10258                           indf2	equ	0xFDF
 10259                           postinc2	equ	0xFDE
 10260                           postdec2	equ	0xFDD
 10261                           fsr2h	equ	0xFDA
 10262                           fsr2l	equ	0xFD9
 10263                           status	equ	0xFD8
 10264                           
 10265 ;; *************** function ___fldiv *****************
 10266 ;; Defined at:
 10267 ;;		line 11 in file "/opt/microchip/xc8/v1.45/sources/common/sprcdiv.c"
 10268 ;; Parameters:    Size  Location     Type
 10269 ;;  b               4   45[BANK0 ] unsigned char 
 10270 ;;  a               4   49[BANK0 ] unsigned char 
 10271 ;; Auto vars:     Size  Location     Type
 10272 ;;  grs             4   64[BANK0 ] unsigned long 
 10273 ;;  rem             4   58[BANK0 ] unsigned long 
 10274 ;;  new_exp         2   62[BANK0 ] int 
 10275 ;;  aexp            1   69[BANK0 ] unsigned char 
 10276 ;;  bexp            1   68[BANK0 ] unsigned char 
 10277 ;;  sign            1   57[BANK0 ] unsigned char 
 10278 ;; Return value:  Size  Location     Type
 10279 ;;                  4   45[BANK0 ] unsigned char 
 10280 ;; Registers used:
 10281 ;;		wreg, status,2, status,0
 10282 ;; Tracked objects:
 10283 ;;		On entry : 0/0
 10284 ;;		On exit  : 0/0
 10285 ;;		Unchanged: 0/0
 10286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10287 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10288 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10289 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10290 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10291 ;;Total ram usage:       25 bytes
 10292 ;; Hardware stack levels used:    1
 10293 ;; Hardware stack levels required when called:    3
 10294 ;; This function calls:
 10295 ;;		Nothing
 10296 ;; This function is called by:
 10297 ;;		_main
 10298 ;;		_read_adc_voltage
 10299 ;;		_set_pwm1_percent
 10300 ;;		_set_pwm1_voltage
 10301 ;;		_set_pwm1_general
 10302 ;; This function uses a non-reentrant model
 10303 ;;
 10304                           
 10305                           	psect	text34
 10306  0020BA                     __ptext34:
 10307                           	opt stack 0
 10308  0020BA                     ___fldiv:
 10309                           	opt stack 26
 10310                           
 10311                           ; BSR set to: 0
 10312                           ;incstack = 0
 10313  0020BA  0100               	movlb	0	; () banked
 10314  0020BC  51B0               	movf	(___fldiv@b+3)& (0+255),w,b
 10315  0020BE  0B80               	andlw	128
 10316  0020C0  6FB9               	movwf	___fldiv@sign& (0+255),b
 10317  0020C2  51B0               	movf	(___fldiv@b+3)& (0+255),w,b
 10318  0020C4  25B0               	addwf	(___fldiv@b+3)& (0+255),w,b
 10319  0020C6  6FC4               	movwf	___fldiv@bexp& (0+255),b
 10320                           
 10321                           ; BSR set to: 0
 10322  0020C8  BFAF               	btfsc	(___fldiv@b+2)& (0+255),7,b
 10323                           
 10324                           ; BSR set to: 0
 10325  0020CA  81C4               	bsf	___fldiv@bexp& (0+255),0,b
 10326                           
 10327                           ; BSR set to: 0
 10328                           
 10329                           ; BSR set to: 0
 10330  0020CC  51C4               	movf	___fldiv@bexp& (0+255),w,b
 10331  0020CE  B4D8               	btfsc	status,2,c
 10332  0020D0  D00D               	goto	l1022
 10333                           
 10334                           ; BSR set to: 0
 10335  0020D2  29C4               	incf	___fldiv@bexp& (0+255),w,b
 10336  0020D4  A4D8               	btfss	status,2,c
 10337  0020D6  D008               	goto	l1023
 10338                           
 10339                           ; BSR set to: 0
 10340  0020D8  0E00               	movlw	0
 10341  0020DA  6FAD               	movwf	___fldiv@b& (0+255),b
 10342  0020DC  0E00               	movlw	0
 10343  0020DE  6FAE               	movwf	(___fldiv@b+1)& (0+255),b
 10344  0020E0  0E00               	movlw	0
 10345  0020E2  6FAF               	movwf	(___fldiv@b+2)& (0+255),b
 10346  0020E4  0E00               	movlw	0
 10347  0020E6  6FB0               	movwf	(___fldiv@b+3)& (0+255),b
 10348  0020E8                     l1023:
 10349                           
 10350                           ; BSR set to: 0
 10351                           
 10352                           ; BSR set to: 0
 10353  0020E8  8FAF               	bsf	(___fldiv@b+2)& (0+255),7,b
 10354  0020EA  D006               	goto	L13
 10355  0020EC                     l1022:
 10356                           
 10357                           ; BSR set to: 0
 10358                           
 10359                           ; BSR set to: 0
 10360  0020EC  0E00               	movlw	0
 10361  0020EE  6FAD               	movwf	___fldiv@b& (0+255),b
 10362  0020F0  0E00               	movlw	0
 10363  0020F2  6FAE               	movwf	(___fldiv@b+1)& (0+255),b
 10364  0020F4  0E00               	movlw	0
 10365  0020F6  6FAF               	movwf	(___fldiv@b+2)& (0+255),b
 10366  0020F8                     L13:
 10367  0020F8  0E00               	movlw	0
 10368  0020FA  6FB0               	movwf	(___fldiv@b+3)& (0+255),b
 10369                           
 10370                           ; BSR set to: 0
 10371                           
 10372                           ; BSR set to: 0
 10373  0020FC  51B4               	movf	(___fldiv@a+3)& (0+255),w,b
 10374  0020FE  0B80               	andlw	128
 10375  002100  1BB9               	xorwf	___fldiv@sign& (0+255),f,b
 10376                           
 10377                           ; BSR set to: 0
 10378  002102  51B4               	movf	(___fldiv@a+3)& (0+255),w,b
 10379  002104  25B4               	addwf	(___fldiv@a+3)& (0+255),w,b
 10380  002106  6FC5               	movwf	___fldiv@aexp& (0+255),b
 10381                           
 10382                           ; BSR set to: 0
 10383  002108  BFB3               	btfsc	(___fldiv@a+2)& (0+255),7,b
 10384                           
 10385                           ; BSR set to: 0
 10386  00210A  81C5               	bsf	___fldiv@aexp& (0+255),0,b
 10387                           
 10388                           ; BSR set to: 0
 10389                           
 10390                           ; BSR set to: 0
 10391  00210C  51C5               	movf	___fldiv@aexp& (0+255),w,b
 10392  00210E  B4D8               	btfsc	status,2,c
 10393  002110  D00D               	goto	l1026
 10394                           
 10395                           ; BSR set to: 0
 10396  002112  29C5               	incf	___fldiv@aexp& (0+255),w,b
 10397  002114  A4D8               	btfss	status,2,c
 10398  002116  D008               	goto	l1027
 10399                           
 10400                           ; BSR set to: 0
 10401  002118  0E00               	movlw	0
 10402  00211A  6FB1               	movwf	___fldiv@a& (0+255),b
 10403  00211C  0E00               	movlw	0
 10404  00211E  6FB2               	movwf	(___fldiv@a+1)& (0+255),b
 10405  002120  0E00               	movlw	0
 10406  002122  6FB3               	movwf	(___fldiv@a+2)& (0+255),b
 10407  002124  0E00               	movlw	0
 10408  002126  6FB4               	movwf	(___fldiv@a+3)& (0+255),b
 10409  002128                     l1027:
 10410                           
 10411                           ; BSR set to: 0
 10412                           
 10413                           ; BSR set to: 0
 10414  002128  8FB3               	bsf	(___fldiv@a+2)& (0+255),7,b
 10415  00212A  D006               	goto	L14
 10416  00212C                     l1026:
 10417                           
 10418                           ; BSR set to: 0
 10419                           
 10420                           ; BSR set to: 0
 10421  00212C  0E00               	movlw	0
 10422  00212E  6FB1               	movwf	___fldiv@a& (0+255),b
 10423  002130  0E00               	movlw	0
 10424  002132  6FB2               	movwf	(___fldiv@a+1)& (0+255),b
 10425  002134  0E00               	movlw	0
 10426  002136  6FB3               	movwf	(___fldiv@a+2)& (0+255),b
 10427  002138                     L14:
 10428  002138  0E00               	movlw	0
 10429  00213A  6FB4               	movwf	(___fldiv@a+3)& (0+255),b
 10430                           
 10431                           ; BSR set to: 0
 10432                           
 10433                           ; BSR set to: 0
 10434  00213C  51B1               	movf	___fldiv@a& (0+255),w,b
 10435  00213E  11B2               	iorwf	(___fldiv@a+1)& (0+255),w,b
 10436  002140  11B3               	iorwf	(___fldiv@a+2)& (0+255),w,b
 10437  002142  11B4               	iorwf	(___fldiv@a+3)& (0+255),w,b
 10438  002144  A4D8               	btfss	status,2,c
 10439  002146  D015               	goto	l1029
 10440                           
 10441                           ; BSR set to: 0
 10442  002148  0E00               	movlw	0
 10443  00214A  6FAD               	movwf	___fldiv@b& (0+255),b
 10444  00214C  0E00               	movlw	0
 10445  00214E  6FAE               	movwf	(___fldiv@b+1)& (0+255),b
 10446  002150  0E00               	movlw	0
 10447  002152  6FAF               	movwf	(___fldiv@b+2)& (0+255),b
 10448  002154  0E00               	movlw	0
 10449  002156  6FB0               	movwf	(___fldiv@b+3)& (0+255),b
 10450                           
 10451                           ; BSR set to: 0
 10452  002158  0E80               	movlw	128
 10453  00215A  13AF               	iorwf	(___fldiv@b+2)& (0+255),f,b
 10454  00215C  0E7F               	movlw	127
 10455  00215E  13B0               	iorwf	(___fldiv@b+3)& (0+255),f,b
 10456                           
 10457                           ; BSR set to: 0
 10458  002160  C0AD  F0AD         	movff	___fldiv@b,?___fldiv
 10459  002164  C0AE  F0AE         	movff	___fldiv@b+1,?___fldiv+1
 10460  002168  C0AF  F0AF         	movff	___fldiv@b+2,?___fldiv+2
 10461  00216C  C0B0  F0B0         	movff	___fldiv@b+3,?___fldiv+3
 10462                           
 10463                           ; BSR set to: 0
 10464  002170  0012               	return	
 10465  002172                     l1029:
 10466                           
 10467                           ; BSR set to: 0
 10468                           
 10469                           ; BSR set to: 0
 10470  002172  51C4               	movf	___fldiv@bexp& (0+255),w,b
 10471  002174  A4D8               	btfss	status,2,c
 10472  002176  D011               	goto	l1031
 10473                           
 10474                           ; BSR set to: 0
 10475  002178  0E00               	movlw	0
 10476  00217A  6FAD               	movwf	___fldiv@b& (0+255),b
 10477  00217C  0E00               	movlw	0
 10478  00217E  6FAE               	movwf	(___fldiv@b+1)& (0+255),b
 10479  002180  0E00               	movlw	0
 10480  002182  6FAF               	movwf	(___fldiv@b+2)& (0+255),b
 10481  002184  0E00               	movlw	0
 10482  002186  6FB0               	movwf	(___fldiv@b+3)& (0+255),b
 10483                           
 10484                           ; BSR set to: 0
 10485  002188  C0AD  F0AD         	movff	___fldiv@b,?___fldiv
 10486  00218C  C0AE  F0AE         	movff	___fldiv@b+1,?___fldiv+1
 10487  002190  C0AF  F0AF         	movff	___fldiv@b+2,?___fldiv+2
 10488  002194  C0B0  F0B0         	movff	___fldiv@b+3,?___fldiv+3
 10489                           
 10490                           ; BSR set to: 0
 10491  002198  0012               	return	
 10492  00219A                     l1031:
 10493                           
 10494                           ; BSR set to: 0
 10495                           
 10496                           ; BSR set to: 0
 10497  00219A  51C5               	movf	___fldiv@aexp& (0+255),w,b
 10498  00219C  6FB5               	movwf	??___fldiv& (0+255),b
 10499  00219E  6BB6               	clrf	(??___fldiv+1)& (0+255),b
 10500  0021A0  1FB5               	comf	??___fldiv& (0+255),f,b
 10501  0021A2  1FB6               	comf	(??___fldiv+1)& (0+255),f,b
 10502  0021A4  4BB5               	infsnz	??___fldiv& (0+255),f,b
 10503  0021A6  2BB6               	incf	(??___fldiv+1)& (0+255),f,b
 10504  0021A8  51C4               	movf	___fldiv@bexp& (0+255),w,b
 10505  0021AA  6FB7               	movwf	(??___fldiv+2)& (0+255),b
 10506  0021AC  6BB8               	clrf	(??___fldiv+3)& (0+255),b
 10507  0021AE  51B5               	movf	??___fldiv& (0+255),w,b
 10508  0021B0  27B7               	addwf	(??___fldiv+2)& (0+255),f,b
 10509  0021B2  51B6               	movf	(??___fldiv+1)& (0+255),w,b
 10510  0021B4  23B8               	addwfc	(??___fldiv+3)& (0+255),f,b
 10511  0021B6  0E7F               	movlw	127
 10512  0021B8  25B7               	addwf	(??___fldiv+2)& (0+255),w,b
 10513  0021BA  6FBE               	movwf	___fldiv@new_exp& (0+255),b
 10514  0021BC  0E00               	movlw	0
 10515  0021BE  21B8               	addwfc	(??___fldiv+3)& (0+255),w,b
 10516  0021C0  6FBF               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10517                           
 10518                           ; BSR set to: 0
 10519  0021C2  C0AD  F0BA         	movff	___fldiv@b,___fldiv@rem
 10520  0021C6  C0AE  F0BB         	movff	___fldiv@b+1,___fldiv@rem+1
 10521  0021CA  C0AF  F0BC         	movff	___fldiv@b+2,___fldiv@rem+2
 10522  0021CE  C0B0  F0BD         	movff	___fldiv@b+3,___fldiv@rem+3
 10523                           
 10524                           ; BSR set to: 0
 10525  0021D2  0E00               	movlw	0
 10526  0021D4  6FAD               	movwf	___fldiv@b& (0+255),b
 10527  0021D6  0E00               	movlw	0
 10528  0021D8  6FAE               	movwf	(___fldiv@b+1)& (0+255),b
 10529  0021DA  0E00               	movlw	0
 10530  0021DC  6FAF               	movwf	(___fldiv@b+2)& (0+255),b
 10531  0021DE  0E00               	movlw	0
 10532  0021E0  6FB0               	movwf	(___fldiv@b+3)& (0+255),b
 10533                           
 10534                           ; BSR set to: 0
 10535  0021E2  0E00               	movlw	0
 10536  0021E4  6FC0               	movwf	___fldiv@grs& (0+255),b
 10537  0021E6  0E00               	movlw	0
 10538  0021E8  6FC1               	movwf	(___fldiv@grs+1)& (0+255),b
 10539  0021EA  0E00               	movlw	0
 10540  0021EC  6FC2               	movwf	(___fldiv@grs+2)& (0+255),b
 10541  0021EE  0E00               	movlw	0
 10542  0021F0  6FC3               	movwf	(___fldiv@grs+3)& (0+255),b
 10543                           
 10544                           ; BSR set to: 0
 10545  0021F2  0E00               	movlw	0
 10546  0021F4  6FC5               	movwf	___fldiv@aexp& (0+255),b
 10547  0021F6  D028               	goto	l1032
 10548  0021F8                     
 10549                           ; BSR set to: 0
 10550                           
 10551                           ; BSR set to: 0
 10552  0021F8  51C5               	movf	___fldiv@aexp& (0+255),w,b
 10553  0021FA  B4D8               	btfsc	status,2,c
 10554  0021FC  D011               	goto	l1034
 10555                           
 10556                           ; BSR set to: 0
 10557  0021FE  90D8               	bcf	status,0,c
 10558  002200  37BA               	rlcf	___fldiv@rem& (0+255),f,b
 10559  002202  37BB               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 10560  002204  37BC               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 10561  002206  37BD               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 10562  002208  90D8               	bcf	status,0,c
 10563  00220A  37AD               	rlcf	___fldiv@b& (0+255),f,b
 10564  00220C  37AE               	rlcf	(___fldiv@b+1)& (0+255),f,b
 10565  00220E  37AF               	rlcf	(___fldiv@b+2)& (0+255),f,b
 10566  002210  37B0               	rlcf	(___fldiv@b+3)& (0+255),f,b
 10567                           
 10568                           ; BSR set to: 0
 10569  002212  BFC3               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 10570                           
 10571                           ; BSR set to: 0
 10572  002214  81AD               	bsf	___fldiv@b& (0+255),0,b
 10573                           
 10574                           ; BSR set to: 0
 10575  002216  90D8               	bcf	status,0,c
 10576  002218  37C0               	rlcf	___fldiv@grs& (0+255),f,b
 10577  00221A  37C1               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 10578  00221C  37C2               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 10579  00221E  37C3               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 10580  002220                     l1034:
 10581                           
 10582                           ; BSR set to: 0
 10583                           
 10584                           ; BSR set to: 0
 10585  002220  51B1               	movf	___fldiv@a& (0+255),w,b
 10586  002222  5DBA               	subwf	___fldiv@rem& (0+255),w,b
 10587  002224  51B2               	movf	(___fldiv@a+1)& (0+255),w,b
 10588  002226  59BB               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 10589  002228  51B3               	movf	(___fldiv@a+2)& (0+255),w,b
 10590  00222A  59BC               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 10591  00222C  51B4               	movf	(___fldiv@a+3)& (0+255),w,b
 10592  00222E  59BD               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 10593  002230  A0D8               	btfss	status,0,c
 10594  002232  D009               	goto	l1036
 10595                           
 10596                           ; BSR set to: 0
 10597  002234  8DC3               	bsf	(___fldiv@grs+3)& (0+255),6,b
 10598                           
 10599                           ; BSR set to: 0
 10600  002236  51B1               	movf	___fldiv@a& (0+255),w,b
 10601  002238  5FBA               	subwf	___fldiv@rem& (0+255),f,b
 10602  00223A  51B2               	movf	(___fldiv@a+1)& (0+255),w,b
 10603  00223C  5BBB               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 10604  00223E  51B3               	movf	(___fldiv@a+2)& (0+255),w,b
 10605  002240  5BBC               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 10606  002242  51B4               	movf	(___fldiv@a+3)& (0+255),w,b
 10607  002244  5BBD               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 10608  002246                     l1036:
 10609                           
 10610                           ; BSR set to: 0
 10611                           
 10612                           ; BSR set to: 0
 10613  002246  2BC5               	incf	___fldiv@aexp& (0+255),f,b
 10614  002248                     l1032:
 10615                           
 10616                           ; BSR set to: 0
 10617  002248  0E19               	movlw	25
 10618  00224A  65C5               	cpfsgt	___fldiv@aexp& (0+255),b
 10619  00224C  D7D5               	goto	l1033
 10620                           
 10621                           ; BSR set to: 0
 10622                           
 10623                           ; BSR set to: 0
 10624  00224E  51BA               	movf	___fldiv@rem& (0+255),w,b
 10625  002250  11BB               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 10626  002252  11BC               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 10627  002254  11BD               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 10628  002256  B4D8               	btfsc	status,2,c
 10629  002258  D011               	goto	l1039
 10630                           
 10631                           ; BSR set to: 0
 10632  00225A  81C0               	bsf	___fldiv@grs& (0+255),0,b
 10633                           
 10634                           ; BSR set to: 0
 10635  00225C  D00F               	goto	l1039
 10636  00225E                     
 10637                           ; BSR set to: 0
 10638                           
 10639                           ; BSR set to: 0
 10640  00225E  90D8               	bcf	status,0,c
 10641  002260  37AD               	rlcf	___fldiv@b& (0+255),f,b
 10642  002262  37AE               	rlcf	(___fldiv@b+1)& (0+255),f,b
 10643  002264  37AF               	rlcf	(___fldiv@b+2)& (0+255),f,b
 10644  002266  37B0               	rlcf	(___fldiv@b+3)& (0+255),f,b
 10645                           
 10646                           ; BSR set to: 0
 10647  002268  BFC3               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 10648                           
 10649                           ; BSR set to: 0
 10650  00226A  81AD               	bsf	___fldiv@b& (0+255),0,b
 10651                           
 10652                           ; BSR set to: 0
 10653  00226C  90D8               	bcf	status,0,c
 10654  00226E  37C0               	rlcf	___fldiv@grs& (0+255),f,b
 10655  002270  37C1               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 10656  002272  37C2               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 10657  002274  37C3               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 10658  002276  07BE               	decf	___fldiv@new_exp& (0+255),f,b
 10659  002278  A0D8               	btfss	status,0,c
 10660  00227A  07BF               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 10661  00227C                     l1039:
 10662                           
 10663                           ; BSR set to: 0
 10664                           
 10665                           ; BSR set to: 0
 10666  00227C  AFAF               	btfss	(___fldiv@b+2)& (0+255),7,b
 10667  00227E  D7EF               	goto	l1040
 10668                           
 10669                           ; BSR set to: 0
 10670                           
 10671                           ; BSR set to: 0
 10672  002280  0E00               	movlw	0
 10673  002282  6FC5               	movwf	___fldiv@aexp& (0+255),b
 10674                           
 10675                           ; BSR set to: 0
 10676  002284  AFC3               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10677  002286  D016               	goto	l1046
 10678                           
 10679                           ; BSR set to: 0
 10680  002288  0EFF               	movlw	255
 10681  00228A  15C0               	andwf	___fldiv@grs& (0+255),w,b
 10682  00228C  6FB5               	movwf	??___fldiv& (0+255),b
 10683  00228E  0EFF               	movlw	255
 10684  002290  15C1               	andwf	(___fldiv@grs+1)& (0+255),w,b
 10685  002292  6FB6               	movwf	(??___fldiv+1)& (0+255),b
 10686  002294  0EFF               	movlw	255
 10687  002296  15C2               	andwf	(___fldiv@grs+2)& (0+255),w,b
 10688  002298  6FB7               	movwf	(??___fldiv+2)& (0+255),b
 10689  00229A  0E7F               	movlw	127
 10690  00229C  15C3               	andwf	(___fldiv@grs+3)& (0+255),w,b
 10691  00229E  6FB8               	movwf	(??___fldiv+3)& (0+255),b
 10692  0022A0  51B5               	movf	??___fldiv& (0+255),w,b
 10693  0022A2  11B6               	iorwf	(??___fldiv+1)& (0+255),w,b
 10694  0022A4  11B7               	iorwf	(??___fldiv+2)& (0+255),w,b
 10695  0022A6  11B8               	iorwf	(??___fldiv+3)& (0+255),w,b
 10696  0022A8  A4D8               	btfss	status,2,c
 10697  0022AA  D002               	goto	u5010
 10698                           
 10699                           ; BSR set to: 0
 10700                           
 10701                           ; BSR set to: 0
 10702  0022AC  A1AD               	btfss	___fldiv@b& (0+255),0,b
 10703  0022AE  D002               	goto	l1046
 10704  0022B0                     u5010:
 10705                           
 10706                           ; BSR set to: 0
 10707  0022B0  0E01               	movlw	1
 10708  0022B2  6FC5               	movwf	___fldiv@aexp& (0+255),b
 10709  0022B4                     l1046:
 10710                           
 10711                           ; BSR set to: 0
 10712                           
 10713                           ; BSR set to: 0
 10714                           
 10715                           ; BSR set to: 0
 10716  0022B4  51C5               	movf	___fldiv@aexp& (0+255),w,b
 10717  0022B6  B4D8               	btfsc	status,2,c
 10718  0022B8  D01F               	goto	l1048
 10719                           
 10720                           ; BSR set to: 0
 10721  0022BA  0E01               	movlw	1
 10722  0022BC  27AD               	addwf	___fldiv@b& (0+255),f,b
 10723  0022BE  0E00               	movlw	0
 10724  0022C0  23AE               	addwfc	(___fldiv@b+1)& (0+255),f,b
 10725  0022C2  23AF               	addwfc	(___fldiv@b+2)& (0+255),f,b
 10726  0022C4  23B0               	addwfc	(___fldiv@b+3)& (0+255),f,b
 10727                           
 10728                           ; BSR set to: 0
 10729  0022C6  A1B0               	btfss	(___fldiv@b+3)& (0+255),0,b
 10730  0022C8  D017               	goto	l1048
 10731                           
 10732                           ; BSR set to: 0
 10733  0022CA  C0AD  F0B5         	movff	___fldiv@b,??___fldiv
 10734  0022CE  C0AE  F0B6         	movff	___fldiv@b+1,??___fldiv+1
 10735  0022D2  C0AF  F0B7         	movff	___fldiv@b+2,??___fldiv+2
 10736  0022D6  C0B0  F0B8         	movff	___fldiv@b+3,??___fldiv+3
 10737  0022DA  35B8               	rlcf	(??___fldiv+3)& (0+255),w,b
 10738  0022DC  33B8               	rrcf	(??___fldiv+3)& (0+255),f,b
 10739  0022DE  33B7               	rrcf	(??___fldiv+2)& (0+255),f,b
 10740  0022E0  33B6               	rrcf	(??___fldiv+1)& (0+255),f,b
 10741  0022E2  33B5               	rrcf	??___fldiv& (0+255),f,b
 10742  0022E4  C0B5  F0AD         	movff	??___fldiv,___fldiv@b
 10743  0022E8  C0B6  F0AE         	movff	??___fldiv+1,___fldiv@b+1
 10744  0022EC  C0B7  F0AF         	movff	??___fldiv+2,___fldiv@b+2
 10745  0022F0  C0B8  F0B0         	movff	??___fldiv+3,___fldiv@b+3
 10746                           
 10747                           ; BSR set to: 0
 10748  0022F4  4BBE               	infsnz	___fldiv@new_exp& (0+255),f,b
 10749  0022F6  2BBF               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 10750  0022F8                     l1048:
 10751                           
 10752                           ; BSR set to: 0
 10753                           
 10754                           ; BSR set to: 0
 10755                           
 10756                           ; BSR set to: 0
 10757  0022F8  BFBF               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 10758  0022FA  D010               	goto	l1049
 10759  0022FC  51BF               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 10760  0022FE  E103               	bnz	u5040
 10761  002300  29BE               	incf	___fldiv@new_exp& (0+255),w,b
 10762  002302  A0D8               	btfss	status,0,c
 10763  002304  D00B               	goto	l1049
 10764  002306                     u5040:
 10765                           
 10766                           ; BSR set to: 0
 10767  002306  0E00               	movlw	0
 10768  002308  6FBF               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10769  00230A  69BE               	setf	___fldiv@new_exp& (0+255),b
 10770  00230C  0E00               	movlw	0
 10771  00230E  6FAD               	movwf	___fldiv@b& (0+255),b
 10772  002310  0E00               	movlw	0
 10773  002312  6FAE               	movwf	(___fldiv@b+1)& (0+255),b
 10774  002314  0E00               	movlw	0
 10775  002316  6FAF               	movwf	(___fldiv@b+2)& (0+255),b
 10776  002318  0E00               	movlw	0
 10777  00231A  6FB0               	movwf	(___fldiv@b+3)& (0+255),b
 10778  00231C                     l1049:
 10779                           
 10780                           ; BSR set to: 0
 10781                           
 10782                           ; BSR set to: 0
 10783  00231C  BFBF               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 10784  00231E  D005               	goto	u5050
 10785  002320  51BF               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 10786  002322  E111               	bnz	l4580
 10787  002324  05BE               	decf	___fldiv@new_exp& (0+255),w,b
 10788  002326  B0D8               	btfsc	status,0,c
 10789  002328  D00E               	goto	l1050
 10790  00232A                     u5050:
 10791                           
 10792                           ; BSR set to: 0
 10793  00232A  0E00               	movlw	0
 10794  00232C  6FBF               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10795  00232E  0E00               	movlw	0
 10796  002330  6FBE               	movwf	___fldiv@new_exp& (0+255),b
 10797  002332  0E00               	movlw	0
 10798  002334  6FAD               	movwf	___fldiv@b& (0+255),b
 10799  002336  0E00               	movlw	0
 10800  002338  6FAE               	movwf	(___fldiv@b+1)& (0+255),b
 10801  00233A  0E00               	movlw	0
 10802  00233C  6FAF               	movwf	(___fldiv@b+2)& (0+255),b
 10803  00233E  0E00               	movlw	0
 10804  002340  6FB0               	movwf	(___fldiv@b+3)& (0+255),b
 10805  002342  0E00               	movlw	0
 10806  002344  6FB9               	movwf	___fldiv@sign& (0+255),b
 10807  002346                     l1050:
 10808  002346                     l4580:
 10809                           
 10810                           ; BSR set to: 0
 10811  002346  C0BE  F0C4         	movff	___fldiv@new_exp,___fldiv@bexp
 10812                           
 10813                           ; BSR set to: 0
 10814  00234A  A1C4               	btfss	___fldiv@bexp& (0+255),0,b
 10815  00234C  D002               	goto	l1051
 10816                           
 10817                           ; BSR set to: 0
 10818  00234E  8FAF               	bsf	(___fldiv@b+2)& (0+255),7,b
 10819  002350  D001               	goto	l1052
 10820  002352                     l1051:
 10821                           
 10822                           ; BSR set to: 0
 10823                           
 10824                           ; BSR set to: 0
 10825  002352  9FAF               	bcf	(___fldiv@b+2)& (0+255),7,b
 10826  002354                     l1052:
 10827                           
 10828                           ; BSR set to: 0
 10829                           
 10830                           ; BSR set to: 0
 10831  002354  90D8               	bcf	status,0,c
 10832  002356  31C4               	rrcf	___fldiv@bexp& (0+255),w,b
 10833  002358  6FB0               	movwf	(___fldiv@b+3)& (0+255),b
 10834                           
 10835                           ; BSR set to: 0
 10836  00235A  51B9               	movf	___fldiv@sign& (0+255),w,b
 10837  00235C  13B0               	iorwf	(___fldiv@b+3)& (0+255),f,b
 10838                           
 10839                           ; BSR set to: 0
 10840  00235E  C0AD  F0AD         	movff	___fldiv@b,?___fldiv
 10841  002362  C0AE  F0AE         	movff	___fldiv@b+1,?___fldiv+1
 10842  002366  C0AF  F0AF         	movff	___fldiv@b+2,?___fldiv+2
 10843  00236A  C0B0  F0B0         	movff	___fldiv@b+3,?___fldiv+3
 10844  00236E  0012               	return	
 10845  002370                     __end_of___fldiv:
 10846                           	opt stack 0
 10847                           tblptru	equ	0xFF8
 10848                           tblptrh	equ	0xFF7
 10849                           tblptrl	equ	0xFF6
 10850                           tablat	equ	0xFF5
 10851                           prodh	equ	0xFF4
 10852                           prodl	equ	0xFF3
 10853                           intcon	equ	0xFF2
 10854                           indf0	equ	0xFEF
 10855                           postinc0	equ	0xFEE
 10856                           fsr0h	equ	0xFEA
 10857                           fsr0l	equ	0xFE9
 10858                           wreg	equ	0xFE8
 10859                           postdec1	equ	0xFE5
 10860                           fsr1l	equ	0xFE1
 10861                           indf2	equ	0xFDF
 10862                           postinc2	equ	0xFDE
 10863                           postdec2	equ	0xFDD
 10864                           fsr2h	equ	0xFDA
 10865                           fsr2l	equ	0xFD9
 10866                           status	equ	0xFD8
 10867                           
 10868 ;; *************** function _lcd_init *****************
 10869 ;; Defined at:
 10870 ;;		line 56 in file "lcd_x8.c"
 10871 ;; Parameters:    Size  Location     Type
 10872 ;;		None
 10873 ;; Auto vars:     Size  Location     Type
 10874 ;;  i               1   10[BANK0 ] unsigned char 
 10875 ;; Return value:  Size  Location     Type
 10876 ;;                  1    wreg      void 
 10877 ;; Registers used:
 10878 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10879 ;; Tracked objects:
 10880 ;;		On entry : 0/0
 10881 ;;		On exit  : 0/0
 10882 ;;		Unchanged: 0/0
 10883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10885 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10887 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10888 ;;Total ram usage:        1 bytes
 10889 ;; Hardware stack levels used:    1
 10890 ;; Hardware stack levels required when called:    6
 10891 ;; This function calls:
 10892 ;;		_delay_ms
 10893 ;;		_lcd_send_byte
 10894 ;;		_lcd_send_nibble
 10895 ;; This function is called by:
 10896 ;;		_main
 10897 ;; This function uses a non-reentrant model
 10898 ;;
 10899                           
 10900                           	psect	text35
 10901  003226                     __ptext35:
 10902                           	opt stack 0
 10903  003226                     _lcd_init:
 10904                           	opt stack 24
 10905                           
 10906                           ;lcd_x8.c: 58: unsigned char i;
 10907                           ;lcd_x8.c: 61: PORTEbits.RE2 = 0;
 10908                           
 10909                           ; BSR set to: 0
 10910                           ;incstack = 0
 10911  003226  9484               	bcf	3972,2,c	;volatile
 10912                           
 10913                           ;lcd_x8.c: 63: PORTEbits.RE1 = 0;
 10914  003228  9284               	bcf	3972,1,c	;volatile
 10915                           
 10916                           ;lcd_x8.c: 65: delay_ms(25);
 10917  00322A  0E00               	movlw	0
 10918  00322C  0100               	movlb	0	; () banked
 10919  00322E  6F81               	movwf	(delay_ms@n+1)& (0+255),b
 10920  003230  0E19               	movlw	25
 10921  003232  6F80               	movwf	delay_ms@n& (0+255),b
 10922  003234  EC43  F01B         	call	_delay_ms	;wreg free
 10923                           
 10924                           ;lcd_x8.c: 66: for (i = 1; i <= 3; ++i) {
 10925  003238  0E01               	movlw	1
 10926  00323A  0100               	movlb	0	; () banked
 10927  00323C  6F8A               	movwf	lcd_init@i& (0+255),b
 10928  00323E                     l4908:
 10929                           
 10930                           ; BSR set to: 0
 10931  00323E  0E03               	movlw	3
 10932  003240  658A               	cpfsgt	lcd_init@i& (0+255),b
 10933  003242  D001               	goto	l223
 10934  003244  D00D               	goto	u5660
 10935  003246                     l223:
 10936                           
 10937                           ; BSR set to: 0
 10938                           ;lcd_x8.c: 67: lcd_send_nibble(3);
 10939                           
 10940                           ; BSR set to: 0
 10941  003246  0E03               	movlw	3
 10942  003248  EC7F  F01B         	call	_lcd_send_nibble
 10943                           
 10944                           ;lcd_x8.c: 69: delay_ms(6);
 10945  00324C  0E00               	movlw	0
 10946  00324E  0100               	movlb	0	; () banked
 10947  003250  6F81               	movwf	(delay_ms@n+1)& (0+255),b
 10948  003252  0E06               	movlw	6
 10949  003254  6F80               	movwf	delay_ms@n& (0+255),b
 10950  003256  EC43  F01B         	call	_delay_ms	;wreg free
 10951  00325A  0100               	movlb	0	; () banked
 10952  00325C  2B8A               	incf	lcd_init@i& (0+255),f,b
 10953  00325E  D7EF               	goto	l4908
 10954  003260                     u5660:
 10955                           
 10956                           ; BSR set to: 0
 10957                           ;lcd_x8.c: 70: }
 10958                           ;lcd_x8.c: 72: lcd_send_nibble(2);
 10959                           
 10960                           ; BSR set to: 0
 10961  003260  0E02               	movlw	2
 10962  003262  EC7F  F01B         	call	_lcd_send_nibble
 10963                           
 10964                           ;lcd_x8.c: 74: for (i = 0; i <= 3; ++i)
 10965  003266  0E00               	movlw	0
 10966  003268  0100               	movlb	0	; () banked
 10967  00326A  6F8A               	movwf	lcd_init@i& (0+255),b
 10968  00326C                     l4922:
 10969                           
 10970                           ; BSR set to: 0
 10971  00326C  0E03               	movlw	3
 10972  00326E  658A               	cpfsgt	lcd_init@i& (0+255),b
 10973  003270  D001               	goto	l225
 10974  003272  0012               	return	
 10975  003274                     l225:
 10976                           
 10977                           ; BSR set to: 0
 10978                           ;lcd_x8.c: 75: lcd_send_byte(0, LCD_INIT_STRING[i]);
 10979                           
 10980                           ; BSR set to: 0
 10981  003274  518A               	movf	lcd_init@i& (0+255),w,b
 10982  003276  0D01               	mullw	1
 10983  003278  0E4E               	movlw	low _LCD_INIT_STRING
 10984  00327A  24F3               	addwf	prodl,w,c
 10985  00327C  6ED9               	movwf	fsr2l,c
 10986  00327E  0E00               	movlw	high _LCD_INIT_STRING
 10987  003280  20F4               	addwfc	prodh,w,c
 10988  003282  6EDA               	movwf	fsr2h,c
 10989  003284  50DF               	movf	indf2,w,c
 10990  003286  6F88               	movwf	lcd_send_byte@n& (0+255),b
 10991  003288  0E00               	movlw	0
 10992  00328A  ECE0  F019         	call	_lcd_send_byte
 10993  00328E  0100               	movlb	0	; () banked
 10994  003290  2B8A               	incf	lcd_init@i& (0+255),f,b
 10995  003292  D7EC               	goto	l4922
 10996  003294                     __end_of_lcd_init:
 10997                           	opt stack 0
 10998                           tblptru	equ	0xFF8
 10999                           tblptrh	equ	0xFF7
 11000                           tblptrl	equ	0xFF6
 11001                           tablat	equ	0xFF5
 11002                           prodh	equ	0xFF4
 11003                           prodl	equ	0xFF3
 11004                           intcon	equ	0xFF2
 11005                           indf0	equ	0xFEF
 11006                           postinc0	equ	0xFEE
 11007                           fsr0h	equ	0xFEA
 11008                           fsr0l	equ	0xFE9
 11009                           wreg	equ	0xFE8
 11010                           postdec1	equ	0xFE5
 11011                           fsr1l	equ	0xFE1
 11012                           indf2	equ	0xFDF
 11013                           postinc2	equ	0xFDE
 11014                           postdec2	equ	0xFDD
 11015                           fsr2h	equ	0xFDA
 11016                           fsr2l	equ	0xFD9
 11017                           status	equ	0xFD8
 11018                           
 11019 ;; *************** function _lcd_send_byte *****************
 11020 ;; Defined at:
 11021 ;;		line 39 in file "lcd_x8.c"
 11022 ;; Parameters:    Size  Location     Type
 11023 ;;  cm_data         1    wreg     unsigned char 
 11024 ;;  n               1    8[BANK0 ] unsigned char 
 11025 ;; Auto vars:     Size  Location     Type
 11026 ;;  cm_data         1    9[BANK0 ] unsigned char 
 11027 ;; Return value:  Size  Location     Type
 11028 ;;                  1    wreg      void 
 11029 ;; Registers used:
 11030 ;;		wreg, status,2, status,0, cstack
 11031 ;; Tracked objects:
 11032 ;;		On entry : 0/0
 11033 ;;		On exit  : 0/0
 11034 ;;		Unchanged: 0/0
 11035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11036 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11037 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11039 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11040 ;;Total ram usage:        2 bytes
 11041 ;; Hardware stack levels used:    1
 11042 ;; Hardware stack levels required when called:    5
 11043 ;; This function calls:
 11044 ;;		_delay_cycles
 11045 ;;		_delay_ms
 11046 ;;		_lcd_send_nibble
 11047 ;; This function is called by:
 11048 ;;		_lcd_init
 11049 ;;		_lcd_gotoxy
 11050 ;;		_lcd_putc
 11051 ;;		_Lcd_Shift_Right
 11052 ;;		_Lcd_Shift_Left
 11053 ;; This function uses a non-reentrant model
 11054 ;;
 11055                           
 11056                           	psect	text36
 11057  0033C0                     __ptext36:
 11058                           	opt stack 0
 11059  0033C0                     _lcd_send_byte:
 11060                           	opt stack 22
 11061                           
 11062                           ; BSR set to: 0
 11063                           ;incstack = 0
 11064                           ;lcd_send_byte@cm_data stored from wreg
 11065  0033C0  0100               	movlb	0	; () banked
 11066  0033C2  6F89               	movwf	lcd_send_byte@cm_data& (0+255),b
 11067                           
 11068                           ;lcd_x8.c: 43: PORTEbits.RE2 = cm_data;
 11069  0033C4  0100               	movlb	0	; () banked
 11070  0033C6  B189               	btfsc	lcd_send_byte@cm_data& (0+255),0,b
 11071  0033C8  D002               	bra	u2985
 11072  0033CA  9484               	bcf	3972,2,c	;volatile
 11073  0033CC  D001               	bra	u2986
 11074  0033CE                     u2985:
 11075  0033CE  8484               	bsf	3972,2,c	;volatile
 11076  0033D0                     u2986:
 11077                           
 11078                           ;lcd_x8.c: 44: delay_cycles(1);
 11079  0033D0  0E01               	movlw	1
 11080  0033D2  ECB7  F01A         	call	_delay_cycles
 11081                           
 11082                           ;lcd_x8.c: 46: delay_cycles(1);
 11083  0033D6  0E01               	movlw	1
 11084  0033D8  ECB7  F01A         	call	_delay_cycles
 11085                           
 11086                           ;lcd_x8.c: 47: PORTEbits.RE1 = 0;
 11087  0033DC  9284               	bcf	3972,1,c	;volatile
 11088                           
 11089                           ;lcd_x8.c: 48: lcd_send_nibble(n >> 4);
 11090  0033DE  0100               	movlb	0	; () banked
 11091  0033E0  3988               	swapf	lcd_send_byte@n& (0+255),w,b
 11092  0033E2  0B0F               	andlw	15
 11093  0033E4  EC7F  F01B         	call	_lcd_send_nibble
 11094                           
 11095                           ;lcd_x8.c: 49: lcd_send_nibble(n & 0x0f);
 11096  0033E8  0100               	movlb	0	; () banked
 11097  0033EA  5188               	movf	lcd_send_byte@n& (0+255),w,b
 11098  0033EC  0B0F               	andlw	15
 11099  0033EE  EC7F  F01B         	call	_lcd_send_nibble
 11100                           
 11101                           ;lcd_x8.c: 50: if (cm_data) _delaywdt((unsigned long)((200)*(4000000UL/4000000.0)));
 11102  0033F2  0100               	movlb	0	; () banked
 11103  0033F4  5189               	movf	lcd_send_byte@cm_data& (0+255),w,b
 11104  0033F6  B4D8               	btfsc	status,2,c
 11105  0033F8  D005               	goto	l218
 11106                           
 11107                           ; BSR set to: 0
 11108  0033FA  0E32               	movlw	50
 11109  0033FC                     u5877:
 11110  0033FC  0004               	clrwdt	
 11111  0033FE  2EE8               	decfsz	wreg,f,c
 11112  003400  D7FD               	bra	u5877
 11113  003402  0012               	return	
 11114  003404                     l218:
 11115                           
 11116                           ;lcd_x8.c: 51: else
 11117                           ;lcd_x8.c: 52: delay_ms(2);
 11118  003404  0E00               	movlw	0
 11119  003406  0100               	movlb	0	; () banked
 11120  003408  6F81               	movwf	(delay_ms@n+1)& (0+255),b
 11121  00340A  0E02               	movlw	2
 11122  00340C  6F80               	movwf	delay_ms@n& (0+255),b
 11123  00340E  EC43  F01B         	call	_delay_ms	;wreg free
 11124  003412  0012               	return	
 11125  003414                     __end_of_lcd_send_byte:
 11126                           	opt stack 0
 11127                           tblptru	equ	0xFF8
 11128                           tblptrh	equ	0xFF7
 11129                           tblptrl	equ	0xFF6
 11130                           tablat	equ	0xFF5
 11131                           prodh	equ	0xFF4
 11132                           prodl	equ	0xFF3
 11133                           intcon	equ	0xFF2
 11134                           indf0	equ	0xFEF
 11135                           postinc0	equ	0xFEE
 11136                           fsr0h	equ	0xFEA
 11137                           fsr0l	equ	0xFE9
 11138                           wreg	equ	0xFE8
 11139                           postdec1	equ	0xFE5
 11140                           fsr1l	equ	0xFE1
 11141                           indf2	equ	0xFDF
 11142                           postinc2	equ	0xFDE
 11143                           postdec2	equ	0xFDD
 11144                           fsr2h	equ	0xFDA
 11145                           fsr2l	equ	0xFD9
 11146                           status	equ	0xFD8
 11147                           
 11148 ;; *************** function _lcd_send_nibble *****************
 11149 ;; Defined at:
 11150 ;;		line 29 in file "lcd_x8.c"
 11151 ;; Parameters:    Size  Location     Type
 11152 ;;  n               1    wreg     unsigned char 
 11153 ;; Auto vars:     Size  Location     Type
 11154 ;;  n               1    7[BANK0 ] unsigned char 
 11155 ;; Return value:  Size  Location     Type
 11156 ;;                  1    wreg      void 
 11157 ;; Registers used:
 11158 ;;		wreg, status,2, status,0, cstack
 11159 ;; Tracked objects:
 11160 ;;		On entry : 0/0
 11161 ;;		On exit  : 0/0
 11162 ;;		Unchanged: 0/0
 11163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11165 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11166 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11167 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11168 ;;Total ram usage:        2 bytes
 11169 ;; Hardware stack levels used:    1
 11170 ;; Hardware stack levels required when called:    4
 11171 ;; This function calls:
 11172 ;;		_delay_cycles
 11173 ;; This function is called by:
 11174 ;;		_lcd_send_byte
 11175 ;;		_lcd_init
 11176 ;; This function uses a non-reentrant model
 11177 ;;
 11178                           
 11179                           	psect	text37
 11180  0036FE                     __ptext37:
 11181                           	opt stack 0
 11182  0036FE                     _lcd_send_nibble:
 11183                           	opt stack 22
 11184                           
 11185                           ;incstack = 0
 11186                           ;lcd_send_nibble@n stored from wreg
 11187  0036FE  0100               	movlb	0	; () banked
 11188  003700  6F87               	movwf	lcd_send_nibble@n& (0+255),b
 11189                           
 11190                           ;lcd_x8.c: 31: lcd.data = n;
 11191  003702  C087  F086         	movff	lcd_send_nibble@n,??_lcd_send_nibble
 11192  003706  0100               	movlb	0	; () banked
 11193  003708  3B86               	swapf	??_lcd_send_nibble& (0+255),f,b
 11194  00370A  5083               	movf	3971,w,c
 11195  00370C  1986               	xorwf	??_lcd_send_nibble& (0+255),w,b
 11196  00370E  0B0F               	andlw	-241
 11197  003710  1986               	xorwf	??_lcd_send_nibble& (0+255),w,b
 11198  003712  6E83               	movwf	3971,c
 11199                           
 11200                           ; BSR set to: 0
 11201                           ;lcd_x8.c: 33: delay_cycles(1);
 11202  003714  0E01               	movlw	1
 11203  003716  ECB7  F01A         	call	_delay_cycles
 11204                           
 11205                           ;lcd_x8.c: 34: PORTEbits.RE1 = 1;
 11206  00371A  8284               	bsf	3972,1,c	;volatile
 11207                           
 11208                           ;lcd_x8.c: 35: _delaywdt((unsigned long)((2)*(4000000UL/4000000.0)));
 11209  00371C  0004               	clrwdt	
 11210  00371E  F000               	nop		;2 cycle nop
 11211                           
 11212                           ;lcd_x8.c: 36: PORTEbits.RE1 = 0;
 11213  003720  9284               	bcf	3972,1,c	;volatile
 11214  003722  0012               	return		;funcret
 11215  003724                     __end_of_lcd_send_nibble:
 11216                           	opt stack 0
 11217                           tblptru	equ	0xFF8
 11218                           tblptrh	equ	0xFF7
 11219                           tblptrl	equ	0xFF6
 11220                           tablat	equ	0xFF5
 11221                           prodh	equ	0xFF4
 11222                           prodl	equ	0xFF3
 11223                           intcon	equ	0xFF2
 11224                           indf0	equ	0xFEF
 11225                           postinc0	equ	0xFEE
 11226                           fsr0h	equ	0xFEA
 11227                           fsr0l	equ	0xFE9
 11228                           wreg	equ	0xFE8
 11229                           postdec1	equ	0xFE5
 11230                           fsr1l	equ	0xFE1
 11231                           indf2	equ	0xFDF
 11232                           postinc2	equ	0xFDE
 11233                           postdec2	equ	0xFDD
 11234                           fsr2h	equ	0xFDA
 11235                           fsr2l	equ	0xFD9
 11236                           status	equ	0xFD8
 11237                           
 11238 ;; *************** function _delay_cycles *****************
 11239 ;; Defined at:
 11240 ;;		line 20 in file "lcd_x8.c"
 11241 ;; Parameters:    Size  Location     Type
 11242 ;;  n               1    wreg     unsigned char 
 11243 ;; Auto vars:     Size  Location     Type
 11244 ;;  n               1    3[BANK0 ] unsigned char 
 11245 ;;  x               2    4[BANK0 ] int 
 11246 ;; Return value:  Size  Location     Type
 11247 ;;                  1    wreg      void 
 11248 ;; Registers used:
 11249 ;;		wreg, status,2, status,0
 11250 ;; Tracked objects:
 11251 ;;		On entry : 0/0
 11252 ;;		On exit  : 0/0
 11253 ;;		Unchanged: 0/0
 11254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11256 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11257 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11258 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11259 ;;Total ram usage:        6 bytes
 11260 ;; Hardware stack levels used:    1
 11261 ;; Hardware stack levels required when called:    3
 11262 ;; This function calls:
 11263 ;;		Nothing
 11264 ;; This function is called by:
 11265 ;;		_lcd_send_nibble
 11266 ;;		_lcd_send_byte
 11267 ;; This function uses a non-reentrant model
 11268 ;;
 11269                           
 11270                           	psect	text38
 11271  00356E                     __ptext38:
 11272                           	opt stack 0
 11273  00356E                     _delay_cycles:
 11274                           	opt stack 22
 11275                           
 11276                           ;incstack = 0
 11277                           ;delay_cycles@n stored from wreg
 11278  00356E  0100               	movlb	0	; () banked
 11279  003570  6F83               	movwf	delay_cycles@n& (0+255),b
 11280                           
 11281                           ;lcd_x8.c: 21: int x;
 11282                           ;lcd_x8.c: 22: for (x = 0; x <= n; x++) {
 11283  003572  0E00               	movlw	0
 11284  003574  0100               	movlb	0	; () banked
 11285  003576  6F85               	movwf	(delay_cycles@x+1)& (0+255),b
 11286  003578  0E00               	movlw	0
 11287  00357A  6F84               	movwf	delay_cycles@x& (0+255),b
 11288  00357C  D004               	goto	l209
 11289  00357E                     l210:
 11290                           
 11291                           ; BSR set to: 0
 11292  00357E  0004               	clrwdt		;# 
 11293  003580  0100               	movlb	0	; () banked
 11294  003582  4B84               	infsnz	delay_cycles@x& (0+255),f,b
 11295  003584  2B85               	incf	(delay_cycles@x+1)& (0+255),f,b
 11296  003586                     l209:
 11297                           
 11298                           ; BSR set to: 0
 11299                           
 11300                           ; BSR set to: 0
 11301  003586  5183               	movf	delay_cycles@n& (0+255),w,b
 11302  003588  6F80               	movwf	??_delay_cycles& (0+255),b
 11303  00358A  6B81               	clrf	(??_delay_cycles+1)& (0+255),b
 11304  00358C  5184               	movf	delay_cycles@x& (0+255),w,b
 11305  00358E  5D80               	subwf	??_delay_cycles& (0+255),w,b
 11306  003590  5181               	movf	(??_delay_cycles+1)& (0+255),w,b
 11307  003592  0A80               	xorlw	128
 11308  003594  6F82               	movwf	(??_delay_cycles+2)& (0+255),b
 11309  003596  5185               	movf	(delay_cycles@x+1)& (0+255),w,b
 11310  003598  0A80               	xorlw	128
 11311  00359A  5982               	subwfb	(??_delay_cycles+2)& (0+255),w,b
 11312  00359C  A0D8               	btfss	status,0,c
 11313  00359E  0012               	return	
 11314  0035A0  D7EE               	goto	l210
 11315  0035A2                     __end_of_delay_cycles:
 11316                           	opt stack 0
 11317                           tblptru	equ	0xFF8
 11318                           tblptrh	equ	0xFF7
 11319                           tblptrl	equ	0xFF6
 11320                           tablat	equ	0xFF5
 11321                           prodh	equ	0xFF4
 11322                           prodl	equ	0xFF3
 11323                           intcon	equ	0xFF2
 11324                           indf0	equ	0xFEF
 11325                           postinc0	equ	0xFEE
 11326                           fsr0h	equ	0xFEA
 11327                           fsr0l	equ	0xFE9
 11328                           wreg	equ	0xFE8
 11329                           postdec1	equ	0xFE5
 11330                           fsr1l	equ	0xFE1
 11331                           indf2	equ	0xFDF
 11332                           postinc2	equ	0xFDE
 11333                           postdec2	equ	0xFDD
 11334                           fsr2h	equ	0xFDA
 11335                           fsr2l	equ	0xFD9
 11336                           status	equ	0xFD8
 11337                           
 11338 ;; *************** function _delay_ms *****************
 11339 ;; Defined at:
 11340 ;;		line 12 in file "lcd_x8.c"
 11341 ;; Parameters:    Size  Location     Type
 11342 ;;  n               2    0[BANK0 ] unsigned int 
 11343 ;; Auto vars:     Size  Location     Type
 11344 ;;  x               2    2[BANK0 ] int 
 11345 ;; Return value:  Size  Location     Type
 11346 ;;                  1    wreg      void 
 11347 ;; Registers used:
 11348 ;;		wreg, status,2, status,0
 11349 ;; Tracked objects:
 11350 ;;		On entry : 0/0
 11351 ;;		On exit  : 0/0
 11352 ;;		Unchanged: 0/0
 11353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11354 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11355 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11357 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11358 ;;Total ram usage:        4 bytes
 11359 ;; Hardware stack levels used:    1
 11360 ;; Hardware stack levels required when called:    3
 11361 ;; This function calls:
 11362 ;;		Nothing
 11363 ;; This function is called by:
 11364 ;;		_main
 11365 ;;		_lcd_send_byte
 11366 ;;		_lcd_init
 11367 ;;		_lcd_putc
 11368 ;; This function uses a non-reentrant model
 11369 ;;
 11370                           
 11371                           	psect	text39
 11372  003686                     __ptext39:
 11373                           	opt stack 0
 11374  003686                     _delay_ms:
 11375                           	opt stack 23
 11376                           
 11377                           ;lcd_x8.c: 13: int x;
 11378                           ;lcd_x8.c: 14: for (x = 0; x <= n; x++) {
 11379                           
 11380                           ; BSR set to: 0
 11381                           ;incstack = 0
 11382  003686  0E00               	movlw	0
 11383  003688  0100               	movlb	0	; () banked
 11384  00368A  6F83               	movwf	(delay_ms@x+1)& (0+255),b
 11385  00368C  0E00               	movlw	0
 11386  00368E  6F82               	movwf	delay_ms@x& (0+255),b
 11387  003690  D008               	goto	l203
 11388  003692                     
 11389                           ; BSR set to: 0
 11390                           ;lcd_x8.c: 15: _delaywdt((unsigned long)((1)*(4000000UL/4000.0)));
 11391                           
 11392                           ; BSR set to: 0
 11393  003692  0EC8               	movlw	200
 11394  003694                     u5887:
 11395  003694  0004               	clrwdt	
 11396  003696  0004               	clrwdt	
 11397  003698  2EE8               	decfsz	wreg,f,c
 11398  00369A  D7FC               	bra	u5887
 11399  00369C  0100               	movlb	0	; () banked
 11400  00369E  4B82               	infsnz	delay_ms@x& (0+255),f,b
 11401  0036A0  2B83               	incf	(delay_ms@x+1)& (0+255),f,b
 11402  0036A2                     l203:
 11403                           
 11404                           ; BSR set to: 0
 11405  0036A2  5182               	movf	delay_ms@x& (0+255),w,b
 11406  0036A4  5D80               	subwf	delay_ms@n& (0+255),w,b
 11407  0036A6  5183               	movf	(delay_ms@x+1)& (0+255),w,b
 11408  0036A8  5981               	subwfb	(delay_ms@n+1)& (0+255),w,b
 11409  0036AA  A0D8               	btfss	status,0,c
 11410  0036AC  0012               	return	
 11411  0036AE  D7F1               	goto	l204
 11412  0036B0                     __end_of_delay_ms:
 11413                           	opt stack 0
 11414                           tblptru	equ	0xFF8
 11415                           tblptrh	equ	0xFF7
 11416                           tblptrl	equ	0xFF6
 11417                           tablat	equ	0xFF5
 11418                           prodh	equ	0xFF4
 11419                           prodl	equ	0xFF3
 11420                           intcon	equ	0xFF2
 11421                           indf0	equ	0xFEF
 11422                           postinc0	equ	0xFEE
 11423                           fsr0h	equ	0xFEA
 11424                           fsr0l	equ	0xFE9
 11425                           wreg	equ	0xFE8
 11426                           postdec1	equ	0xFE5
 11427                           fsr1l	equ	0xFE1
 11428                           indf2	equ	0xFDF
 11429                           postinc2	equ	0xFDE
 11430                           postdec2	equ	0xFDD
 11431                           fsr2h	equ	0xFDA
 11432                           fsr2l	equ	0xFD9
 11433                           status	equ	0xFD8
 11434                           
 11435 ;; *************** function _init_pwm1 *****************
 11436 ;; Defined at:
 11437 ;;		line 5 in file "my_pwm.c"
 11438 ;; Parameters:    Size  Location     Type
 11439 ;;		None
 11440 ;; Auto vars:     Size  Location     Type
 11441 ;;		None
 11442 ;; Return value:  Size  Location     Type
 11443 ;;                  1    wreg      void 
 11444 ;; Registers used:
 11445 ;;		wreg, status,2
 11446 ;; Tracked objects:
 11447 ;;		On entry : 0/0
 11448 ;;		On exit  : 0/0
 11449 ;;		Unchanged: 0/0
 11450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11455 ;;Total ram usage:        0 bytes
 11456 ;; Hardware stack levels used:    1
 11457 ;; Hardware stack levels required when called:    3
 11458 ;; This function calls:
 11459 ;;		Nothing
 11460 ;; This function is called by:
 11461 ;;		_main
 11462 ;; This function uses a non-reentrant model
 11463 ;;
 11464                           
 11465                           	psect	text40
 11466  003758                     __ptext40:
 11467                           	opt stack 0
 11468  003758                     _init_pwm1:
 11469                           	opt stack 27
 11470                           
 11471                           ;my_pwm.c: 7: PR2 = 255;
 11472                           
 11473                           ; BSR set to: 0
 11474                           ;incstack = 0
 11475  003758  68CB               	setf	4043,c	;volatile
 11476                           
 11477                           ;my_pwm.c: 8: T2CON = 0;
 11478  00375A  0E00               	movlw	0
 11479  00375C  6ECA               	movwf	4042,c	;volatile
 11480                           
 11481                           ;my_pwm.c: 9: CCP1CON = 0x0C;
 11482  00375E  0E0C               	movlw	12
 11483  003760  6EBD               	movwf	4029,c	;volatile
 11484                           
 11485                           ;my_pwm.c: 11: T2CONbits.TMR2ON = 1;
 11486  003762  84CA               	bsf	4042,2,c	;volatile
 11487                           
 11488                           ;my_pwm.c: 12: TRISCbits.RC2 =0;
 11489  003764  9494               	bcf	3988,2,c	;volatile
 11490  003766  0012               	return		;funcret
 11491  003768                     __end_of_init_pwm1:
 11492                           	opt stack 0
 11493                           tblptru	equ	0xFF8
 11494                           tblptrh	equ	0xFF7
 11495                           tblptrl	equ	0xFF6
 11496                           tablat	equ	0xFF5
 11497                           prodh	equ	0xFF4
 11498                           prodl	equ	0xFF3
 11499                           intcon	equ	0xFF2
 11500                           indf0	equ	0xFEF
 11501                           postinc0	equ	0xFEE
 11502                           fsr0h	equ	0xFEA
 11503                           fsr0l	equ	0xFE9
 11504                           wreg	equ	0xFE8
 11505                           postdec1	equ	0xFE5
 11506                           fsr1l	equ	0xFE1
 11507                           indf2	equ	0xFDF
 11508                           postinc2	equ	0xFDE
 11509                           postdec2	equ	0xFDD
 11510                           fsr2h	equ	0xFDA
 11511                           fsr2l	equ	0xFD9
 11512                           status	equ	0xFD8
 11513                           
 11514 ;; *************** function _init_adc_no_lib *****************
 11515 ;; Defined at:
 11516 ;;		line 11 in file "my_adc.c"
 11517 ;; Parameters:    Size  Location     Type
 11518 ;;		None
 11519 ;; Auto vars:     Size  Location     Type
 11520 ;;		None
 11521 ;; Return value:  Size  Location     Type
 11522 ;;                  1    wreg      void 
 11523 ;; Registers used:
 11524 ;;		wreg, status,2
 11525 ;; Tracked objects:
 11526 ;;		On entry : 0/0
 11527 ;;		On exit  : 0/0
 11528 ;;		Unchanged: 0/0
 11529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11534 ;;Total ram usage:        0 bytes
 11535 ;; Hardware stack levels used:    1
 11536 ;; Hardware stack levels required when called:    3
 11537 ;; This function calls:
 11538 ;;		Nothing
 11539 ;; This function is called by:
 11540 ;;		_main
 11541 ;; This function uses a non-reentrant model
 11542 ;;
 11543                           
 11544                           	psect	text41
 11545  003768                     __ptext41:
 11546                           	opt stack 0
 11547  003768                     _init_adc_no_lib:
 11548                           	opt stack 27
 11549                           
 11550                           ;my_adc.c: 14: ADCON0 = 0;
 11551                           
 11552                           ;incstack = 0
 11553  003768  0E00               	movlw	0
 11554  00376A  6EC2               	movwf	4034,c	;volatile
 11555                           
 11556                           ;my_adc.c: 15: ADCON0bits.ADON = 1;
 11557  00376C  80C2               	bsf	4034,0,c	;volatile
 11558                           
 11559                           ;my_adc.c: 18: ADCON2 = 0b10001001;
 11560  00376E  0E89               	movlw	137
 11561  003770  6EC0               	movwf	4032,c	;volatile
 11562  003772  0012               	return		;funcret
 11563  003774                     __end_of_init_adc_no_lib:
 11564                           	opt stack 0
 11565                           tblptru	equ	0xFF8
 11566                           tblptrh	equ	0xFF7
 11567                           tblptrl	equ	0xFF6
 11568                           tablat	equ	0xFF5
 11569                           prodh	equ	0xFF4
 11570                           prodl	equ	0xFF3
 11571                           intcon	equ	0xFF2
 11572                           indf0	equ	0xFEF
 11573                           postinc0	equ	0xFEE
 11574                           fsr0h	equ	0xFEA
 11575                           fsr0l	equ	0xFE9
 11576                           wreg	equ	0xFE8
 11577                           postdec1	equ	0xFE5
 11578                           fsr1l	equ	0xFE1
 11579                           indf2	equ	0xFDF
 11580                           postinc2	equ	0xFDE
 11581                           postdec2	equ	0xFDD
 11582                           fsr2h	equ	0xFDA
 11583                           fsr2l	equ	0xFD9
 11584                           status	equ	0xFD8
 11585                           
 11586 ;; *************** function _initTimers01 *****************
 11587 ;; Defined at:
 11588 ;;		line 323 in file "pwm_asl.c"
 11589 ;; Parameters:    Size  Location     Type
 11590 ;;		None
 11591 ;; Auto vars:     Size  Location     Type
 11592 ;;		None
 11593 ;; Return value:  Size  Location     Type
 11594 ;;                  1    wreg      void 
 11595 ;; Registers used:
 11596 ;;		wreg, status,2
 11597 ;; Tracked objects:
 11598 ;;		On entry : 0/0
 11599 ;;		On exit  : 0/0
 11600 ;;		Unchanged: 0/0
 11601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11606 ;;Total ram usage:        0 bytes
 11607 ;; Hardware stack levels used:    1
 11608 ;; Hardware stack levels required when called:    3
 11609 ;; This function calls:
 11610 ;;		Nothing
 11611 ;; This function is called by:
 11612 ;;		_main
 11613 ;; This function uses a non-reentrant model
 11614 ;;
 11615                           
 11616                           	psect	text42
 11617  003630                     __ptext42:
 11618                           	opt stack 0
 11619  003630                     _initTimers01:
 11620                           	opt stack 27
 11621                           
 11622                           ;pwm_asl.c: 324: T0CON = 0;
 11623                           
 11624                           ;incstack = 0
 11625  003630  0E00               	movlw	0
 11626  003632  6ED5               	movwf	4053,c	;volatile
 11627                           
 11628                           ;pwm_asl.c: 328: INTCONbits.T0IF = 0;
 11629  003634  94F2               	bcf	intcon,2,c	;volatile
 11630                           
 11631                           ;pwm_asl.c: 329: T0CONbits.T0PS0 = 1;
 11632  003636  80D5               	bsf	4053,0,c	;volatile
 11633                           
 11634                           ;pwm_asl.c: 330: T0CONbits.T0PS1 = 1;
 11635  003638  82D5               	bsf	4053,1,c	;volatile
 11636                           
 11637                           ;pwm_asl.c: 331: T0CONbits.T0PS2 = 0;
 11638  00363A  94D5               	bcf	4053,2,c	;volatile
 11639                           
 11640                           ;pwm_asl.c: 332: TMR0H = (unsigned char) ((3036 >> 8) & 0x00FF);
 11641  00363C  0E0B               	movlw	11
 11642  00363E  6ED7               	movwf	4055,c	;volatile
 11643                           
 11644                           ;pwm_asl.c: 333: TMR0L = (unsigned char) (3036 & 0x00FF);
 11645  003640  0EDC               	movlw	220
 11646  003642  6ED6               	movwf	4054,c	;volatile
 11647                           
 11648                           ;pwm_asl.c: 335: T1CONbits.TMR1CS = 1;
 11649  003644  82CD               	bsf	4045,1,c	;volatile
 11650                           
 11651                           ;pwm_asl.c: 336: T1CONbits.T1CKPS1 = 0;
 11652  003646  9ACD               	bcf	4045,5,c	;volatile
 11653                           
 11654                           ;pwm_asl.c: 337: T1CONbits.T1CKPS0 = 0;
 11655  003648  98CD               	bcf	4045,4,c	;volatile
 11656                           
 11657                           ;pwm_asl.c: 340: TMR1H = 0;
 11658  00364A  0E00               	movlw	0
 11659  00364C  6ECF               	movwf	4047,c	;volatile
 11660                           
 11661                           ;pwm_asl.c: 341: TMR1L = 0;
 11662  00364E  0E00               	movlw	0
 11663  003650  6ECE               	movwf	4046,c	;volatile
 11664                           
 11665                           ;pwm_asl.c: 342: INTCONbits.GIE = 1;
 11666  003652  8EF2               	bsf	intcon,7,c	;volatile
 11667                           
 11668                           ;pwm_asl.c: 343: INTCONbits.T0IE = 1;
 11669  003654  8AF2               	bsf	intcon,5,c	;volatile
 11670                           
 11671                           ;pwm_asl.c: 344: T1CONbits.TMR1ON = 1;
 11672  003656  80CD               	bsf	4045,0,c	;volatile
 11673                           
 11674                           ;pwm_asl.c: 345: T0CONbits.TMR0ON = 1;
 11675  003658  8ED5               	bsf	4053,7,c	;volatile
 11676  00365A  0012               	return		;funcret
 11677  00365C                     __end_of_initTimers01:
 11678                           	opt stack 0
 11679                           tblptru	equ	0xFF8
 11680                           tblptrh	equ	0xFF7
 11681                           tblptrl	equ	0xFF6
 11682                           tablat	equ	0xFF5
 11683                           prodh	equ	0xFF4
 11684                           prodl	equ	0xFF3
 11685                           intcon	equ	0xFF2
 11686                           indf0	equ	0xFEF
 11687                           postinc0	equ	0xFEE
 11688                           fsr0h	equ	0xFEA
 11689                           fsr0l	equ	0xFE9
 11690                           wreg	equ	0xFE8
 11691                           postdec1	equ	0xFE5
 11692                           fsr1l	equ	0xFE1
 11693                           indf2	equ	0xFDF
 11694                           postinc2	equ	0xFDE
 11695                           postdec2	equ	0xFDD
 11696                           fsr2h	equ	0xFDA
 11697                           fsr2l	equ	0xFD9
 11698                           status	equ	0xFD8
 11699                           
 11700 ;; *************** function _enableInterrupts *****************
 11701 ;; Defined at:
 11702 ;;		line 263 in file "pwm_asl.c"
 11703 ;; Parameters:    Size  Location     Type
 11704 ;;		None
 11705 ;; Auto vars:     Size  Location     Type
 11706 ;;		None
 11707 ;; Return value:  Size  Location     Type
 11708 ;;                  1    wreg      void 
 11709 ;; Registers used:
 11710 ;;		None
 11711 ;; Tracked objects:
 11712 ;;		On entry : 0/0
 11713 ;;		On exit  : 0/0
 11714 ;;		Unchanged: 0/0
 11715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11720 ;;Total ram usage:        0 bytes
 11721 ;; Hardware stack levels used:    1
 11722 ;; Hardware stack levels required when called:    3
 11723 ;; This function calls:
 11724 ;;		Nothing
 11725 ;; This function is called by:
 11726 ;;		_main
 11727 ;; This function uses a non-reentrant model
 11728 ;;
 11729                           
 11730                           	psect	text43
 11731  003774                     __ptext43:
 11732                           	opt stack 0
 11733  003774                     _enableInterrupts:
 11734                           	opt stack 27
 11735                           
 11736                           ;pwm_asl.c: 264: INTCONbits.GIEH = 1;
 11737                           
 11738                           ;incstack = 0
 11739  003774  8EF2               	bsf	intcon,7,c	;volatile
 11740                           
 11741                           ;pwm_asl.c: 265: INTCONbits.GIEL = 1;
 11742  003776  8CF2               	bsf	intcon,6,c	;volatile
 11743  003778  0012               	return		;funcret
 11744  00377A                     __end_of_enableInterrupts:
 11745                           	opt stack 0
 11746                           tblptru	equ	0xFF8
 11747                           tblptrh	equ	0xFF7
 11748                           tblptrl	equ	0xFF6
 11749                           tablat	equ	0xFF5
 11750                           prodh	equ	0xFF4
 11751                           prodl	equ	0xFF3
 11752                           intcon	equ	0xFF2
 11753                           indf0	equ	0xFEF
 11754                           postinc0	equ	0xFEE
 11755                           fsr0h	equ	0xFEA
 11756                           fsr0l	equ	0xFE9
 11757                           wreg	equ	0xFE8
 11758                           postdec1	equ	0xFE5
 11759                           fsr1l	equ	0xFE1
 11760                           indf2	equ	0xFDF
 11761                           postinc2	equ	0xFDE
 11762                           postdec2	equ	0xFDD
 11763                           fsr2h	equ	0xFDA
 11764                           fsr2l	equ	0xFD9
 11765                           status	equ	0xFD8
 11766                           
 11767 ;; *************** function _highIsr *****************
 11768 ;; Defined at:
 11769 ;;		line 98 in file "pwm_asl.c"
 11770 ;; Parameters:    Size  Location     Type
 11771 ;;		None
 11772 ;; Auto vars:     Size  Location     Type
 11773 ;;		None
 11774 ;; Return value:  Size  Location     Type
 11775 ;;                  1    wreg      void 
 11776 ;; Registers used:
 11777 ;;		wreg, status,2, status,0, cstack
 11778 ;; Tracked objects:
 11779 ;;		On entry : 0/0
 11780 ;;		On exit  : 0/0
 11781 ;;		Unchanged: 0/0
 11782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11785 ;;      Temps:         20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11786 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11787 ;;Total ram usage:       20 bytes
 11788 ;; Hardware stack levels used:    1
 11789 ;; Hardware stack levels required when called:    2
 11790 ;; This function calls:
 11791 ;;		_Timer3_isr
 11792 ;; This function is called by:
 11793 ;;		Interrupt level 2
 11794 ;; This function uses a non-reentrant model
 11795 ;;
 11796                           
 11797                           	psect	intcode
 11798  000008                     __pintcode:
 11799                           	opt stack 0
 11800  000008                     _highIsr:
 11801                           	opt stack 21
 11802                           
 11803                           ;incstack = 0
 11804  000008  8252               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 11805  00000A  EDA7  F016         	call	int_func,f	;refresh shadow registers
 11806                           tblptru	equ	0xFF8
 11807                           tblptrh	equ	0xFF7
 11808                           tblptrl	equ	0xFF6
 11809                           tablat	equ	0xFF5
 11810                           prodh	equ	0xFF4
 11811                           prodl	equ	0xFF3
 11812                           intcon	equ	0xFF2
 11813                           indf0	equ	0xFEF
 11814                           postinc0	equ	0xFEE
 11815                           fsr0h	equ	0xFEA
 11816                           fsr0l	equ	0xFE9
 11817                           wreg	equ	0xFE8
 11818                           postdec1	equ	0xFE5
 11819                           fsr1l	equ	0xFE1
 11820                           indf2	equ	0xFDF
 11821                           postinc2	equ	0xFDE
 11822                           postdec2	equ	0xFDD
 11823                           fsr2h	equ	0xFDA
 11824                           fsr2l	equ	0xFD9
 11825                           status	equ	0xFD8
 11826                           
 11827                           	psect	intcode_body
 11828  002D4E                     __pintcode_body:
 11829                           	opt stack 21
 11830  002D4E                     int_func:
 11831                           	opt stack 21
 11832  002D4E  0006               	pop		; remove dummy address from shadow register refresh
 11833  002D50  CFFA F037          	movff	pclath,??_highIsr+2
 11834  002D54  CFFB F038          	movff	pclatu,??_highIsr+3
 11835  002D58  CFE9 F039          	movff	fsr0l,??_highIsr+4
 11836  002D5C  CFEA F03A          	movff	fsr0h,??_highIsr+5
 11837  002D60  CFE1 F03B          	movff	fsr1l,??_highIsr+6
 11838  002D64  CFE2 F03C          	movff	fsr1h,??_highIsr+7
 11839  002D68  CFD9 F03D          	movff	fsr2l,??_highIsr+8
 11840  002D6C  CFDA F03E          	movff	fsr2h,??_highIsr+9
 11841  002D70  CFF3 F03F          	movff	prodl,??_highIsr+10
 11842  002D74  CFF4 F040          	movff	prodh,??_highIsr+11
 11843  002D78  CFF6 F041          	movff	tblptrl,??_highIsr+12
 11844  002D7C  CFF7 F042          	movff	tblptrh,??_highIsr+13
 11845  002D80  CFF8 F043          	movff	tblptru,??_highIsr+14
 11846  002D84  CFF5 F044          	movff	tablat,??_highIsr+15
 11847  002D88  C052  F045         	movff	btemp,??_highIsr+16
 11848  002D8C  C053  F046         	movff	btemp+1,??_highIsr+17
 11849  002D90  C054  F047         	movff	btemp+2,??_highIsr+18
 11850  002D94  C055  F048         	movff	btemp+3,??_highIsr+19
 11851                           
 11852                           ;pwm_asl.c: 101: RPS_count = ((unsigned int) TMR1H << 8) | (TMR1L);
 11853  002D98  50CF               	movf	4047,w,c	;volatile
 11854  002D9A  6E35               	movwf	??_highIsr& (0+255),c
 11855  002D9C  50CE               	movf	4046,w,c	;volatile
 11856  002D9E  0101               	movlb	1	; () banked
 11857  002DA0  6F49               	movwf	_RPS_count& (0+255),b
 11858  002DA2  C035  F14A         	movff	??_highIsr,_RPS_count+1
 11859                           
 11860                           ;pwm_asl.c: 103: TMR0H = (unsigned char) ((3036 >> 8) & 0x00FF);
 11861  002DA6  0E0B               	movlw	11
 11862  002DA8  6ED7               	movwf	4055,c	;volatile
 11863                           
 11864                           ;pwm_asl.c: 104: TMR0L = (unsigned char) (3036 & 0x00FF);
 11865  002DAA  0EDC               	movlw	220
 11866  002DAC  6ED6               	movwf	4054,c	;volatile
 11867                           
 11868                           ;pwm_asl.c: 105: TMR1H = 0;
 11869  002DAE  0E00               	movlw	0
 11870  002DB0  6ECF               	movwf	4047,c	;volatile
 11871                           
 11872                           ;pwm_asl.c: 106: TMR1L = 0;
 11873  002DB2  0E00               	movlw	0
 11874  002DB4  6ECE               	movwf	4046,c	;volatile
 11875                           
 11876                           ; BSR set to: 1
 11877                           ;pwm_asl.c: 107: INTCONbits.T0IF = 0;
 11878  002DB6  94F2               	bcf	intcon,2,c	;volatile
 11879                           
 11880                           ; BSR set to: 1
 11881                           ;pwm_asl.c: 109: if (PIR2bits.TMR3IF) Timer3_isr();
 11882  002DB8  B2A1               	btfsc	4001,1,c	;volatile
 11883                           
 11884                           ; BSR set to: 1
 11885  002DBA  EC90  F017         	call	_Timer3_isr	;wreg free
 11886                           
 11887                           ;pwm_asl.c: 111: if (INTCON3bits.INT1IF) {
 11888  002DBE  A0F0               	btfss	intcon3,0,c	;volatile
 11889  002DC0  D00C               	goto	i2l113
 11890                           
 11891                           ;pwm_asl.c: 112: INTCON3bits.INT1IF = 0;
 11892  002DC2  90F0               	bcf	intcon3,0,c	;volatile
 11893                           
 11894                           ;pwm_asl.c: 113: HS++;
 11895  002DC4  4A4B               	infsnz	_HS,f,c
 11896  002DC6  2A4C               	incf	_HS+1,f,c
 11897                           
 11898                           ;pwm_asl.c: 114: if(HS==4){
 11899  002DC8  0E04               	movlw	4
 11900  002DCA  184B               	xorwf	_HS,w,c
 11901  002DCC  104C               	iorwf	_HS+1,w,c
 11902  002DCE  A4D8               	btfss	status,2,c
 11903  002DD0  D004               	goto	i2l113
 11904                           
 11905                           ;pwm_asl.c: 115: HS=0;
 11906  002DD2  0E00               	movlw	0
 11907  002DD4  6E4C               	movwf	_HS+1,c
 11908  002DD6  0E00               	movlw	0
 11909  002DD8  6E4B               	movwf	_HS,c
 11910  002DDA                     i2l113:
 11911                           
 11912                           ;pwm_asl.c: 116: }
 11913                           ;pwm_asl.c: 117: }
 11914                           ;pwm_asl.c: 118: if (INTCONbits.INT0IF) {
 11915  002DDA  A2F2               	btfss	intcon,1,c	;volatile
 11916  002DDC  D00C               	goto	i2l115
 11917                           
 11918                           ;pwm_asl.c: 119: INTCONbits.INT0IF = 0;
 11919  002DDE  92F2               	bcf	intcon,1,c	;volatile
 11920                           
 11921                           ;pwm_asl.c: 120: selectedMode++;
 11922  002DE0  4A49               	infsnz	_selectedMode,f,c
 11923  002DE2  2A4A               	incf	_selectedMode+1,f,c
 11924                           
 11925                           ;pwm_asl.c: 121: if(selectedMode==4){
 11926  002DE4  0E04               	movlw	4
 11927  002DE6  1849               	xorwf	_selectedMode,w,c
 11928  002DE8  104A               	iorwf	_selectedMode+1,w,c
 11929  002DEA  A4D8               	btfss	status,2,c
 11930  002DEC  D004               	goto	i2l115
 11931                           
 11932                           ;pwm_asl.c: 122: selectedMode=0;
 11933  002DEE  0E00               	movlw	0
 11934  002DF0  6E4A               	movwf	_selectedMode+1,c
 11935  002DF2  0E00               	movlw	0
 11936  002DF4  6E49               	movwf	_selectedMode,c
 11937  002DF6                     i2l115:
 11938  002DF6  C048  F055         	movff	??_highIsr+19,btemp+3
 11939  002DFA  C047  F054         	movff	??_highIsr+18,btemp+2
 11940  002DFE  C046  F053         	movff	??_highIsr+17,btemp+1
 11941  002E02  C045  F052         	movff	??_highIsr+16,btemp
 11942  002E06  C044  FFF5         	movff	??_highIsr+15,tablat
 11943  002E0A  C043  FFF8         	movff	??_highIsr+14,tblptru
 11944  002E0E  C042  FFF7         	movff	??_highIsr+13,tblptrh
 11945  002E12  C041  FFF6         	movff	??_highIsr+12,tblptrl
 11946  002E16  C040  FFF4         	movff	??_highIsr+11,prodh
 11947  002E1A  C03F  FFF3         	movff	??_highIsr+10,prodl
 11948  002E1E  C03E  FFDA         	movff	??_highIsr+9,fsr2h
 11949  002E22  C03D  FFD9         	movff	??_highIsr+8,fsr2l
 11950  002E26  C03C  FFE2         	movff	??_highIsr+7,fsr1h
 11951  002E2A  C03B  FFE1         	movff	??_highIsr+6,fsr1l
 11952  002E2E  C03A  FFEA         	movff	??_highIsr+5,fsr0h
 11953  002E32  C039  FFE9         	movff	??_highIsr+4,fsr0l
 11954  002E36  C038  FFFB         	movff	??_highIsr+3,pclatu
 11955  002E3A  C037  FFFA         	movff	??_highIsr+2,pclath
 11956  002E3E  9252               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 11957  002E40  0011               	retfie		f
 11958  002E42                     __end_of_highIsr:
 11959                           	opt stack 0
 11960                           pclatu	equ	0xFFB
 11961                           pclath	equ	0xFFA
 11962                           tblptru	equ	0xFF8
 11963                           tblptrh	equ	0xFF7
 11964                           tblptrl	equ	0xFF6
 11965                           tablat	equ	0xFF5
 11966                           prodh	equ	0xFF4
 11967                           prodl	equ	0xFF3
 11968                           intcon	equ	0xFF2
 11969                           intcon3	equ	0xFF0
 11970                           indf0	equ	0xFEF
 11971                           postinc0	equ	0xFEE
 11972                           fsr0h	equ	0xFEA
 11973                           fsr0l	equ	0xFE9
 11974                           wreg	equ	0xFE8
 11975                           postdec1	equ	0xFE5
 11976                           fsr1h	equ	0xFE2
 11977                           fsr1l	equ	0xFE1
 11978                           indf2	equ	0xFDF
 11979                           postinc2	equ	0xFDE
 11980                           postdec2	equ	0xFDD
 11981                           fsr2h	equ	0xFDA
 11982                           fsr2l	equ	0xFD9
 11983                           status	equ	0xFD8
 11984                           
 11985 ;; *************** function _Timer3_isr *****************
 11986 ;; Defined at:
 11987 ;;		line 283 in file "pwm_asl.c"
 11988 ;; Parameters:    Size  Location     Type
 11989 ;;		None
 11990 ;; Auto vars:     Size  Location     Type
 11991 ;;		None
 11992 ;; Return value:  Size  Location     Type
 11993 ;;                  1    wreg      void 
 11994 ;; Registers used:
 11995 ;;		wreg, status,2, status,0, cstack
 11996 ;; Tracked objects:
 11997 ;;		On entry : 0/0
 11998 ;;		On exit  : 0/0
 11999 ;;		Unchanged: 0/0
 12000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12003 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12004 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12005 ;;Total ram usage:        2 bytes
 12006 ;; Hardware stack levels used:    1
 12007 ;; Hardware stack levels required when called:    1
 12008 ;; This function calls:
 12009 ;;		i2___fladd
 12010 ;;		i2___flge
 12011 ;;		i2___flneg
 12012 ;;		i2___xxtofl
 12013 ;; This function is called by:
 12014 ;;		_highIsr
 12015 ;; This function uses a non-reentrant model
 12016 ;;
 12017                           
 12018                           	psect	text45
 12019  002F20                     __ptext45:
 12020                           	opt stack 0
 12021  002F20                     _Timer3_isr:
 12022                           	opt stack 21
 12023                           
 12024                           ;pwm_asl.c: 285: switch (selectedMode) {
 12025                           
 12026                           ;incstack = 0
 12027  002F20  D04E               	goto	i2l175
 12028  002F22                     i2l176:
 12029                           
 12030                           ;pwm_asl.c: 287: PORTCbits.RC5 = 0;
 12031  002F22  9A82               	bcf	3970,5,c	;volatile
 12032                           
 12033                           ;pwm_asl.c: 288: break;
 12034  002F24  0012               	return	
 12035  002F26                     i2l178:
 12036                           
 12037                           ;pwm_asl.c: 290: PORTCbits.RC5 = 1;
 12038  002F26  8A82               	bsf	3970,5,c	;volatile
 12039                           
 12040                           ;pwm_asl.c: 291: break;
 12041  002F28  0012               	return	
 12042  002F2A                     i2l179:
 12043                           
 12044                           ;pwm_asl.c: 293: PORTCbits.RC5=0;
 12045  002F2A  9A82               	bcf	3970,5,c	;volatile
 12046                           
 12047                           ;pwm_asl.c: 294: PORTCbits.RC2=1;
 12048  002F2C  8482               	bsf	3970,2,c	;volatile
 12049                           
 12050                           ;pwm_asl.c: 295: break;
 12051  002F2E  0012               	return	
 12052  002F30                     
 12053                           ;pwm_asl.c: 297: if( RT < (SP -HS)) {
 12054  002F30  C0F7  F027         	movff	_RT,i2___flge@ff1
 12055  002F34  C0F8  F028         	movff	_RT+1,i2___flge@ff1+1
 12056  002F38  C0F9  F029         	movff	_RT+2,i2___flge@ff1+2
 12057  002F3C  C0FA  F02A         	movff	_RT+3,i2___flge@ff1+3
 12058  002F40  C0FB  F017         	movff	_SP,i2___fladd@a
 12059  002F44  C0FC  F018         	movff	_SP+1,i2___fladd@a+1
 12060  002F48  C0FD  F019         	movff	_SP+2,i2___fladd@a+2
 12061  002F4C  C0FE  F01A         	movff	_SP+3,i2___fladd@a+3
 12062  002F50  C04B  F001         	movff	_HS,i2___xxtofl@val
 12063  002F54  C04C  F002         	movff	_HS+1,i2___xxtofl@val+1
 12064  002F58  6A03               	clrf	i2___xxtofl@val+2,c
 12065  002F5A  6A04               	clrf	i2___xxtofl@val+3,c
 12066  002F5C  0E00               	movlw	0
 12067  002F5E  EC12  F013         	call	i2___xxtofl
 12068  002F62  C001  F00F         	movff	?i2___xxtofl,i2___flneg@f1
 12069  002F66  C002  F010         	movff	?i2___xxtofl+1,i2___flneg@f1+1
 12070  002F6A  C003  F011         	movff	?i2___xxtofl+2,i2___flneg@f1+2
 12071  002F6E  C004  F012         	movff	?i2___xxtofl+3,i2___flneg@f1+3
 12072  002F72  EC01  F01B         	call	i2___flneg	;wreg free
 12073  002F76  C00F  F013         	movff	?i2___flneg,i2___fladd@b
 12074  002F7A  C010  F014         	movff	?i2___flneg+1,i2___fladd@b+1
 12075  002F7E  C011  F015         	movff	?i2___flneg+2,i2___fladd@b+2
 12076  002F82  C012  F016         	movff	?i2___flneg+3,i2___fladd@b+3
 12077  002F86  ECCD  F00B         	call	i2___fladd	;wreg free
 12078  002F8A  C013  F02B         	movff	?i2___fladd,i2___flge@ff2
 12079  002F8E  C014  F02C         	movff	?i2___fladd+1,i2___flge@ff2+1
 12080  002F92  C015  F02D         	movff	?i2___fladd+2,i2___flge@ff2+2
 12081  002F96  C016  F02E         	movff	?i2___fladd+3,i2___flge@ff2+3
 12082  002F9A  EC17  F016         	call	i2___flge	;wreg free
 12083  002F9E  B0D8               	btfsc	status,0,c
 12084  002FA0  0012               	return	
 12085                           
 12086                           ;pwm_asl.c: 298: PORTCbits.RC5=!PORTCbits.RC5;
 12087  002FA2  BA82               	btfsc	3970,5,c	;volatile
 12088  002FA4  D003               	goto	i2u563_40
 12089  002FA6  6A33               	clrf	??_Timer3_isr& (0+255),c
 12090  002FA8  2A33               	incf	??_Timer3_isr& (0+255),f,c
 12091  002FAA  D001               	goto	i2u564_48
 12092  002FAC                     i2u563_40:
 12093  002FAC  6A33               	clrf	??_Timer3_isr& (0+255),c
 12094  002FAE                     i2u564_48:
 12095  002FAE  3A33               	swapf	??_Timer3_isr,f,c
 12096  002FB0  4633               	rlncf	??_Timer3_isr,f,c
 12097  002FB2  5082               	movf	3970,w,c	;volatile
 12098  002FB4  1833               	xorwf	??_Timer3_isr,w,c
 12099  002FB6  0BDF               	andlw	-33
 12100  002FB8  1833               	xorwf	??_Timer3_isr,w,c
 12101  002FBA  6E82               	movwf	3970,c	;volatile
 12102                           
 12103                           ;pwm_asl.c: 305: }
 12104                           
 12105                           ;pwm_asl.c: 304: break;
 12106                           
 12107                           ;pwm_asl.c: 302: default:
 12108                           
 12109                           ;pwm_asl.c: 299: }
 12110                           ;pwm_asl.c: 301: break;
 12111  002FBC  0012               	return	
 12112  002FBE                     i2l175:
 12113  002FBE  C049  F033         	movff	_selectedMode,??_Timer3_isr
 12114  002FC2  C04A  F034         	movff	_selectedMode+1,??_Timer3_isr+1
 12115                           
 12116                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12117                           ; Switch size 1, requested type "space"
 12118                           ; Number of cases is 1, Range of values is 0 to 0
 12119                           ; switch strategies available:
 12120                           ; Name         Instructions Cycles
 12121                           ; simple_byte            4     3 (average)
 12122                           ;	Chosen strategy is simple_byte
 12123  002FC6  5034               	movf	??_Timer3_isr+1,w,c
 12124  002FC8  0A00               	xorlw	0	; case 0
 12125  002FCA  A4D8               	btfss	status,2,c
 12126  002FCC  0012               	return	
 12127                           
 12128                           ; Switch size 1, requested type "space"
 12129                           ; Number of cases is 4, Range of values is 0 to 3
 12130                           ; switch strategies available:
 12131                           ; Name         Instructions Cycles
 12132                           ; simple_byte           13     7 (average)
 12133                           ;	Chosen strategy is simple_byte
 12134  002FCE  5033               	movf	??_Timer3_isr,w,c
 12135  002FD0  0A00               	xorlw	0	; case 0
 12136  002FD2  B4D8               	btfsc	status,2,c
 12137  002FD4  D7A6               	goto	i2l176
 12138  002FD6  0A01               	xorlw	1	; case 1
 12139  002FD8  B4D8               	btfsc	status,2,c
 12140  002FDA  D7A7               	goto	i2l179
 12141  002FDC  0A03               	xorlw	3	; case 2
 12142  002FDE  B4D8               	btfsc	status,2,c
 12143  002FE0  D7A2               	goto	i2l178
 12144  002FE2  0A01               	xorlw	1	; case 3
 12145  002FE4  A4D8               	btfss	status,2,c
 12146  002FE6  0012               	return	
 12147  002FE8  D7A3               	goto	i2l180
 12148  002FEA                     __end_of_Timer3_isr:
 12149                           	opt stack 0
 12150                           pclatu	equ	0xFFB
 12151                           pclath	equ	0xFFA
 12152                           tblptru	equ	0xFF8
 12153                           tblptrh	equ	0xFF7
 12154                           tblptrl	equ	0xFF6
 12155                           tablat	equ	0xFF5
 12156                           prodh	equ	0xFF4
 12157                           prodl	equ	0xFF3
 12158                           intcon	equ	0xFF2
 12159                           intcon3	equ	0xFF0
 12160                           indf0	equ	0xFEF
 12161                           postinc0	equ	0xFEE
 12162                           fsr0h	equ	0xFEA
 12163                           fsr0l	equ	0xFE9
 12164                           wreg	equ	0xFE8
 12165                           postdec1	equ	0xFE5
 12166                           fsr1h	equ	0xFE2
 12167                           fsr1l	equ	0xFE1
 12168                           indf2	equ	0xFDF
 12169                           postinc2	equ	0xFDE
 12170                           postdec2	equ	0xFDD
 12171                           fsr2h	equ	0xFDA
 12172                           fsr2l	equ	0xFD9
 12173                           status	equ	0xFD8
 12174                           
 12175 ;; *************** function i2___xxtofl *****************
 12176 ;; Defined at:
 12177 ;;		line 10 in file "/opt/microchip/xc8/v1.45/sources/common/xxtofl.c"
 12178 ;; Parameters:    Size  Location     Type
 12179 ;;  sign            1    wreg     unsigned char 
 12180 ;;  val             4    0[COMRAM] long 
 12181 ;; Auto vars:     Size  Location     Type
 12182 ;;  sign            1    8[COMRAM] unsigned char 
 12183 ;;  __xxtofl        4   10[COMRAM] unsigned long 
 12184 ;;  __xxtofl        1    9[COMRAM] unsigned char 
 12185 ;; Return value:  Size  Location     Type
 12186 ;;                  4    0[COMRAM] unsigned char 
 12187 ;; Registers used:
 12188 ;;		wreg, status,2, status,0
 12189 ;; Tracked objects:
 12190 ;;		On entry : 0/0
 12191 ;;		On exit  : 0/0
 12192 ;;		Unchanged: 0/0
 12193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12194 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12195 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12196 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12197 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12198 ;;Total ram usage:       14 bytes
 12199 ;; Hardware stack levels used:    1
 12200 ;; This function calls:
 12201 ;;		Nothing
 12202 ;; This function is called by:
 12203 ;;		_Timer3_isr
 12204 ;; This function uses a non-reentrant model
 12205 ;;
 12206                           
 12207                           	psect	text46
 12208  002624                     __ptext46:
 12209                           	opt stack 0
 12210  002624                     i2___xxtofl:
 12211                           	opt stack 21
 12212                           
 12213                           ;incstack = 0
 12214                           ;i2___xxtofl@sign stored from wreg
 12215  002624  6E09               	movwf	i2___xxtofl@sign,c
 12216  002626  5009               	movf	i2___xxtofl@sign,w,c
 12217  002628  A4D8               	btfss	status,2,c
 12218  00262A  AE04               	btfss	i2___xxtofl@val+3,7,c
 12219  00262C  D01A               	goto	i2l1084
 12220  00262E  C001  F005         	movff	i2___xxtofl@val,??i2___xxtofl
 12221  002632  C002  F006         	movff	i2___xxtofl@val+1,??i2___xxtofl+1
 12222  002636  C003  F007         	movff	i2___xxtofl@val+2,??i2___xxtofl+2
 12223  00263A  C004  F008         	movff	i2___xxtofl@val+3,??i2___xxtofl+3
 12224  00263E  1E05               	comf	??i2___xxtofl,f,c
 12225  002640  1E06               	comf	??i2___xxtofl+1,f,c
 12226  002642  1E07               	comf	??i2___xxtofl+2,f,c
 12227  002644  1E08               	comf	??i2___xxtofl+3,f,c
 12228  002646  2A05               	incf	??i2___xxtofl,f,c
 12229  002648  0E00               	movlw	0
 12230  00264A  2206               	addwfc	??i2___xxtofl+1,f,c
 12231  00264C  2207               	addwfc	??i2___xxtofl+2,f,c
 12232  00264E  2208               	addwfc	??i2___xxtofl+3,f,c
 12233  002650  C005  F00B         	movff	??i2___xxtofl,i2___xxtofl@arg
 12234  002654  C006  F00C         	movff	??i2___xxtofl+1,i2___xxtofl@arg+1
 12235  002658  C007  F00D         	movff	??i2___xxtofl+2,i2___xxtofl@arg+2
 12236  00265C  C008  F00E         	movff	??i2___xxtofl+3,i2___xxtofl@arg+3
 12237  002660  D008               	goto	i2l1085
 12238  002662                     i2l1084:
 12239  002662  C001  F00B         	movff	i2___xxtofl@val,i2___xxtofl@arg
 12240  002666  C002  F00C         	movff	i2___xxtofl@val+1,i2___xxtofl@arg+1
 12241  00266A  C003  F00D         	movff	i2___xxtofl@val+2,i2___xxtofl@arg+2
 12242  00266E  C004  F00E         	movff	i2___xxtofl@val+3,i2___xxtofl@arg+3
 12243  002672                     i2l1085:
 12244  002672  5001               	movf	i2___xxtofl@val,w,c
 12245  002674  1002               	iorwf	i2___xxtofl@val+1,w,c
 12246  002676  1003               	iorwf	i2___xxtofl@val+2,w,c
 12247  002678  1004               	iorwf	i2___xxtofl@val+3,w,c
 12248  00267A  A4D8               	btfss	status,2,c
 12249  00267C  D009               	goto	i2l1086
 12250  00267E  0E00               	movlw	0
 12251  002680  6E01               	movwf	?i2___xxtofl,c
 12252  002682  0E00               	movlw	0
 12253  002684  6E02               	movwf	?i2___xxtofl+1,c
 12254  002686  0E00               	movlw	0
 12255  002688  6E03               	movwf	?i2___xxtofl+2,c
 12256  00268A  0E00               	movlw	0
 12257  00268C  6E04               	movwf	?i2___xxtofl+3,c
 12258  00268E  0012               	return	
 12259  002690                     i2l1086:
 12260  002690  0E96               	movlw	150
 12261  002692  6E0A               	movwf	i2___xxtofl@exp,c
 12262  002694  D006               	goto	i2l1088
 12263  002696  2A0A               	incf	i2___xxtofl@exp,f,c
 12264  002698  90D8               	bcf	status,0,c
 12265  00269A  320E               	rrcf	i2___xxtofl@arg+3,f,c
 12266  00269C  320D               	rrcf	i2___xxtofl@arg+2,f,c
 12267  00269E  320C               	rrcf	i2___xxtofl@arg+1,f,c
 12268  0026A0  320B               	rrcf	i2___xxtofl@arg,f,c
 12269  0026A2                     i2l1088:
 12270  0026A2  0E00               	movlw	0
 12271  0026A4  140B               	andwf	i2___xxtofl@arg,w,c
 12272  0026A6  6E05               	movwf	??i2___xxtofl& (0+255),c
 12273  0026A8  0E00               	movlw	0
 12274  0026AA  140C               	andwf	i2___xxtofl@arg+1,w,c
 12275  0026AC  6E06               	movwf	(??i2___xxtofl+1)& (0+255),c
 12276  0026AE  0E00               	movlw	0
 12277  0026B0  140D               	andwf	i2___xxtofl@arg+2,w,c
 12278  0026B2  6E07               	movwf	(??i2___xxtofl+2)& (0+255),c
 12279  0026B4  0EFE               	movlw	254
 12280  0026B6  140E               	andwf	i2___xxtofl@arg+3,w,c
 12281  0026B8  6E08               	movwf	(??i2___xxtofl+3)& (0+255),c
 12282  0026BA  5005               	movf	??i2___xxtofl,w,c
 12283  0026BC  1006               	iorwf	??i2___xxtofl+1,w,c
 12284  0026BE  1007               	iorwf	??i2___xxtofl+2,w,c
 12285  0026C0  1008               	iorwf	??i2___xxtofl+3,w,c
 12286  0026C2  B4D8               	btfsc	status,2,c
 12287  0026C4  D00D               	goto	i2l1091
 12288  0026C6  D7E7               	goto	i2l1089
 12289  0026C8  2A0A               	incf	i2___xxtofl@exp,f,c
 12290  0026CA  0E01               	movlw	1
 12291  0026CC  260B               	addwf	i2___xxtofl@arg,f,c
 12292  0026CE  0E00               	movlw	0
 12293  0026D0  220C               	addwfc	i2___xxtofl@arg+1,f,c
 12294  0026D2  220D               	addwfc	i2___xxtofl@arg+2,f,c
 12295  0026D4  220E               	addwfc	i2___xxtofl@arg+3,f,c
 12296  0026D6  90D8               	bcf	status,0,c
 12297  0026D8  320E               	rrcf	i2___xxtofl@arg+3,f,c
 12298  0026DA  320D               	rrcf	i2___xxtofl@arg+2,f,c
 12299  0026DC  320C               	rrcf	i2___xxtofl@arg+1,f,c
 12300  0026DE  320B               	rrcf	i2___xxtofl@arg,f,c
 12301  0026E0                     i2l1091:
 12302  0026E0  0E00               	movlw	0
 12303  0026E2  140B               	andwf	i2___xxtofl@arg,w,c
 12304  0026E4  6E05               	movwf	??i2___xxtofl& (0+255),c
 12305  0026E6  0E00               	movlw	0
 12306  0026E8  140C               	andwf	i2___xxtofl@arg+1,w,c
 12307  0026EA  6E06               	movwf	(??i2___xxtofl+1)& (0+255),c
 12308  0026EC  0E00               	movlw	0
 12309  0026EE  140D               	andwf	i2___xxtofl@arg+2,w,c
 12310  0026F0  6E07               	movwf	(??i2___xxtofl+2)& (0+255),c
 12311  0026F2  0EFF               	movlw	255
 12312  0026F4  140E               	andwf	i2___xxtofl@arg+3,w,c
 12313  0026F6  6E08               	movwf	(??i2___xxtofl+3)& (0+255),c
 12314  0026F8  5005               	movf	??i2___xxtofl,w,c
 12315  0026FA  1006               	iorwf	??i2___xxtofl+1,w,c
 12316  0026FC  1007               	iorwf	??i2___xxtofl+2,w,c
 12317  0026FE  1008               	iorwf	??i2___xxtofl+3,w,c
 12318  002700  B4D8               	btfsc	status,2,c
 12319  002702  D007               	goto	i2l1094
 12320  002704  D7E1               	goto	i2l1092
 12321  002706  060A               	decf	i2___xxtofl@exp,f,c
 12322  002708  90D8               	bcf	status,0,c
 12323  00270A  360B               	rlcf	i2___xxtofl@arg,f,c
 12324  00270C  360C               	rlcf	i2___xxtofl@arg+1,f,c
 12325  00270E  360D               	rlcf	i2___xxtofl@arg+2,f,c
 12326  002710  360E               	rlcf	i2___xxtofl@arg+3,f,c
 12327  002712                     i2l1094:
 12328  002712  BE0D               	btfsc	i2___xxtofl@arg+2,7,c
 12329  002714  D003               	goto	i2u558_40
 12330  002716  0E02               	movlw	2
 12331  002718  600A               	cpfslt	i2___xxtofl@exp,c
 12332  00271A  D7F5               	goto	i2l1095
 12333  00271C                     i2u558_40:
 12334  00271C  B00A               	btfsc	i2___xxtofl@exp,0,c
 12335  00271E  D008               	goto	i2l1099
 12336  002720  0EFF               	movlw	255
 12337  002722  160B               	andwf	i2___xxtofl@arg,f,c
 12338  002724  0EFF               	movlw	255
 12339  002726  160C               	andwf	i2___xxtofl@arg+1,f,c
 12340  002728  0E7F               	movlw	127
 12341  00272A  160D               	andwf	i2___xxtofl@arg+2,f,c
 12342  00272C  0EFF               	movlw	255
 12343  00272E  160E               	andwf	i2___xxtofl@arg+3,f,c
 12344  002730                     i2l1099:
 12345  002730  90D8               	bcf	status,0,c
 12346  002732  320A               	rrcf	i2___xxtofl@exp,f,c
 12347  002734  C00A  F005         	movff	i2___xxtofl@exp,??i2___xxtofl
 12348  002738  6A06               	clrf	(??i2___xxtofl+1)& (0+255),c
 12349  00273A  6A07               	clrf	(??i2___xxtofl+2)& (0+255),c
 12350  00273C  6A08               	clrf	(??i2___xxtofl+3)& (0+255),c
 12351  00273E  C005  F008         	movff	??i2___xxtofl,??i2___xxtofl+3
 12352  002742  6A07               	clrf	??i2___xxtofl+2,c
 12353  002744  6A06               	clrf	??i2___xxtofl+1,c
 12354  002746  6A05               	clrf	??i2___xxtofl,c
 12355  002748  5005               	movf	??i2___xxtofl,w,c
 12356  00274A  120B               	iorwf	i2___xxtofl@arg,f,c
 12357  00274C  5006               	movf	??i2___xxtofl+1,w,c
 12358  00274E  120C               	iorwf	i2___xxtofl@arg+1,f,c
 12359  002750  5007               	movf	??i2___xxtofl+2,w,c
 12360  002752  120D               	iorwf	i2___xxtofl@arg+2,f,c
 12361  002754  5008               	movf	??i2___xxtofl+3,w,c
 12362  002756  120E               	iorwf	i2___xxtofl@arg+3,f,c
 12363  002758  5009               	movf	i2___xxtofl@sign,w,c
 12364  00275A  A4D8               	btfss	status,2,c
 12365  00275C  AE04               	btfss	i2___xxtofl@val+3,7,c
 12366  00275E  D001               	goto	i2l1100
 12367  002760  8E0E               	bsf	i2___xxtofl@arg+3,7,c
 12368  002762                     i2l1100:
 12369  002762  C00B  F001         	movff	i2___xxtofl@arg,?i2___xxtofl
 12370  002766  C00C  F002         	movff	i2___xxtofl@arg+1,?i2___xxtofl+1
 12371  00276A  C00D  F003         	movff	i2___xxtofl@arg+2,?i2___xxtofl+2
 12372  00276E  C00E  F004         	movff	i2___xxtofl@arg+3,?i2___xxtofl+3
 12373  002772  0012               	return	
 12374  002774                     __end_ofi2___xxtofl:
 12375                           	opt stack 0
 12376                           pclatu	equ	0xFFB
 12377                           pclath	equ	0xFFA
 12378                           tblptru	equ	0xFF8
 12379                           tblptrh	equ	0xFF7
 12380                           tblptrl	equ	0xFF6
 12381                           tablat	equ	0xFF5
 12382                           prodh	equ	0xFF4
 12383                           prodl	equ	0xFF3
 12384                           intcon	equ	0xFF2
 12385                           intcon3	equ	0xFF0
 12386                           indf0	equ	0xFEF
 12387                           postinc0	equ	0xFEE
 12388                           fsr0h	equ	0xFEA
 12389                           fsr0l	equ	0xFE9
 12390                           wreg	equ	0xFE8
 12391                           postdec1	equ	0xFE5
 12392                           fsr1h	equ	0xFE2
 12393                           fsr1l	equ	0xFE1
 12394                           indf2	equ	0xFDF
 12395                           postinc2	equ	0xFDE
 12396                           postdec2	equ	0xFDD
 12397                           fsr2h	equ	0xFDA
 12398                           fsr2l	equ	0xFD9
 12399                           status	equ	0xFD8
 12400                           
 12401 ;; *************** function i2___flneg *****************
 12402 ;; Defined at:
 12403 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/flneg.c"
 12404 ;; Parameters:    Size  Location     Type
 12405 ;;  f1              4   14[COMRAM] unsigned char 
 12406 ;; Auto vars:     Size  Location     Type
 12407 ;;		None
 12408 ;; Return value:  Size  Location     Type
 12409 ;;                  4   14[COMRAM] unsigned char 
 12410 ;; Registers used:
 12411 ;;		wreg, status,2, status,0
 12412 ;; Tracked objects:
 12413 ;;		On entry : 0/0
 12414 ;;		On exit  : 0/0
 12415 ;;		Unchanged: 0/0
 12416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12417 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12420 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12421 ;;Total ram usage:        4 bytes
 12422 ;; Hardware stack levels used:    1
 12423 ;; This function calls:
 12424 ;;		Nothing
 12425 ;; This function is called by:
 12426 ;;		_Timer3_isr
 12427 ;; This function uses a non-reentrant model
 12428 ;;
 12429                           
 12430                           	psect	text47
 12431  003602                     __ptext47:
 12432                           	opt stack 0
 12433  003602                     i2___flneg:
 12434                           	opt stack 21
 12435                           
 12436                           ;incstack = 0
 12437  003602  500F               	movf	i2___flneg@f1,w,c
 12438  003604  1010               	iorwf	i2___flneg@f1+1,w,c
 12439  003606  1011               	iorwf	i2___flneg@f1+2,w,c
 12440  003608  1012               	iorwf	i2___flneg@f1+3,w,c
 12441  00360A  B4D8               	btfsc	status,2,c
 12442  00360C  D008               	goto	i2l717
 12443  00360E  0E00               	movlw	0
 12444  003610  1A0F               	xorwf	i2___flneg@f1,f,c
 12445  003612  0E00               	movlw	0
 12446  003614  1A10               	xorwf	i2___flneg@f1+1,f,c
 12447  003616  0E00               	movlw	0
 12448  003618  1A11               	xorwf	i2___flneg@f1+2,f,c
 12449  00361A  0E80               	movlw	128
 12450  00361C  1A12               	xorwf	i2___flneg@f1+3,f,c
 12451  00361E                     i2l717:
 12452  00361E  C00F  F00F         	movff	i2___flneg@f1,?i2___flneg
 12453  003622  C010  F010         	movff	i2___flneg@f1+1,?i2___flneg+1
 12454  003626  C011  F011         	movff	i2___flneg@f1+2,?i2___flneg+2
 12455  00362A  C012  F012         	movff	i2___flneg@f1+3,?i2___flneg+3
 12456  00362E  0012               	return	
 12457  003630                     __end_ofi2___flneg:
 12458                           	opt stack 0
 12459                           pclatu	equ	0xFFB
 12460                           pclath	equ	0xFFA
 12461                           tblptru	equ	0xFF8
 12462                           tblptrh	equ	0xFF7
 12463                           tblptrl	equ	0xFF6
 12464                           tablat	equ	0xFF5
 12465                           prodh	equ	0xFF4
 12466                           prodl	equ	0xFF3
 12467                           intcon	equ	0xFF2
 12468                           intcon3	equ	0xFF0
 12469                           indf0	equ	0xFEF
 12470                           postinc0	equ	0xFEE
 12471                           fsr0h	equ	0xFEA
 12472                           fsr0l	equ	0xFE9
 12473                           wreg	equ	0xFE8
 12474                           postdec1	equ	0xFE5
 12475                           fsr1h	equ	0xFE2
 12476                           fsr1l	equ	0xFE1
 12477                           indf2	equ	0xFDF
 12478                           postinc2	equ	0xFDE
 12479                           postdec2	equ	0xFDD
 12480                           fsr2h	equ	0xFDA
 12481                           fsr2l	equ	0xFD9
 12482                           status	equ	0xFD8
 12483                           
 12484 ;; *************** function i2___flge *****************
 12485 ;; Defined at:
 12486 ;;		line 4 in file "/opt/microchip/xc8/v1.45/sources/common/flge.c"
 12487 ;; Parameters:    Size  Location     Type
 12488 ;;  ff1             4   38[COMRAM] unsigned char 
 12489 ;;  ff2             4   42[COMRAM] unsigned char 
 12490 ;; Auto vars:     Size  Location     Type
 12491 ;;		None
 12492 ;; Return value:  Size  Location     Type
 12493 ;;		None               void
 12494 ;; Registers used:
 12495 ;;		wreg, status,2, status,0
 12496 ;; Tracked objects:
 12497 ;;		On entry : 0/0
 12498 ;;		On exit  : 0/0
 12499 ;;		Unchanged: 0/0
 12500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12501 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12503 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12504 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12505 ;;Total ram usage:       12 bytes
 12506 ;; Hardware stack levels used:    1
 12507 ;; This function calls:
 12508 ;;		Nothing
 12509 ;; This function is called by:
 12510 ;;		_Timer3_isr
 12511 ;; This function uses a non-reentrant model
 12512 ;;
 12513                           
 12514                           	psect	text48
 12515  002C2E                     __ptext48:
 12516                           	opt stack 0
 12517  002C2E                     i2___flge:
 12518                           	opt stack 21
 12519                           
 12520                           ;incstack = 0
 12521  002C2E  0E00               	movlw	0
 12522  002C30  1427               	andwf	i2___flge@ff1,w,c
 12523  002C32  6E2F               	movwf	??i2___flge& (0+255),c
 12524  002C34  0E00               	movlw	0
 12525  002C36  1428               	andwf	i2___flge@ff1+1,w,c
 12526  002C38  6E30               	movwf	(??i2___flge+1)& (0+255),c
 12527  002C3A  0E80               	movlw	128
 12528  002C3C  1429               	andwf	i2___flge@ff1+2,w,c
 12529  002C3E  6E31               	movwf	(??i2___flge+2)& (0+255),c
 12530  002C40  0E7F               	movlw	127
 12531  002C42  142A               	andwf	i2___flge@ff1+3,w,c
 12532  002C44  6E32               	movwf	(??i2___flge+3)& (0+255),c
 12533  002C46  502F               	movf	??i2___flge,w,c
 12534  002C48  1030               	iorwf	??i2___flge+1,w,c
 12535  002C4A  1031               	iorwf	??i2___flge+2,w,c
 12536  002C4C  1032               	iorwf	??i2___flge+3,w,c
 12537  002C4E  A4D8               	btfss	status,2,c
 12538  002C50  D008               	goto	i2l710
 12539  002C52  0E00               	movlw	0
 12540  002C54  6E27               	movwf	i2___flge@ff1,c
 12541  002C56  0E00               	movlw	0
 12542  002C58  6E28               	movwf	i2___flge@ff1+1,c
 12543  002C5A  0E00               	movlw	0
 12544  002C5C  6E29               	movwf	i2___flge@ff1+2,c
 12545  002C5E  0E00               	movlw	0
 12546  002C60  6E2A               	movwf	i2___flge@ff1+3,c
 12547  002C62                     i2l710:
 12548  002C62  0E00               	movlw	0
 12549  002C64  142B               	andwf	i2___flge@ff2,w,c
 12550  002C66  6E2F               	movwf	??i2___flge& (0+255),c
 12551  002C68  0E00               	movlw	0
 12552  002C6A  142C               	andwf	i2___flge@ff2+1,w,c
 12553  002C6C  6E30               	movwf	(??i2___flge+1)& (0+255),c
 12554  002C6E  0E80               	movlw	128
 12555  002C70  142D               	andwf	i2___flge@ff2+2,w,c
 12556  002C72  6E31               	movwf	(??i2___flge+2)& (0+255),c
 12557  002C74  0E7F               	movlw	127
 12558  002C76  142E               	andwf	i2___flge@ff2+3,w,c
 12559  002C78  6E32               	movwf	(??i2___flge+3)& (0+255),c
 12560  002C7A  502F               	movf	??i2___flge,w,c
 12561  002C7C  1030               	iorwf	??i2___flge+1,w,c
 12562  002C7E  1031               	iorwf	??i2___flge+2,w,c
 12563  002C80  1032               	iorwf	??i2___flge+3,w,c
 12564  002C82  A4D8               	btfss	status,2,c
 12565  002C84  D008               	goto	i2l711
 12566  002C86  0E00               	movlw	0
 12567  002C88  6E2B               	movwf	i2___flge@ff2,c
 12568  002C8A  0E00               	movlw	0
 12569  002C8C  6E2C               	movwf	i2___flge@ff2+1,c
 12570  002C8E  0E00               	movlw	0
 12571  002C90  6E2D               	movwf	i2___flge@ff2+2,c
 12572  002C92  0E00               	movlw	0
 12573  002C94  6E2E               	movwf	i2___flge@ff2+3,c
 12574  002C96                     i2l711:
 12575  002C96  AE2A               	btfss	i2___flge@ff1+3,7,c
 12576  002C98  D01D               	goto	i2l712
 12577  002C9A  C027  F02F         	movff	i2___flge@ff1,??i2___flge
 12578  002C9E  C028  F030         	movff	i2___flge@ff1+1,??i2___flge+1
 12579  002CA2  C029  F031         	movff	i2___flge@ff1+2,??i2___flge+2
 12580  002CA6  C02A  F032         	movff	i2___flge@ff1+3,??i2___flge+3
 12581  002CAA  1E2F               	comf	??i2___flge,f,c
 12582  002CAC  1E30               	comf	??i2___flge+1,f,c
 12583  002CAE  1E31               	comf	??i2___flge+2,f,c
 12584  002CB0  1E32               	comf	??i2___flge+3,f,c
 12585  002CB2  2A2F               	incf	??i2___flge,f,c
 12586  002CB4  0E00               	movlw	0
 12587  002CB6  2230               	addwfc	??i2___flge+1,f,c
 12588  002CB8  2231               	addwfc	??i2___flge+2,f,c
 12589  002CBA  2232               	addwfc	??i2___flge+3,f,c
 12590  002CBC  0E00               	movlw	0
 12591  002CBE  242F               	addwf	??i2___flge,w,c
 12592  002CC0  6E27               	movwf	i2___flge@ff1,c
 12593  002CC2  0E00               	movlw	0
 12594  002CC4  2030               	addwfc	??i2___flge+1,w,c
 12595  002CC6  6E28               	movwf	i2___flge@ff1+1,c
 12596  002CC8  0E00               	movlw	0
 12597  002CCA  2031               	addwfc	??i2___flge+2,w,c
 12598  002CCC  6E29               	movwf	i2___flge@ff1+2,c
 12599  002CCE  0E80               	movlw	128
 12600  002CD0  2032               	addwfc	??i2___flge+3,w,c
 12601  002CD2  6E2A               	movwf	i2___flge@ff1+3,c
 12602  002CD4                     i2l712:
 12603  002CD4  AE2E               	btfss	i2___flge@ff2+3,7,c
 12604  002CD6  D01D               	goto	i2l713
 12605  002CD8  C02B  F02F         	movff	i2___flge@ff2,??i2___flge
 12606  002CDC  C02C  F030         	movff	i2___flge@ff2+1,??i2___flge+1
 12607  002CE0  C02D  F031         	movff	i2___flge@ff2+2,??i2___flge+2
 12608  002CE4  C02E  F032         	movff	i2___flge@ff2+3,??i2___flge+3
 12609  002CE8  1E2F               	comf	??i2___flge,f,c
 12610  002CEA  1E30               	comf	??i2___flge+1,f,c
 12611  002CEC  1E31               	comf	??i2___flge+2,f,c
 12612  002CEE  1E32               	comf	??i2___flge+3,f,c
 12613  002CF0  2A2F               	incf	??i2___flge,f,c
 12614  002CF2  0E00               	movlw	0
 12615  002CF4  2230               	addwfc	??i2___flge+1,f,c
 12616  002CF6  2231               	addwfc	??i2___flge+2,f,c
 12617  002CF8  2232               	addwfc	??i2___flge+3,f,c
 12618  002CFA  0E00               	movlw	0
 12619  002CFC  242F               	addwf	??i2___flge,w,c
 12620  002CFE  6E2B               	movwf	i2___flge@ff2,c
 12621  002D00  0E00               	movlw	0
 12622  002D02  2030               	addwfc	??i2___flge+1,w,c
 12623  002D04  6E2C               	movwf	i2___flge@ff2+1,c
 12624  002D06  0E00               	movlw	0
 12625  002D08  2031               	addwfc	??i2___flge+2,w,c
 12626  002D0A  6E2D               	movwf	i2___flge@ff2+2,c
 12627  002D0C  0E80               	movlw	128
 12628  002D0E  2032               	addwfc	??i2___flge+3,w,c
 12629  002D10  6E2E               	movwf	i2___flge@ff2+3,c
 12630  002D12                     i2l713:
 12631  002D12  0E00               	movlw	0
 12632  002D14  1A27               	xorwf	i2___flge@ff1,f,c
 12633  002D16  0E00               	movlw	0
 12634  002D18  1A28               	xorwf	i2___flge@ff1+1,f,c
 12635  002D1A  0E00               	movlw	0
 12636  002D1C  1A29               	xorwf	i2___flge@ff1+2,f,c
 12637  002D1E  0E80               	movlw	128
 12638  002D20  1A2A               	xorwf	i2___flge@ff1+3,f,c
 12639  002D22  0E00               	movlw	0
 12640  002D24  1A2B               	xorwf	i2___flge@ff2,f,c
 12641  002D26  0E00               	movlw	0
 12642  002D28  1A2C               	xorwf	i2___flge@ff2+1,f,c
 12643  002D2A  0E00               	movlw	0
 12644  002D2C  1A2D               	xorwf	i2___flge@ff2+2,f,c
 12645  002D2E  0E80               	movlw	128
 12646  002D30  1A2E               	xorwf	i2___flge@ff2+3,f,c
 12647  002D32  502B               	movf	i2___flge@ff2,w,c
 12648  002D34  5C27               	subwf	i2___flge@ff1,w,c
 12649  002D36  502C               	movf	i2___flge@ff2+1,w,c
 12650  002D38  5828               	subwfb	i2___flge@ff1+1,w,c
 12651  002D3A  502D               	movf	i2___flge@ff2+2,w,c
 12652  002D3C  5829               	subwfb	i2___flge@ff1+2,w,c
 12653  002D3E  502E               	movf	i2___flge@ff2+3,w,c
 12654  002D40  582A               	subwfb	i2___flge@ff1+3,w,c
 12655  002D42  B0D8               	btfsc	status,0,c
 12656  002D44  D002               	goto	i2l3222
 12657  002D46  90D8               	bcf	status,0,c
 12658  002D48  0012               	return	
 12659  002D4A                     i2l3222:
 12660  002D4A  80D8               	bsf	status,0,c
 12661  002D4C  0012               	return	
 12662  002D4E                     __end_ofi2___flge:
 12663                           	opt stack 0
 12664                           pclatu	equ	0xFFB
 12665                           pclath	equ	0xFFA
 12666                           tblptru	equ	0xFF8
 12667                           tblptrh	equ	0xFF7
 12668                           tblptrl	equ	0xFF6
 12669                           tablat	equ	0xFF5
 12670                           prodh	equ	0xFF4
 12671                           prodl	equ	0xFF3
 12672                           intcon	equ	0xFF2
 12673                           intcon3	equ	0xFF0
 12674                           indf0	equ	0xFEF
 12675                           postinc0	equ	0xFEE
 12676                           fsr0h	equ	0xFEA
 12677                           fsr0l	equ	0xFE9
 12678                           wreg	equ	0xFE8
 12679                           postdec1	equ	0xFE5
 12680                           fsr1h	equ	0xFE2
 12681                           fsr1l	equ	0xFE1
 12682                           indf2	equ	0xFDF
 12683                           postinc2	equ	0xFDE
 12684                           postdec2	equ	0xFDD
 12685                           fsr2h	equ	0xFDA
 12686                           fsr2l	equ	0xFD9
 12687                           status	equ	0xFD8
 12688                           
 12689 ;; *************** function i2___fladd *****************
 12690 ;; Defined at:
 12691 ;;		line 10 in file "/opt/microchip/xc8/v1.45/sources/common/sprcadd.c"
 12692 ;; Parameters:    Size  Location     Type
 12693 ;;  b               4   18[COMRAM] unsigned char 
 12694 ;;  a               4   22[COMRAM] unsigned char 
 12695 ;; Auto vars:     Size  Location     Type
 12696 ;;  __fladd         1   37[COMRAM] unsigned char 
 12697 ;;  __fladd         1   36[COMRAM] unsigned char 
 12698 ;;  __fladd         1   35[COMRAM] unsigned char 
 12699 ;;  __fladd         1   34[COMRAM] unsigned char 
 12700 ;; Return value:  Size  Location     Type
 12701 ;;                  4   18[COMRAM] unsigned char 
 12702 ;; Registers used:
 12703 ;;		wreg, status,2, status,0
 12704 ;; Tracked objects:
 12705 ;;		On entry : 0/0
 12706 ;;		On exit  : 0/0
 12707 ;;		Unchanged: 0/0
 12708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12709 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12710 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12711 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12712 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12713 ;;Total ram usage:       20 bytes
 12714 ;; Hardware stack levels used:    1
 12715 ;; This function calls:
 12716 ;;		Nothing
 12717 ;; This function is called by:
 12718 ;;		_Timer3_isr
 12719 ;; This function uses a non-reentrant model
 12720 ;;
 12721                           
 12722                           	psect	text49
 12723  00179A                     __ptext49:
 12724                           	opt stack 0
 12725  00179A                     i2___fladd:
 12726                           	opt stack 21
 12727                           
 12728                           ;incstack = 0
 12729  00179A  5016               	movf	i2___fladd@b+3,w,c
 12730  00179C  0B80               	andlw	128
 12731  00179E  6E23               	movwf	i2___fladd@signs,c
 12732  0017A0  5016               	movf	i2___fladd@b+3,w,c
 12733  0017A2  2416               	addwf	i2___fladd@b+3,w,c
 12734  0017A4  6E25               	movwf	i2___fladd@bexp,c
 12735  0017A6  BE15               	btfsc	i2___fladd@b+2,7,c
 12736  0017A8  8025               	bsf	i2___fladd@bexp,0,c
 12737  0017AA  5025               	movf	i2___fladd@bexp,w,c
 12738  0017AC  B4D8               	btfsc	status,2,c
 12739  0017AE  D00D               	goto	i2l965
 12740  0017B0  2825               	incf	i2___fladd@bexp,w,c
 12741  0017B2  A4D8               	btfss	status,2,c
 12742  0017B4  D008               	goto	i2l966
 12743  0017B6  0E00               	movlw	0
 12744  0017B8  6E13               	movwf	i2___fladd@b,c
 12745  0017BA  0E00               	movlw	0
 12746  0017BC  6E14               	movwf	i2___fladd@b+1,c
 12747  0017BE  0E00               	movlw	0
 12748  0017C0  6E15               	movwf	i2___fladd@b+2,c
 12749  0017C2  0E00               	movlw	0
 12750  0017C4  6E16               	movwf	i2___fladd@b+3,c
 12751  0017C6                     i2l966:
 12752  0017C6  8E15               	bsf	i2___fladd@b+2,7,c
 12753  0017C8  D006               	goto	L15
 12754  0017CA                     i2l965:
 12755  0017CA  0E00               	movlw	0
 12756  0017CC  6E13               	movwf	i2___fladd@b,c
 12757  0017CE  0E00               	movlw	0
 12758  0017D0  6E14               	movwf	i2___fladd@b+1,c
 12759  0017D2  0E00               	movlw	0
 12760  0017D4  6E15               	movwf	i2___fladd@b+2,c
 12761  0017D6                     L15:
 12762  0017D6  0E00               	movlw	0
 12763  0017D8  6E16               	movwf	i2___fladd@b+3,c
 12764  0017DA  501A               	movf	i2___fladd@a+3,w,c
 12765  0017DC  0B80               	andlw	128
 12766  0017DE  6E24               	movwf	i2___fladd@aexp,c
 12767  0017E0  5023               	movf	i2___fladd@signs,w,c
 12768  0017E2  1824               	xorwf	i2___fladd@aexp,w,c
 12769  0017E4  A4D8               	btfss	status,2,c
 12770  0017E6  8C23               	bsf	i2___fladd@signs,6,c
 12771  0017E8  501A               	movf	i2___fladd@a+3,w,c
 12772  0017EA  241A               	addwf	i2___fladd@a+3,w,c
 12773  0017EC  6E24               	movwf	i2___fladd@aexp,c
 12774  0017EE  BE19               	btfsc	i2___fladd@a+2,7,c
 12775  0017F0  8024               	bsf	i2___fladd@aexp,0,c
 12776  0017F2  5024               	movf	i2___fladd@aexp,w,c
 12777  0017F4  B4D8               	btfsc	status,2,c
 12778  0017F6  D00D               	goto	i2l970
 12779  0017F8  2824               	incf	i2___fladd@aexp,w,c
 12780  0017FA  A4D8               	btfss	status,2,c
 12781  0017FC  D008               	goto	i2l971
 12782  0017FE  0E00               	movlw	0
 12783  001800  6E17               	movwf	i2___fladd@a,c
 12784  001802  0E00               	movlw	0
 12785  001804  6E18               	movwf	i2___fladd@a+1,c
 12786  001806  0E00               	movlw	0
 12787  001808  6E19               	movwf	i2___fladd@a+2,c
 12788  00180A  0E00               	movlw	0
 12789  00180C  6E1A               	movwf	i2___fladd@a+3,c
 12790  00180E                     i2l971:
 12791  00180E  8E19               	bsf	i2___fladd@a+2,7,c
 12792  001810  D006               	goto	L16
 12793  001812                     i2l970:
 12794  001812  0E00               	movlw	0
 12795  001814  6E17               	movwf	i2___fladd@a,c
 12796  001816  0E00               	movlw	0
 12797  001818  6E18               	movwf	i2___fladd@a+1,c
 12798  00181A  0E00               	movlw	0
 12799  00181C  6E19               	movwf	i2___fladd@a+2,c
 12800  00181E                     L16:
 12801  00181E  0E00               	movlw	0
 12802  001820  6E1A               	movwf	i2___fladd@a+3,c
 12803  001822  5025               	movf	i2___fladd@bexp,w,c
 12804  001824  5C24               	subwf	i2___fladd@aexp,w,c
 12805  001826  B0D8               	btfsc	status,0,c
 12806  001828  D022               	goto	i2l973
 12807  00182A  AC23               	btfss	i2___fladd@signs,6,c
 12808  00182C  D002               	goto	i2l974
 12809  00182E  0E80               	movlw	128
 12810  001830  1A23               	xorwf	i2___fladd@signs,f,c
 12811  001832                     i2l974:
 12812  001832  C025  F026         	movff	i2___fladd@bexp,i2___fladd@grs
 12813  001836  C024  F025         	movff	i2___fladd@aexp,i2___fladd@bexp
 12814  00183A  C026  F024         	movff	i2___fladd@grs,i2___fladd@aexp
 12815  00183E  C013  F026         	movff	i2___fladd@b,i2___fladd@grs
 12816  001842  C017  F013         	movff	i2___fladd@a,i2___fladd@b
 12817  001846  C026  F017         	movff	i2___fladd@grs,i2___fladd@a
 12818  00184A  C014  F026         	movff	i2___fladd@b+1,i2___fladd@grs
 12819  00184E  C018  F014         	movff	i2___fladd@a+1,i2___fladd@b+1
 12820  001852  C026  F018         	movff	i2___fladd@grs,i2___fladd@a+1
 12821  001856  C015  F026         	movff	i2___fladd@b+2,i2___fladd@grs
 12822  00185A  C019  F015         	movff	i2___fladd@a+2,i2___fladd@b+2
 12823  00185E  C026  F019         	movff	i2___fladd@grs,i2___fladd@a+2
 12824  001862  C016  F026         	movff	i2___fladd@b+3,i2___fladd@grs
 12825  001866  C01A  F016         	movff	i2___fladd@a+3,i2___fladd@b+3
 12826  00186A  C026  F01A         	movff	i2___fladd@grs,i2___fladd@a+3
 12827  00186E                     i2l973:
 12828  00186E  0E00               	movlw	0
 12829  001870  6E26               	movwf	i2___fladd@grs,c
 12830  001872  5025               	movf	i2___fladd@bexp,w,c
 12831  001874  6E1B               	movwf	??i2___fladd& (0+255),c
 12832  001876  6A1C               	clrf	(??i2___fladd+1)& (0+255),c
 12833  001878  1E1B               	comf	??i2___fladd,f,c
 12834  00187A  1E1C               	comf	??i2___fladd+1,f,c
 12835  00187C  4A1B               	infsnz	??i2___fladd,f,c
 12836  00187E  2A1C               	incf	??i2___fladd+1,f,c
 12837  001880  5024               	movf	i2___fladd@aexp,w,c
 12838  001882  6E1D               	movwf	(??i2___fladd+2)& (0+255),c
 12839  001884  6A1E               	clrf	(??i2___fladd+3)& (0+255),c
 12840  001886  501B               	movf	??i2___fladd,w,c
 12841  001888  261D               	addwf	??i2___fladd+2,f,c
 12842  00188A  501C               	movf	??i2___fladd+1,w,c
 12843  00188C  221E               	addwfc	??i2___fladd+3,f,c
 12844  00188E  BE1E               	btfsc	??i2___fladd+3,7,c
 12845  001890  D02C               	goto	i2l977
 12846  001892  501E               	movf	??i2___fladd+3,w,c
 12847  001894  E104               	bnz	i2u522_40
 12848  001896  0E1A               	movlw	26
 12849  001898  5C1D               	subwf	??i2___fladd+2,w,c
 12850  00189A  A0D8               	btfss	status,0,c
 12851  00189C  D026               	goto	i2l977
 12852  00189E                     i2u522_40:
 12853  00189E  5013               	movf	i2___fladd@b,w,c
 12854  0018A0  1014               	iorwf	i2___fladd@b+1,w,c
 12855  0018A2  1015               	iorwf	i2___fladd@b+2,w,c
 12856  0018A4  1016               	iorwf	i2___fladd@b+3,w,c
 12857  0018A6  B4D8               	btfsc	status,2,c
 12858  0018A8  D002               	goto	i2u523_40
 12859  0018AA  0E01               	movlw	1
 12860  0018AC  D001               	goto	i2u524_40
 12861  0018AE                     i2u523_40:
 12862  0018AE  0E00               	movlw	0
 12863  0018B0                     i2u524_40:
 12864  0018B0  6E26               	movwf	i2___fladd@grs,c
 12865  0018B2  0E00               	movlw	0
 12866  0018B4  6E13               	movwf	i2___fladd@b,c
 12867  0018B6  0E00               	movlw	0
 12868  0018B8  6E14               	movwf	i2___fladd@b+1,c
 12869  0018BA  0E00               	movlw	0
 12870  0018BC  6E15               	movwf	i2___fladd@b+2,c
 12871  0018BE  0E00               	movlw	0
 12872  0018C0  6E16               	movwf	i2___fladd@b+3,c
 12873  0018C2  C024  F025         	movff	i2___fladd@aexp,i2___fladd@bexp
 12874  0018C6  D015               	goto	i2u527_40
 12875  0018C8                     i2l978:
 12876  0018C8  A026               	btfss	i2___fladd@grs,0,c
 12877  0018CA  D005               	goto	i2l979
 12878  0018CC  90D8               	bcf	status,0,c
 12879  0018CE  3026               	rrcf	i2___fladd@grs,w,c
 12880  0018D0  0901               	iorlw	1
 12881  0018D2  6E26               	movwf	i2___fladd@grs,c
 12882  0018D4  D002               	goto	i2l980
 12883  0018D6                     i2l979:
 12884  0018D6  90D8               	bcf	status,0,c
 12885  0018D8  3226               	rrcf	i2___fladd@grs,f,c
 12886  0018DA                     i2l980:
 12887  0018DA  B013               	btfsc	i2___fladd@b,0,c
 12888  0018DC  8E26               	bsf	i2___fladd@grs,7,c
 12889  0018DE  3416               	rlcf	i2___fladd@b+3,w,c
 12890  0018E0  3216               	rrcf	i2___fladd@b+3,f,c
 12891  0018E2  3215               	rrcf	i2___fladd@b+2,f,c
 12892  0018E4  3214               	rrcf	i2___fladd@b+1,f,c
 12893  0018E6  3213               	rrcf	i2___fladd@b,f,c
 12894  0018E8  2A25               	incf	i2___fladd@bexp,f,c
 12895  0018EA                     i2l977:
 12896  0018EA  5024               	movf	i2___fladd@aexp,w,c
 12897  0018EC  5C25               	subwf	i2___fladd@bexp,w,c
 12898  0018EE  A0D8               	btfss	status,0,c
 12899  0018F0  D7EB               	goto	i2l978
 12900  0018F2                     i2u527_40:
 12901  0018F2  BC23               	btfsc	i2___fladd@signs,6,c
 12902  0018F4  D029               	goto	i2l983
 12903  0018F6  5025               	movf	i2___fladd@bexp,w,c
 12904  0018F8  A4D8               	btfss	status,2,c
 12905  0018FA  D009               	goto	i2l984
 12906  0018FC  0E00               	movlw	0
 12907  0018FE  6E13               	movwf	?i2___fladd,c
 12908  001900  0E00               	movlw	0
 12909  001902  6E14               	movwf	?i2___fladd+1,c
 12910  001904  0E00               	movlw	0
 12911  001906  6E15               	movwf	?i2___fladd+2,c
 12912  001908  0E00               	movlw	0
 12913  00190A  6E16               	movwf	?i2___fladd+3,c
 12914  00190C  0012               	return	
 12915  00190E                     i2l984:
 12916  00190E  5017               	movf	i2___fladd@a,w,c
 12917  001910  2613               	addwf	i2___fladd@b,f,c
 12918  001912  5018               	movf	i2___fladd@a+1,w,c
 12919  001914  2214               	addwfc	i2___fladd@b+1,f,c
 12920  001916  5019               	movf	i2___fladd@a+2,w,c
 12921  001918  2215               	addwfc	i2___fladd@b+2,f,c
 12922  00191A  501A               	movf	i2___fladd@a+3,w,c
 12923  00191C  2216               	addwfc	i2___fladd@b+3,f,c
 12924  00191E  A016               	btfss	i2___fladd@b+3,0,c
 12925  001920  D083               	goto	i2u540_40
 12926  001922  A026               	btfss	i2___fladd@grs,0,c
 12927  001924  D006               	goto	i2l987
 12928  001926  90D8               	bcf	status,0,c
 12929  001928  3226               	rrcf	i2___fladd@grs,f,c
 12930  00192A  5026               	movf	i2___fladd@grs,w,c
 12931  00192C  0901               	iorlw	1
 12932  00192E  6E26               	movwf	i2___fladd@grs,c
 12933  001930  D002               	goto	i2l988
 12934  001932                     i2l987:
 12935  001932  90D8               	bcf	status,0,c
 12936  001934  3226               	rrcf	i2___fladd@grs,f,c
 12937  001936                     i2l988:
 12938  001936  B013               	btfsc	i2___fladd@b,0,c
 12939  001938  8E26               	bsf	i2___fladd@grs,7,c
 12940  00193A  3416               	rlcf	i2___fladd@b+3,w,c
 12941  00193C  3216               	rrcf	i2___fladd@b+3,f,c
 12942  00193E  3215               	rrcf	i2___fladd@b+2,f,c
 12943  001940  3214               	rrcf	i2___fladd@b+1,f,c
 12944  001942  3213               	rrcf	i2___fladd@b,f,c
 12945  001944  2A25               	incf	i2___fladd@bexp,f,c
 12946  001946  D070               	goto	i2u540_40
 12947  001948                     i2l983:
 12948  001948  5017               	movf	i2___fladd@a,w,c
 12949  00194A  5C13               	subwf	i2___fladd@b,w,c
 12950  00194C  5018               	movf	i2___fladd@a+1,w,c
 12951  00194E  5814               	subwfb	i2___fladd@b+1,w,c
 12952  001950  5019               	movf	i2___fladd@a+2,w,c
 12953  001952  5815               	subwfb	i2___fladd@b+2,w,c
 12954  001954  5016               	movf	i2___fladd@b+3,w,c
 12955  001956  0A80               	xorlw	128
 12956  001958  6E1B               	movwf	??i2___fladd& (0+255),c
 12957  00195A  501A               	movf	i2___fladd@a+3,w,c
 12958  00195C  0A80               	xorlw	128
 12959  00195E  581B               	subwfb	??i2___fladd& (0+255),w,c
 12960  001960  B0D8               	btfsc	status,0,c
 12961  001962  D036               	goto	i2l991
 12962  001964  C013  F01B         	movff	i2___fladd@b,??i2___fladd
 12963  001968  C014  F01C         	movff	i2___fladd@b+1,??i2___fladd+1
 12964  00196C  C015  F01D         	movff	i2___fladd@b+2,??i2___fladd+2
 12965  001970  C016  F01E         	movff	i2___fladd@b+3,??i2___fladd+3
 12966  001974  1E1B               	comf	??i2___fladd,f,c
 12967  001976  1E1C               	comf	??i2___fladd+1,f,c
 12968  001978  1E1D               	comf	??i2___fladd+2,f,c
 12969  00197A  1E1E               	comf	??i2___fladd+3,f,c
 12970  00197C  2A1B               	incf	??i2___fladd,f,c
 12971  00197E  0E00               	movlw	0
 12972  001980  221C               	addwfc	??i2___fladd+1,f,c
 12973  001982  221D               	addwfc	??i2___fladd+2,f,c
 12974  001984  221E               	addwfc	??i2___fladd+3,f,c
 12975  001986  5017               	movf	i2___fladd@a,w,c
 12976  001988  241B               	addwf	??i2___fladd,w,c
 12977  00198A  6E1F               	movwf	(??i2___fladd+4)& (0+255),c
 12978  00198C  5018               	movf	i2___fladd@a+1,w,c
 12979  00198E  201C               	addwfc	??i2___fladd+1,w,c
 12980  001990  6E20               	movwf	(??i2___fladd+5)& (0+255),c
 12981  001992  5019               	movf	i2___fladd@a+2,w,c
 12982  001994  201D               	addwfc	??i2___fladd+2,w,c
 12983  001996  6E21               	movwf	(??i2___fladd+6)& (0+255),c
 12984  001998  501A               	movf	i2___fladd@a+3,w,c
 12985  00199A  201E               	addwfc	??i2___fladd+3,w,c
 12986  00199C  6E22               	movwf	(??i2___fladd+7)& (0+255),c
 12987  00199E  0EFF               	movlw	255
 12988  0019A0  241F               	addwf	??i2___fladd+4,w,c
 12989  0019A2  6E13               	movwf	i2___fladd@b,c
 12990  0019A4  0EFF               	movlw	255
 12991  0019A6  2020               	addwfc	??i2___fladd+5,w,c
 12992  0019A8  6E14               	movwf	i2___fladd@b+1,c
 12993  0019AA  0EFF               	movlw	255
 12994  0019AC  2021               	addwfc	??i2___fladd+6,w,c
 12995  0019AE  6E15               	movwf	i2___fladd@b+2,c
 12996  0019B0  0EFF               	movlw	255
 12997  0019B2  2022               	addwfc	??i2___fladd+7,w,c
 12998  0019B4  6E16               	movwf	i2___fladd@b+3,c
 12999  0019B6  0E80               	movlw	128
 13000  0019B8  1A23               	xorwf	i2___fladd@signs,f,c
 13001  0019BA  6C26               	negf	i2___fladd@grs,c
 13002  0019BC  5026               	movf	i2___fladd@grs,w,c
 13003  0019BE  A4D8               	btfss	status,2,c
 13004  0019C0  D00F               	goto	i2l993
 13005  0019C2  0E01               	movlw	1
 13006  0019C4  2613               	addwf	i2___fladd@b,f,c
 13007  0019C6  0E00               	movlw	0
 13008  0019C8  2214               	addwfc	i2___fladd@b+1,f,c
 13009  0019CA  2215               	addwfc	i2___fladd@b+2,f,c
 13010  0019CC  2216               	addwfc	i2___fladd@b+3,f,c
 13011  0019CE  D008               	goto	i2l993
 13012  0019D0                     i2l991:
 13013  0019D0  5017               	movf	i2___fladd@a,w,c
 13014  0019D2  5E13               	subwf	i2___fladd@b,f,c
 13015  0019D4  5018               	movf	i2___fladd@a+1,w,c
 13016  0019D6  5A14               	subwfb	i2___fladd@b+1,f,c
 13017  0019D8  5019               	movf	i2___fladd@a+2,w,c
 13018  0019DA  5A15               	subwfb	i2___fladd@b+2,f,c
 13019  0019DC  501A               	movf	i2___fladd@a+3,w,c
 13020  0019DE  5A16               	subwfb	i2___fladd@b+3,f,c
 13021  0019E0                     i2l993:
 13022  0019E0  5013               	movf	i2___fladd@b,w,c
 13023  0019E2  1014               	iorwf	i2___fladd@b+1,w,c
 13024  0019E4  1015               	iorwf	i2___fladd@b+2,w,c
 13025  0019E6  1016               	iorwf	i2___fladd@b+3,w,c
 13026  0019E8  A4D8               	btfss	status,2,c
 13027  0019EA  D01C               	goto	i2l1000
 13028  0019EC  5026               	movf	i2___fladd@grs,w,c
 13029  0019EE  A4D8               	btfss	status,2,c
 13030  0019F0  D019               	goto	i2l1000
 13031  0019F2  0E00               	movlw	0
 13032  0019F4  6E13               	movwf	?i2___fladd,c
 13033  0019F6  0E00               	movlw	0
 13034  0019F8  6E14               	movwf	?i2___fladd+1,c
 13035  0019FA  0E00               	movlw	0
 13036  0019FC  6E15               	movwf	?i2___fladd+2,c
 13037  0019FE  0E00               	movlw	0
 13038  001A00  6E16               	movwf	?i2___fladd+3,c
 13039  001A02  0012               	return	
 13040  001A04  90D8               	bcf	status,0,c
 13041  001A06  3613               	rlcf	i2___fladd@b,f,c
 13042  001A08  3614               	rlcf	i2___fladd@b+1,f,c
 13043  001A0A  3615               	rlcf	i2___fladd@b+2,f,c
 13044  001A0C  3616               	rlcf	i2___fladd@b+3,f,c
 13045  001A0E  BE26               	btfsc	i2___fladd@grs,7,c
 13046  001A10  8013               	bsf	i2___fladd@b,0,c
 13047  001A12  A026               	btfss	i2___fladd@grs,0,c
 13048  001A14  D002               	goto	i2l998
 13049  001A16  80D8               	bsf	status,0,c
 13050  001A18  D001               	goto	L17
 13051  001A1A                     i2l998:
 13052  001A1A  90D8               	bcf	status,0,c
 13053  001A1C                     L17:
 13054  001A1C  3626               	rlcf	i2___fladd@grs,f,c
 13055  001A1E  5025               	movf	i2___fladd@bexp,w,c
 13056  001A20  A4D8               	btfss	status,2,c
 13057  001A22  0625               	decf	i2___fladd@bexp,f,c
 13058  001A24                     i2l1000:
 13059  001A24  AE15               	btfss	i2___fladd@b+2,7,c
 13060  001A26  D7EE               	goto	i2l996
 13061  001A28                     i2u540_40:
 13062  001A28  0E00               	movlw	0
 13063  001A2A  6E24               	movwf	i2___fladd@aexp,c
 13064  001A2C  AE26               	btfss	i2___fladd@grs,7,c
 13065  001A2E  D00A               	goto	i2l1005
 13066  001A30  C026  F01B         	movff	i2___fladd@grs,??i2___fladd
 13067  001A34  0E7F               	movlw	127
 13068  001A36  161B               	andwf	??i2___fladd,f,c
 13069  001A38  A4D8               	btfss	status,2,c
 13070  001A3A  D002               	goto	i2u543_40
 13071  001A3C  A013               	btfss	i2___fladd@b,0,c
 13072  001A3E  D002               	goto	i2l1005
 13073  001A40                     i2u543_40:
 13074  001A40  0E01               	movlw	1
 13075  001A42  6E24               	movwf	i2___fladd@aexp,c
 13076  001A44                     i2l1005:
 13077  001A44  5024               	movf	i2___fladd@aexp,w,c
 13078  001A46  B4D8               	btfsc	status,2,c
 13079  001A48  D020               	goto	i2l1008
 13080  001A4A  0E01               	movlw	1
 13081  001A4C  2613               	addwf	i2___fladd@b,f,c
 13082  001A4E  0E00               	movlw	0
 13083  001A50  2214               	addwfc	i2___fladd@b+1,f,c
 13084  001A52  2215               	addwfc	i2___fladd@b+2,f,c
 13085  001A54  2216               	addwfc	i2___fladd@b+3,f,c
 13086  001A56  A016               	btfss	i2___fladd@b+3,0,c
 13087  001A58  D018               	goto	i2l1008
 13088  001A5A  C013  F01B         	movff	i2___fladd@b,??i2___fladd
 13089  001A5E  C014  F01C         	movff	i2___fladd@b+1,??i2___fladd+1
 13090  001A62  C015  F01D         	movff	i2___fladd@b+2,??i2___fladd+2
 13091  001A66  C016  F01E         	movff	i2___fladd@b+3,??i2___fladd+3
 13092  001A6A  341E               	rlcf	??i2___fladd+3,w,c
 13093  001A6C  321E               	rrcf	??i2___fladd+3,f,c
 13094  001A6E  321D               	rrcf	??i2___fladd+2,f,c
 13095  001A70  321C               	rrcf	??i2___fladd+1,f,c
 13096  001A72  321B               	rrcf	??i2___fladd,f,c
 13097  001A74  C01B  F013         	movff	??i2___fladd,i2___fladd@b
 13098  001A78  C01C  F014         	movff	??i2___fladd+1,i2___fladd@b+1
 13099  001A7C  C01D  F015         	movff	??i2___fladd+2,i2___fladd@b+2
 13100  001A80  C01E  F016         	movff	??i2___fladd+3,i2___fladd@b+3
 13101  001A84  2825               	incf	i2___fladd@bexp,w,c
 13102  001A86  A4D8               	btfss	status,2,c
 13103  001A88  2A25               	incf	i2___fladd@bexp,f,c
 13104  001A8A                     i2l1008:
 13105  001A8A  2825               	incf	i2___fladd@bexp,w,c
 13106  001A8C  B4D8               	btfsc	status,2,c
 13107  001A8E  D003               	goto	i2u548_40
 13108  001A90  5025               	movf	i2___fladd@bexp,w,c
 13109  001A92  A4D8               	btfss	status,2,c
 13110  001A94  D00D               	goto	i2l1012
 13111  001A96                     i2u548_40:
 13112  001A96  0E00               	movlw	0
 13113  001A98  6E13               	movwf	i2___fladd@b,c
 13114  001A9A  0E00               	movlw	0
 13115  001A9C  6E14               	movwf	i2___fladd@b+1,c
 13116  001A9E  0E00               	movlw	0
 13117  001AA0  6E15               	movwf	i2___fladd@b+2,c
 13118  001AA2  0E00               	movlw	0
 13119  001AA4  6E16               	movwf	i2___fladd@b+3,c
 13120  001AA6  5025               	movf	i2___fladd@bexp,w,c
 13121  001AA8  A4D8               	btfss	status,2,c
 13122  001AAA  D002               	goto	i2l1012
 13123  001AAC  0E00               	movlw	0
 13124  001AAE  6E23               	movwf	i2___fladd@signs,c
 13125  001AB0                     i2l1012:
 13126  001AB0  A025               	btfss	i2___fladd@bexp,0,c
 13127  001AB2  D002               	goto	i2l1013
 13128  001AB4  8E15               	bsf	i2___fladd@b+2,7,c
 13129  001AB6  D001               	goto	i2l1014
 13130  001AB8                     i2l1013:
 13131  001AB8  9E15               	bcf	i2___fladd@b+2,7,c
 13132  001ABA                     i2l1014:
 13133  001ABA  90D8               	bcf	status,0,c
 13134  001ABC  3025               	rrcf	i2___fladd@bexp,w,c
 13135  001ABE  6E16               	movwf	i2___fladd@b+3,c
 13136  001AC0  BE23               	btfsc	i2___fladd@signs,7,c
 13137  001AC2  8E16               	bsf	i2___fladd@b+3,7,c
 13138  001AC4  C013  F013         	movff	i2___fladd@b,?i2___fladd
 13139  001AC8  C014  F014         	movff	i2___fladd@b+1,?i2___fladd+1
 13140  001ACC  C015  F015         	movff	i2___fladd@b+2,?i2___fladd+2
 13141  001AD0  C016  F016         	movff	i2___fladd@b+3,?i2___fladd+3
 13142  001AD4  0012               	return	
 13143  001AD6                     __end_ofi2___fladd:
 13144                           	opt stack 0
 13145                           pclatu	equ	0xFFB
 13146                           pclath	equ	0xFFA
 13147                           tblptru	equ	0xFF8
 13148                           tblptrh	equ	0xFF7
 13149                           tblptrl	equ	0xFF6
 13150                           tablat	equ	0xFF5
 13151                           prodh	equ	0xFF4
 13152                           prodl	equ	0xFF3
 13153                           intcon	equ	0xFF2
 13154                           intcon3	equ	0xFF0
 13155                           indf0	equ	0xFEF
 13156                           postinc0	equ	0xFEE
 13157                           fsr0h	equ	0xFEA
 13158                           fsr0l	equ	0xFE9
 13159                           wreg	equ	0xFE8
 13160                           postdec1	equ	0xFE5
 13161                           fsr1h	equ	0xFE2
 13162                           fsr1l	equ	0xFE1
 13163                           indf2	equ	0xFDF
 13164                           postinc2	equ	0xFDE
 13165                           postdec2	equ	0xFDD
 13166                           fsr2h	equ	0xFDA
 13167                           fsr2l	equ	0xFD9
 13168                           status	equ	0xFD8
 13169                           pclatu	equ	0xFFB
 13170                           pclath	equ	0xFFA
 13171                           tblptru	equ	0xFF8
 13172                           tblptrh	equ	0xFF7
 13173                           tblptrl	equ	0xFF6
 13174                           tablat	equ	0xFF5
 13175                           prodh	equ	0xFF4
 13176                           prodl	equ	0xFF3
 13177                           intcon	equ	0xFF2
 13178                           intcon3	equ	0xFF0
 13179                           indf0	equ	0xFEF
 13180                           postinc0	equ	0xFEE
 13181                           fsr0h	equ	0xFEA
 13182                           fsr0l	equ	0xFE9
 13183                           wreg	equ	0xFE8
 13184                           postdec1	equ	0xFE5
 13185                           fsr1h	equ	0xFE2
 13186                           fsr1l	equ	0xFE1
 13187                           indf2	equ	0xFDF
 13188                           postinc2	equ	0xFDE
 13189                           postdec2	equ	0xFDD
 13190                           fsr2h	equ	0xFDA
 13191                           fsr2l	equ	0xFD9
 13192                           status	equ	0xFD8
 13193                           
 13194                           	psect	rparam
 13195  0000                     pclatu	equ	0xFFB
 13196                           pclath	equ	0xFFA
 13197                           tblptru	equ	0xFF8
 13198                           tblptrh	equ	0xFF7
 13199                           tblptrl	equ	0xFF6
 13200                           tablat	equ	0xFF5
 13201                           prodh	equ	0xFF4
 13202                           prodl	equ	0xFF3
 13203                           intcon	equ	0xFF2
 13204                           intcon3	equ	0xFF0
 13205                           indf0	equ	0xFEF
 13206                           postinc0	equ	0xFEE
 13207                           fsr0h	equ	0xFEA
 13208                           fsr0l	equ	0xFE9
 13209                           wreg	equ	0xFE8
 13210                           postdec1	equ	0xFE5
 13211                           fsr1h	equ	0xFE2
 13212                           fsr1l	equ	0xFE1
 13213                           indf2	equ	0xFDF
 13214                           postinc2	equ	0xFDE
 13215                           postdec2	equ	0xFDD
 13216                           fsr2h	equ	0xFDA
 13217                           fsr2l	equ	0xFD9
 13218                           status	equ	0xFD8
 13219                           
 13220                           	psect	temp
 13221  000052                     btemp:
 13222                           	opt stack 0
 13223  000052                     	ds	1
 13224  0000                     int$flags	set	btemp
 13225  0000                     wtemp6	set	btemp+1
 13226                           pclatu	equ	0xFFB
 13227                           pclath	equ	0xFFA
 13228                           tblptru	equ	0xFF8
 13229                           tblptrh	equ	0xFF7
 13230                           tblptrl	equ	0xFF6
 13231                           tablat	equ	0xFF5
 13232                           prodh	equ	0xFF4
 13233                           prodl	equ	0xFF3
 13234                           intcon	equ	0xFF2
 13235                           intcon3	equ	0xFF0
 13236                           indf0	equ	0xFEF
 13237                           postinc0	equ	0xFEE
 13238                           fsr0h	equ	0xFEA
 13239                           fsr0l	equ	0xFE9
 13240                           wreg	equ	0xFE8
 13241                           postdec1	equ	0xFE5
 13242                           fsr1h	equ	0xFE2
 13243                           fsr1l	equ	0xFE1
 13244                           indf2	equ	0xFDF
 13245                           postinc2	equ	0xFDE
 13246                           postdec2	equ	0xFDD
 13247                           fsr2h	equ	0xFDA
 13248                           fsr2l	equ	0xFD9
 13249                           status	equ	0xFD8


Data Sizes:
    Strings     120
    Constant    144
    Data        4
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     72      81
    BANK0           128    119     127
    BANK1           256     69      75
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_10(CODE[7]), sprintf@c(BANK1[1]), STR_5(CODE[4]), STR_4(CODE[16]), 
		 -> STR_3(CODE[11]), STR_2(CODE[14]), STR_1(CODE[13]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_9(CODE[8]), STR_8(CODE[9]), STR_7(CODE[20]), STR_6(CODE[18]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 32
		 -> updateLCD@Buffer(BANK1[32]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    lcd_puts@s	PTR unsigned char  size(2) Largest target is 32
		 -> updateLCD@Buffer(BANK1[32]), 

    updateLCD@s	PTR unsigned char  size(2) Largest target is 16
		 -> STR_5(CODE[4]), STR_4(CODE[16]), STR_3(CODE[11]), STR_2(CODE[14]), 
		 -> STR_1(CODE[13]), 

    sp__getMode	PTR unsigned char  size(2) Largest target is 16
		 -> STR_5(CODE[4]), STR_4(CODE[16]), STR_3(CODE[11]), STR_2(CODE[14]), 
		 -> STR_1(CODE[13]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _highIsr in COMRAM

    _highIsr->_Timer3_isr
    _Timer3_isr->i2___flge
    i2___flneg->i2___xxtofl
    i2___flge->i2___fladd
    i2___fladd->i2___flneg

Critical Paths under _main in BANK0

    _updateLCD->_sprintf
    _sprintf->___fltol
    _scale->___flmul
    _fround->___flmul
    ___awdiv->___awmod
    ___llmod->___lldiv
    ___flsub->___fladd
    ___flneg->___xxtofl
    ___flge->___fladd
    _lcd_puts->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _turnOFFCooler->_set_pwm1_raw
    _set_pwm1_percent->_set_pwm1_raw
    _set_pwm1_raw->___fltol
    ___fltol->_read_adc_voltage
    ___fladd->_fround
    _read_adc_voltage->___fldiv
    ___xxtofl->___wmul
    ___flmul->___xxtofl
    ___fldiv->___flmul
    _lcd_init->_lcd_send_byte
    _lcd_send_byte->_lcd_send_nibble
    _lcd_send_nibble->_delay_cycles

Critical Paths under _highIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_updateLCD
    _updateLCD->_sprintf

Critical Paths under _highIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _highIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _highIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _highIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _highIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _highIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _highIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _highIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _highIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _highIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _highIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _highIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _highIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _highIsr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _highIsr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0   87393
                                            107 BANK0     12    12      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
                           _delay_ms
                   _enableInterrupts
                       _initTimers01
                    _init_adc_no_lib
                          _init_pwm1
                           _lcd_init
                           _lcd_putc
                   _read_adc_voltage
                   _set_pwm1_percent
                       _set_pwm1_raw
                         _setupPorts
                        _setupPorts3
                      _turnOFFCooler
                      _turnOFFHeater
                       _turnONCooler
                       _turnONHeater
                          _updateLCD
 ---------------------------------------------------------------------------------
 (1) _updateLCD                                           38    38      0   46568
                                             31 BANK1     38    38      0
                            _getMode
                         _lcd_gotoxy
                           _lcd_puts
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             48    36     12   41090
                                             91 BANK0     16     4     12
                                              0 BANK1     31    31      0
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                                9     5      4    8559
                                             45 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              13     9      4    8361
                                             45 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1664
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1820
                                              6 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         17     9      8     455
                                              0 BANK0     17     9      8
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          14     6      8     455
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     767
                                             13 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     618
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3937
                                             78 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     475
                                             20 BANK0      4     0      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8    1194
                                             78 BANK0     12     4      8
                            ___fladd (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _lcd_puts                                             2     0      2    3590
                                             14 BANK0      2     0      2
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (3) _lcd_putc                                             1     1      0    3241
                                             13 BANK0      1     1      0
                           _delay_ms
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (4) _lcd_gotoxy                                           3     2      1    1611
                                             10 BANK0      3     2      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (2) _getMode                                              4     2      2       0
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _turnONHeater                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _turnONCooler                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _turnOFFHeater                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _turnOFFCooler                                        0     0      0     500
                       _set_pwm1_raw
 ---------------------------------------------------------------------------------
 (1) _setupPorts3                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupPorts                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_pwm1_percent                                    10     6      4   12091
                                             95 BANK0     10     6      4
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl (ARG)
                       _set_pwm1_raw
 ---------------------------------------------------------------------------------
 (2) _set_pwm1_raw                                         4     2      2     500
                                             91 BANK0      4     2      2
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     913
                                             81 BANK0     10     6      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                   _read_adc_voltage (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    3614
                                             58 BANK0     20    12      8
                            ___flneg (ARG)
                           ___xxtofl (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (1) _read_adc_voltage                                    11     7      4    8490
                                             70 BANK0     11     7      4
                            ___fldiv
                            ___flmul
                             ___wmul
                           ___xxtofl
                _read_adc_raw_no_lib
 ---------------------------------------------------------------------------------
 (2) _read_adc_raw_no_lib                                  7     5      2      45
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     752
                                              6 BANK0     14    10      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     767
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    4632
                                             20 BANK0     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    2113
                                             45 BANK0     25    17      8
                            ___flmul (ARG)
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0    1768
                                             10 BANK0      1     1      0
                           _delay_ms
                      _lcd_send_byte
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (4) _lcd_send_byte                                        2     1      1    1160
                                              8 BANK0      2     1      1
                       _delay_cycles
                           _delay_ms
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (5) _lcd_send_nibble                                      2     2      0      68
                                              6 BANK0      2     2      0
                       _delay_cycles
 ---------------------------------------------------------------------------------
 (6) _delay_cycles                                         6     6      0      46
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (5) _delay_ms                                             4     2      2     426
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_pwm1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_adc_no_lib                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initTimers01                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _enableInterrupts                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _highIsr                                             20    20      0    2653
                                             52 COMRAM    20    20      0
                         _Timer3_isr
 ---------------------------------------------------------------------------------
 (9) _Timer3_isr                                           2     2      0    2653
                                             50 COMRAM     2     2      0
                          i2___fladd
                           i2___flge
                          i2___flneg
                         i2___xxtofl
 ---------------------------------------------------------------------------------
 (10) i2___xxtofl                                         14    10      4     348
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (10) i2___flneg                                           4     0      4      71
                                             14 COMRAM     4     0      4
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (10) i2___flge                                           12     4      8     234
                                             38 COMRAM    12     4      8
                          i2___fladd (ARG)
                          i2___flneg (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (10) i2___fladd                                          20    12      8    2000
                                             18 COMRAM    20    12      8
                          i2___flneg (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___fladd
     ___flneg (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___xxtofl (ARG)
       ___wmul (ARG)
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
   ___fldiv
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___wmul (ARG)
     ___xxtofl (ARG)
       ___wmul (ARG)
   ___flge
     ___fladd (ARG)
       ___flneg (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
     ___flneg (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___xxtofl (ARG)
       ___wmul (ARG)
   ___flmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___xxtofl (ARG)
       ___wmul (ARG)
   ___flneg
     ___xxtofl (ARG)
       ___wmul (ARG)
   ___fltol
     ___fladd (ARG)
       ___flneg (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     _read_adc_voltage (ARG)
       ___fldiv
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___wmul
       ___xxtofl
         ___wmul (ARG)
       _read_adc_raw_no_lib
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
   ___xxtofl
     ___wmul (ARG)
   _delay_ms
   _enableInterrupts
   _initTimers01
   _init_adc_no_lib
   _init_pwm1
   _lcd_init
     _delay_ms
     _lcd_send_byte
       _delay_cycles
       _delay_ms
       _lcd_send_nibble
         _delay_cycles
     _lcd_send_nibble
       _delay_cycles
   _lcd_putc
     _delay_ms
     _lcd_gotoxy
       _lcd_send_byte
         _delay_cycles
         _delay_ms
         _lcd_send_nibble
           _delay_cycles
     _lcd_send_byte
       _delay_cycles
       _delay_ms
       _lcd_send_nibble
         _delay_cycles
   _read_adc_voltage
     ___fldiv
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___wmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___wmul
     ___xxtofl
       ___wmul (ARG)
     _read_adc_raw_no_lib
   _set_pwm1_percent
     ___fladd
       ___flneg (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
     ___fldiv
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___wmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___fltol
       ___fladd (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       _read_adc_voltage (ARG)
         ___fldiv
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         ___wmul
         ___xxtofl
           ___wmul (ARG)
         _read_adc_raw_no_lib
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
     ___xxtofl (ARG)
       ___wmul (ARG)
     _set_pwm1_raw (ARG)
       ___fltol (ARG)
         ___fladd (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         _read_adc_voltage (ARG)
           ___fldiv
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           ___wmul
           ___xxtofl
             ___wmul (ARG)
           _read_adc_raw_no_lib
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
   _set_pwm1_raw
     ___fltol (ARG)
       ___fladd (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       _read_adc_voltage (ARG)
         ___fldiv
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         ___wmul
         ___xxtofl
           ___wmul (ARG)
         _read_adc_raw_no_lib
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
   _setupPorts
   _setupPorts3
   _turnOFFCooler
     _set_pwm1_raw
       ___fltol (ARG)
         ___fladd (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         _read_adc_voltage (ARG)
           ___fldiv
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           ___wmul
           ___xxtofl
             ___wmul (ARG)
           _read_adc_raw_no_lib
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
   _turnOFFHeater
   _turnONCooler
   _turnONHeater
   _updateLCD
     _getMode
     _lcd_gotoxy
       _lcd_send_byte
         _delay_cycles
         _delay_ms
         _lcd_send_nibble
           _delay_cycles
     _lcd_puts
       _lcd_putc
         _delay_ms
         _lcd_gotoxy
           _lcd_send_byte
             _delay_cycles
             _delay_ms
             _lcd_send_nibble
               _delay_cycles
         _lcd_send_byte
           _delay_cycles
           _delay_ms
           _lcd_send_nibble
             _delay_cycles
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___flneg (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
       ___flge
         ___fladd (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___flneg
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___flsub
         ___fladd
           ___flneg (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___fltol
         ___fladd (ARG)
           ___flneg (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         _read_adc_voltage (ARG)
           ___fldiv
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           ___wmul
           ___xxtofl
             ___wmul (ARG)
           _read_adc_raw_no_lib
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___wmul
       ___xxtofl
         ___wmul (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)

 _highIsr (ROOT)
   _Timer3_isr
     i2___fladd
       i2___flneg (ARG)
         i2___xxtofl (ARG)
       i2___xxtofl (ARG)
     i2___flge
       i2___fladd (ARG)
         i2___flneg (ARG)
           i2___xxtofl (ARG)
         i2___xxtofl (ARG)
       i2___flneg (ARG)
         i2___xxtofl (ARG)
       i2___xxtofl (ARG)
     i2___flneg
       i2___xxtofl (ARG)
     i2___xxtofl

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     45      4B       7       29.3%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     77      7F       5       99.2%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     48      51       1       64.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     11B      34        0.0%
DATA                 0      0     11B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Aug  8 20:55:22 2023

           ?_read_adc_voltage 00C6                  ___fldiv@aexp 00C5                  ___fldiv@bexp 00C4  
                ___fldiv@sign 00B9            ??_read_adc_voltage 00CA                            _HS 004B  
                          _SP 00FB                            _RT 00F7                ?_lcd_send_byte 0088  
                ___awdiv@sign 008B           ___wmul@multiplicand 0082                   __CFG_BORV$3 000000  
                __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000  
                __CFG_CP3$OFF 000000                   __CFG_OSC$XT 000000                   __CFG_LVP$ON 000000  
                 __CFG_WDT$ON 000000                           l121 1AFC                           l210 357E  
                         l130 1D44                           l122 1B80                           l203 36A2  
                         l131 1DEA                           l204 3692                           l140 336C  
                         l124 1BE2                           l141 3376                           l142 3380  
                         l230 34C4                           l126 1C28                           l223 3246  
                         l303 309C                           l143 33B6                           l231 34B0  
                         l151 27E4                           l232 34E0                           l240 3302  
                         l400 014A                           l209 3586                           l225 3274  
                         l137 338A                           l233 34B6                           l401 0106  
                         l129 1D5C                           l218 3404                           l138 3360  
                         l234 34BA                           l242 331E                           l235 34BE  
                         l243 332C                           l411 0174                           l147 27CE  
                         l244 333A                           l404 02BE                           l420 0236  
                         l412 019C                           l421 0224                           l413 01AC  
                         l430 0362                           l414 01A6                           l239 3346  
                         l423 0282                           l407 0170                           l248 36EE  
                         l440 0556                           l432 03D2                           l408 0300  
                         l424 024A                           l249 36DA                           l433 0454  
                         l417 0204                           l274 350C                           l450 06C0  
                         l426 0298                           l418 021A                           l435 0486  
                         l427 02AC                           l700 2AC0                           l380 2064  
                         l428 09C6                           l460 07DA                           l452 06F6  
                         l436 04D2                           l453 06DC                           l437 05BE  
                         l429 0314                           l710 2B42                           l390 10D8  
                         l462 0818                           l446 0636                           l279 243A  
                         l711 2B76                           l383 0EBE                           l471 0A00  
                         l463 081C                           l712 2BB4                           l800 2942  
                         l384 0DC6                           l472 0A18                           l464 0840  
                         l456 07CE                           l713 2BF2                           l705 2AF4  
                         l801 296A                           l377 1F74                           l481 0AFE  
                         l465 0996                           l457 072E                           l706 2AE8  
                         l810 29BE                           l490 0B90                           l482 0B08  
                         l466 08A2                           l394 0020                           l803 29A6  
                         l387 0E8C                           l483 0B34                           l459 07F4  
                         l395 003E                           l740 2E62                           l804 2996  
                         l388 1012                           l484 0B3E                           l476 0A7C  
                         l468 09BC                           l717 35C0                           l661 30C0  
                         l469 09A2                           l397 0070                           l742 2ECE  
                         l670 3126                           l662 30D0                           l478 0AA6  
                         l751 2F0E                           l743 2EBE                           l479 0AD2  
                         l399 0162                           l664 30EE                           l809 29CA  
                         l665 30E6                           l681 3204                           l489 0C26  
                         l682 320E                           l674 31CA                           l683 321C  
                         l675 31D6                           l748 2EF2                           l668 310E  
                         l749 2EE6                           l693 2A02                           l669 3118  
                         l677 31EC                           l678 31E4                           l695 2A20  
                         l696 2A62                           l697 2A92                           l857 373E  
                         l970 14D6                           l971 14D2                           l883 3160  
                         l699 2AD0                           l980 159E                           l884 3154  
                         l973 1532                           l965 148E                           l893 32B4  
                         l797 28DC                           l974 14F6                           l966 148A  
                         l894 32A8                           l991 1694                           l983 160C  
                         l887 3194                           l799 2908                           l984 15D2  
                         l888 31A2                           l993 16A4                           l977 15AE  
                         l897 32DC                           l978 158C                           l898 32EA  
                         l987 15F6                           l979 159A                           l996 16C8  
                         l988 15FA                           l998 16DE                  __CFG_CPB$OFF 000000  
                         _PR2 000FCB                  __CFG_CPD$OFF 000000                   i2___fladd@a 0017  
                 i2___fladd@b 0013                           _lcd 000F83                  ___awmod@sign 0085  
                  i2___xxtofl 2624                           prod 000FF3     read_adc_voltage@raw_value 00CA  
                         wreg 000FE8                  ___flmul@aexp 00A5                  ___flmul@bexp 00A6  
                ___flmul@sign 00A0                  ___flmul@temp 00AB                  ___flmul@prod 00A7  
                 lcd_gotoxy@x 008B                   lcd_gotoxy@y 008A                  ___fltol@exp1 00DA  
                        l1000 16E8                          l1100 2612                          l1012 1774  
                        l1013 177C                          l1005 1708                          l1022 20EC  
                        l1014 177E                          l1031 219A                          l1023 20E8  
                        l1040 225E                          l1032 2248                          l1008 174E  
                        l1033 21F8                          l1050 2346                          l1034 2220  
                        l1026 212C                          l1051 2352                          l1027 2128  
                        l1052 2354                          l1036 2246                          l1060 117C  
                        l1029 2172                          l1061 1178                          l1046 22B4  
                        l1062 118C                          l1039 227C                          l1063 11AA  
                        l1048 22F8                          l1080 1446                          l1056 113C  
                        l1049 231C                          l1057 1138                          l1074 13A2  
                        l1058 114C                          l1067 136A                          l1091 2590  
                        l1076 13E6                          l1068 134C                          l1092 2578  
                        l1084 2512                          l1077 1404                          l1085 2522  
                        l1094 25C2                          l1086 2540                          l1079 1428  
                        l1095 25B6                          l1088 2552                          l1089 2546  
                        l1099 25E0                          l3226 2C2A                          l4312 07DA  
                        l4240 04D2                          l4172 024A                          l4166 0224  
                        l4248 0524                          l4428 0B90                          l4292 06EE  
                        l4268 063A                          l4374 0A1C                          l4288 06DC  
                        l4580 2346                          l4922 326C                          l4908 323E  
                        STR_1 FFCB                          STR_2 FFBD                          STR_3 FFD8  
                        STR_4 FFAD                          STR_5 FFFB                          STR_6 FF9B  
                        STR_7 FF87                          STR_8 FFE3                          STR_9 FFEC  
                        u3100 1572                          u3110 1574                          u3300 1704  
                        u3140 15B6                          u4020 2E80                          u4200 25CC  
                        u4120 32B8                          u4025 2E76                          u5010 22B0  
                        u3090 1562                          u4060 2EF8                          u4300 01E0  
                        u3350 175A                          u3270 16EC                          u4310 01E6  
                        u5040 2306                          u3520 139E                          u5050 232A  
                        u4090 3164                          u3610 30F2                          u4307 01D6  
                        u3460 1198                          u4260 00DC                          u3550 13F4  
                        u3470 130E                          u3560 1412                          u4600 0812  
                        u4360 0274                          u4530 0678                          u4450 0498  
                        u3475 1304                          u3811 28EC                          u4460 04E4  
                        u3670 31F0                          u4367 026A                          u4800 0C38  
                        u4560 0706                          u4810 0C58                          u4490 0524  
                        u3940 2AFA                          u3870 29D0                          u4590 0802  
                        u3791 28C0                          u2985 33CE                          u2986 33D0  
                        u4770 0B46                          u4690 0A5A                          u5660 3260  
                        u4780 0B68                          u5877 33FC                          u5887 3694  
                        _TMR3 000FB2              ?_lcd_send_nibble 0001                  i2___flge@ff1 0027  
                i2___flge@ff2 002B                   main@raw_val 00ED                          _main 1AD6  
                        fsr0h 000FEA                          fsr1h 000FE2                          indf0 000FEF  
                        fsr2h 000FDA                          fsr0l 000FE9                          indf2 000FDF  
                        fsr1l 000FE1                          fsr2l 000FD9                          btemp 0052  
                i2___flneg@f1 000F                          prodh 000FF4                          prodl 000FF3  
                        start 000E                 __CFG_IESO$OFF 000000               ___fldiv@new_exp 00BE  
       __size_of_turnONHeater 0004                  _sprintf$1901 0100         __size_of_turnONCooler 0004  
               __CFG_MCLRE$ON 000000                  ___param_bank 000000              _set_pwm1_percent 2FEA  
        __end_of_delay_cycles 35A2                 ___fltol@sign1 00D9               __end_of___fladd 179A  
                       ?_main 0001               __end_of___fldiv 2370               __end_of___awdiv 3130  
             __end_of___flneg 35D2                         STR_10 FFF4               __end_of___awmod 3226  
             __end_of___flmul 145C               __end_of___flsub 34AA               __end_of___fltol 2F20  
             __end_of___lldiv 31B4                         _T0CON 000FD5               ___awdiv@divisor 0088  
             __end_of___llmod 32FC                         _T2CON 000FCA                         i2l113 2DDA  
                       i2l115 2DF6                         i2l180 2F30                         i2l175 2FBE  
                       i2l176 2F22                         i2l178 2F26                         i2l179 2F2A  
                       i2l710 2C62                         i2l711 2C96                         i2l712 2CD4  
                       i2l713 2D12                         i2l717 361E                         i2l970 1812  
                       i2l971 180E                         i2l980 18DA               ___awdiv@counter 008A  
                       i2l973 186E                         i2l965 17CA                         i2l974 1832  
                       i2l966 17C6        __size_of_turnOFFHeater 0004                         i2l991 19D0  
                       i2l983 1948                         i2l984 190E                         i2l993 19E0  
                       i2l977 18EA                         i2l978 18C8                         i2l987 1932  
                       i2l979 18D6                         i2l996 1A04                         i2l988 1936  
                       i2l998 1A1A                         _RCREG 000FAE                         _RCSTA 000FAB  
      __size_of_turnOFFCooler 0012                         _TMR0H 000FD7                         _TMR1H 000FCF  
                       _TMR0L 000FD6                         _TMR1L 000FCE                         _TMR3H 000FB3  
                       _TMR3L 000FB2                         _SPBRG 000FAF       read_adc_voltage@channel 00CC  
                       _TRISA 000F92                         _TRISB 000F93                         _TRISC 000F94  
                       _TRISD 000F95                         _TRISE 000F96                         _TXREG 000FAD  
                       _TXSTA 000FAC                 __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000  
               __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000  
               i2___fladd@grs 0026               __end_of_getMode 33C0                __CFG_EBTR0$OFF 000000  
              __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000  
              __CFG_EBTR3$OFF 000000               __end_of_highIsr 2E42                 __CFG_WRTB$OFF 000000  
               __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000  
             __end_of_dpowers FF87                         _scale 0C66               __end_of_isdigit 3746  
             _init_adc_no_lib 3768                  _turnONHeater 377E                         pclath 000FFA  
            __end_ofi2___flge 2D4E                  _turnONCooler 3782                         tablat 000FF5  
            _enableInterrupts 3774                         status 000FD8       read_adc_voltage@voltage 00CD  
                       wtemp6 0053               __end_of_sprintf 0C66            __size_ofi2___fladd 033C  
          __size_ofi2___flneg 002E                __CFG_PBADEN$ON 000000               __initialization 3414  
                __end_of_main 1DF4               ??_lcd_send_byte 0089                        ??_main 00EB  
               __activetblptr 000003                 ?_initTimers01 0001          __size_of__tdiv_to_l_ 0134  
                 ?i2___xxtofl 0001                        _ADCON0 000FC2                        _ADCON1 000FC1  
                      _ADCON2 000FC0              ___llmod@dividend 008D                        ?_scale 00AD  
                      _ADRESH 000FC4                        _ADRESL 000FC3                        _CCPR1L 000FBE  
            ___awdiv@dividend 0086                        i2l1000 1A24                        i2l1012 1AB0  
                      i2l1100 2762                        i2l1013 1AB8                        i2l1005 1A44  
                      i2l1014 1ABA                        i2l1008 1A8A                        i2l1091 26E0  
                      i2l1092 26C8                        i2l1084 2662                        i2l1085 2672  
                      i2l1094 2712                        i2l1086 2690                        i2l1095 2706  
                      i2l1088 26A2                        i2l1089 2696                        i2l1099 2730  
                      i2l3222 2D4A                        _SPBRGH 000FB0              __end_of___xxtofl 2624  
               _turnOFFHeater 3786                 _turnOFFCooler 3746              __end_of_delay_ms 36B0  
              i2___fladd@aexp 0024                i2___fladd@bexp 0025                __CFG_XINST$OFF 000000  
            __end_of__powers_ FF2B                    _Timer3_isr 2F20              __end_of_lcd_init 3294  
                      ___flge 2B0C              __end_of_lcd_putc 335E              __end_of_lcd_puts 36FE  
                   ??___fladd 00C2                        ___wmul 36B0                     ??___fldiv 00B5  
                   ??___awdiv 008A                     ??___flneg 0098                __CFG_STVREN$ON 000000  
                   ??___awmod 0084                     ??___flmul 009C                     ??___flsub 00D6  
                   ??___fltol 00D5                     ??___lldiv 0088                     ??___llmod 0095  
                      _fround 1DF4                        clear_0 3448              ___awdiv@quotient 008C  
             ___awmod@divisor 0082               ___awmod@counter 0084                     ??_getMode 0082  
                   ??_highIsr 0035                ??_initTimers01 0080       __end_of_init_adc_no_lib 3774  
                __pdataCOMRAM 004E             __end_ofi2___fladd 1AD6                     ??_isdigit 0080  
           __end_ofi2___flneg 3630                  __mediumconst FEF6                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8                     ??_sprintf 00E7  
                ?_setupPorts3 0001               _heaterDutyCycle 004D                    ___flge@ff1 00CE  
                  ___flge@ff2 00D2                  ___xxtofl@arg 0090                  ___xxtofl@exp 008F  
                ___xxtofl@val 0086                    __accesstop 0080       __end_of__initialization 3458  
              ?_turnOFFHeater 0001                    ___flneg@f1 0094                ?_turnOFFCooler 0001  
               ___rparam_used 000001                    ___fltol@f1 00D1           __size_ofi2___xxtofl 0150  
              __pcstackCOMRAM 0001         __size_of_delay_cycles 0034                 __end_of_scale 110A  
                   ?i2___flge 0027                    __div_to_l_ 29E2     __size_of_read_adc_voltage 0160  
           lcd_gotoxy@address 008C               __div_to_l_@exp1 008D               __div_to_l_@cntr 008C  
                     ??_scale 00B1               __div_to_l_@quot 0088                  sprintf@width 0116  
    __end_of_set_pwm1_percent 30AA                    __pbssBANK0 00F7                    __pbssBANK1 0145  
 __end_of_read_adc_raw_no_lib 3532                  _delay_cycles 356E                main@coolAmount 00EF  
               __div_to_l_@f1 0080                 __div_to_l_@f2 0084            __size_of_init_pwm1 0010  
                 ?_Timer3_isr 0001                lcd_send_byte@n 0088                       ?___flge 00CE  
                     ?___wmul 0080              lcd_send_nibble@n 0087                       _CCP1CON 000FBD  
                     ?_fround 00AD      __end_of_enableInterrupts 377A                    ??i2___flge 002F  
            ?_init_adc_no_lib 0001                     ?___xxtofl 0086                     ?_delay_ms 0080  
          __size_of_updateLCD 013A                    _lcd_gotoxy 34AA                     ?_lcd_init 0001  
                   ?_lcd_putc 0001                     ?_lcd_puts 008E               ??_turnOFFHeater 0080  
             ??_turnOFFCooler 00DF               i2___fladd@signs 0023          __end_of_initTimers01 365C  
           __end_of__npowers_ FF5F                       __Hparam 0000                    _scale$1900 00B1  
                     __Lparam 0000      __size_of_lcd_send_nibble 0026               __size_of___flge 0122  
                     ___fladd 145C                       ___fldiv 20BA                       ___awdiv 30AA  
                     ___flneg 35A2                       ___awmod 31B4                       ___flmul 110A  
                     ___flsub 3462                       ___fltol 2E42                       ___lldiv 3130  
             __size_of___wmul 0028                       ___llmod 3294                 ?_set_pwm1_raw 00DB  
                     __pcinit 3414               __size_of_fround 02C6                       __ramtop 1000  
                     _getMode 335E                       __ptext0 1AD6                       __ptext1 2774  
                     __ptext2 0012                       __ptext3 0C66                       __ptext4 3724  
                     __ptext5 1DF4                       __ptext6 31B4                       __ptext7 30AA  
                     __ptext8 28AE                       __ptext9 29E2                       _highIsr 0008  
                   _T0CONbits 000FD5                     _T1CONbits 000FCD                   ?__div_to_l_ 0080  
                     _dpowers FF5F                     _T2CONbits 000FCA                       _isdigit 3724  
                ??i2___xxtofl 0005                    ??___xxtofl 008A                     _T3CONbits 000FB1  
           __end_of_init_pwm1 3768              ___awmod@dividend 0080                    ??_delay_ms 0082  
                     main@RPS 00EB           __size_of_Timer3_isr 00CA                       _sprintf 0012  
                  ??_lcd_init 008A                       main@tst 00F3                __pintcode_body 2D4E  
                  ??_lcd_putc 008D                    ??_lcd_puts 0090          end_of_initialization 3458  
        __size_of_setupPorts3 003C                       int_func 2D4E          lcd_send_byte@cm_data 0089  
              i2___xxtofl@arg 000B                i2___xxtofl@exp 000A                i2___xxtofl@val 0001  
             ___lldiv@divisor 0084               ___lldiv@counter 008C             __end_of_updateLCD 28AE  
                   _RCSTAbits 000FAB            __end_ofi2___xxtofl 2774                       postdec1 000FE5  
                     postdec2 000FDD                       postinc0 000FEE                       postinc2 000FDE  
              ??_set_pwm1_raw 00DD                __tdiv_to_l_@f1 0080                __tdiv_to_l_@f2 0084  
       __end_of_lcd_send_byte 3414                 ??__tdiv_to_l_ 0088                     _PORTCbits 000F82  
                   _PORTEbits 000F84                    _setupPorts 365C           set_pwm1_percent@tmp 00E3  
                 ___fladd@grs 00CD                 ___xxtofl@sign 008E              _read_adc_voltage 2370  
                   _TRISCbits 000F94                   ?_lcd_gotoxy 008A                   ___fldiv@grs 00C0  
                 ___fldiv@rem 00BA                     i2___fladd 179A                     i2___flneg 3602  
             _LCD_INIT_STRING 004E                     _RPS_count 0149                   ___flmul@grs 00A1  
                 _CCP1CONbits 000FBD                     _TXSTAbits 000FAC           __size_of__div_to_l_ 012A  
              __end_of___flge 2C2E                __end_of___wmul 36D8                   _BAUDCONbits 000FB8  
               __pidataCOMRAM 377A                 delay_cycles@n 0083                 delay_cycles@x 0084  
           ??_lcd_send_nibble 0086                __end_of_fround 20BA             __size_ofi2___flge 0120  
         start_initialization 3414           __end_of__tdiv_to_l_ 29E2                    ?i2___fladd 0013  
                  ?i2___flneg 000F         __size_of_initTimers01 002C             ?_set_pwm1_percent 00DF  
          ??_set_pwm1_percent 00E3               ___llmod@divisor 0091               ___llmod@counter 0095  
                ??_Timer3_isr 0033                      ??___flge 00D6           __size_of_lcd_gotoxy 0048  
                    ??___wmul 0084  read_adc_raw_no_lib@raw_value 0084              __CFG_LPT1OSC$OFF 000000  
                    ??_fround 00B1                 sprintf@tmpval 010C             ?_enableInterrupts 0001  
                 ?_setupPorts 0001                     ___fladd@a 00BE                     ___fladd@b 00BA  
                  fround@prec 00B9                     ___fldiv@a 00B1                     ___fldiv@b 00AD  
          ??_enableInterrupts 0080                  _initTimers01 3630                     ___flmul@a 0098  
                   ___flmul@b 0094                   __pbssCOMRAM 0049                     ___flsub@a 00D2  
                   ___flsub@b 00CE                 __pcstackBANK0 0080                 __pcstackBANK1 0100  
           __size_of___xxtofl 0154                  _isdigit$1531 0081             __size_of_delay_ms 002A  
          __end_of_Timer3_isr 2FEA                 ?_turnONHeater 0001          __end_of_set_pwm1_raw 3602  
               ?_turnONCooler 0001             __size_of_lcd_init 006E                   sprintf@flag 010A  
           __size_of_lcd_putc 0062             __size_of_lcd_puts 0026                   sprintf@fval 0118  
                 sprintf@prec 011C             __CFG_CCP2MX$PORTC 000000                     __pintcode 0008  
__size_of_read_adc_raw_no_lib 0040                 __pmediumconst FEF6                      ?___fladd 00BA  
                    ?___fldiv 00AD                      ?___awdiv 0086                      ?___flneg 0094  
                    ?___awmod 0080                      ?___flmul 0094                      ?___flsub 00CE  
                    ?___fltol 00D1                      ?___lldiv 0080                      ?___llmod 008D  
                   __npowers_ FF2B                     _coolError 0145                      ?_getMode 0080  
                 __tdiv_to_l_ 28AE                      ?_highIsr 0001               updateLCD@Buffer 011F  
                ??__div_to_l_ 0088                      ?_isdigit 0001                   ??i2___fladd 001B  
                 ??i2___flneg 0013                ??_turnONHeater 0080                      ?_sprintf 00DB  
                   _init_pwm1 3758                __size_of_scale 04A4                ??_turnONCooler 0080  
    __size_of_init_adc_no_lib 000C         __end_of_turnOFFHeater 378A                ___wmul@product 0084  
       __end_of_turnOFFCooler 3758                     delay_ms@n 0080                     delay_ms@x 0082  
         __size_of_setupPorts 002A                      _PIR1bits 000F9E            __end_of__div_to_l_ 2B0C  
                    i2u522_40 189E                      i2u523_40 18AE                      _PIR2bits 000FA1  
                    i2u540_40 1A28                      i2u524_40 18B0      __end_of_read_adc_voltage 24D0  
                    i2u543_40 1A40                      i2u527_40 18F2                      i2u563_40 2FAC  
                    i2u548_40 1A96                      i2u564_48 2FAE                      i2u558_40 271C  
            __CFG_WDTPS$32768 000000    read_adc_raw_no_lib@channel 0086                     _updateLCD 2774  
                  _ADCON0bits 000FC2                      i2___flge 2C2E             ___wmul@multiplier 0080  
                   lcd_init@i 008A                     lcd_putc@c 008D                     lcd_puts@s 008E  
                ??_lcd_gotoxy 008B                    updateLCD@s 013F                 ??_setupPorts3 0080  
                  ?_init_pwm1 0001                   _INTCON3bits 000FF0                     copy_data0 3428  
             _lcd_send_nibble 36FE                      __Hrparam 0000         set_pwm1_raw@raw_value 00DB  
                    __Lrparam 0000            __CFG_BOREN$SBORDIS 000000            __end_of_lcd_gotoxy 34F2  
            __size_of___fladd 033E              __size_of___fldiv 02B6              __size_of___awdiv 0086  
            __size_of___flneg 0030              __size_of___awmod 0072              __size_of___flmul 0352  
            __size_of___flsub 0048              __size_of___fltol 00DE              __size_of___lldiv 0084  
                _selectedMode 0049              __size_of___llmod 0068                    ?_updateLCD 0001  
                 _fround$1898 00B5                   _fround$1899 00B1              __size_of_getMode 0062  
            __size_of_highIsr 2E3A                    sprintf@len 0108                    sprintf@exp 0114  
                  sprintf@val 0110                      ___xxtofl 24D0         __size_of_set_pwm1_raw 0030  
            __size_of_isdigit 0022                      _delay_ms 3686                      __ptext10 3294  
                    __ptext11 3130                      __ptext20 3782                      __ptext12 3462  
                    __ptext21 3786                      __ptext13 35A2                      __ptext30 34F2  
                    __ptext22 3746                      __ptext14 2B0C                      __ptext31 24D0  
                    __ptext23 3532                      __ptext15 36D8                      __ptext40 3758  
                    __ptext32 36B0                      __ptext24 365C                      __ptext16 32FC  
                    __ptext41 3768                      __ptext33 110A                      __ptext25 2FEA  
                    __ptext17 34AA                      __ptext42 3630                      __ptext34 20BA  
                    __ptext26 35D2                      __ptext18 335E                      __ptext43 3774  
                    __ptext35 3226                      __ptext27 2E42                      __ptext19 377E  
                    __ptext36 33C0                      __ptext28 145C                      __ptext45 2F20  
                    __ptext37 36FE                      __ptext29 2370                      __ptext46 2624  
                    __ptext38 356E                      __ptext47 3602                      __ptext39 3686  
                    __ptext48 2C2E                      __ptext49 179A                      __powers_ FEF7  
                    _lcd_init 3226                      _lcd_putc 32FC                      _lcd_puts 36D8  
            __size_of_sprintf 0C54       set_pwm1_percent@raw_val 00E7        __size_of_lcd_send_byte 0054  
               ?_delay_cycles 0001                 __size_of_main 031E           __end_of_setupPorts3 356E  
           ??_init_adc_no_lib 0080                      int$flags 0052     __size_of_set_pwm1_percent 00C0  
        __end_of_turnONHeater 3782          __end_of_turnONCooler 3786                  _set_pwm1_raw 35D2  
                ??_setupPorts 0080                    _INTCONbits 000FF2                      isdigit@c 0082  
         _read_adc_raw_no_lib 34F2                      scale@scl 00B5                   ??_init_pwm1 0080  
                    intlevel2 0000                     sprintf@ap 0106                     sprintf@cp 0104  
     __end_of_lcd_send_nibble 3724              __tdiv_to_l_@exp1 0090                     sprintf@sp 00DB  
            __tdiv_to_l_@cntr 008F                ??_delay_cycles 0080              __tdiv_to_l_@quot 008B  
             i2___xxtofl@sign 0009     __size_of_enableInterrupts 0006              ___lldiv@dividend 0080  
          __end_of_setupPorts 3686                    _OSCCONbits 000FD3          ?_read_adc_raw_no_lib 0080  
               _updateLCD$621 0141                 _updateLCD$622 0143                   ??_updateLCD 00EB  
               _lcd_send_byte 33C0                  ?__tdiv_to_l_ 0080                      sprintf@c 011E  
                    sprintf@f 00DD              ___lldiv@quotient 0088         set_pwm1_percent@value 00DF  
               ___fladd@signs 00CA                   _setupPorts3 3532                  ___fladd@aexp 00CB  
                ___fladd@bexp 00CC         ??_read_adc_raw_no_lib 0082  
